{
  "hash": "42467de4802b45993b0340b2e1f7e192",
  "result": {
    "engine": "knitr",
    "markdown": "---\noutput: \n  revealjs::revealjs_presentation:\n    theme: simple\n    highlight: haddock\n    center: true\n    transition: slide\n    css: estilo.css\n    self_contained: false\n    reveal_options:\n      slideNumber: true\n      previewLinks: true\n---\n\n\n\n\n\n# Semillero de R - FacCA {data-background=\"fondo1.png\"}\n\n# Mundo R + `tidyverse` I {data-background=\"fondo_tidy.png\"}\n\n# Mundo R {data-background=\"lengR.png\"}\n\n## Elementos básicos con R {data-background=\"lengR.png\"}\n\n- Entradas básicas:\n    - **`#:`** comentario.\n    - **`<-:`** asignación.\n    - **`help()`** o **`?`:** sistema de ayudas en R.\n    - **`getwd():`** obtener el directorio de trabajo.\n    - **`CTRL + Enter`:** Ejecutar código. \n    - **`CTRL + L`:** Limpiar consola.\n- Operadores Aritméticos:\n    - **`+`:** suma.\n    - **`-`:** resta.\n    - **`*`:** multiplicación.\n    - **`/`:** división.\n    - **`^`:** potencia.\n    - **`%%`:** división entera.\n    - **`%/%`:** división modular.\n\n## Elementos básicos con R {data-background=\"lengR.png\"}\n\n- Operadores lógicos:\n    - **`==`:** igualdad.\n    - **`!=`:** diferencia.\n    - **`>`:** mayor.\n    - **`<`:** menor.\n    - **`>=`:** mayor o igual.\n    - **`<=`:** menor o igual.\n    - **`!`:** negación.\n\n## Elementos básicos con R {data-background=\"lengR.png\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n2 == 2 # Igualdad\n## [1] TRUE\n2 != 2 # Diferencia\n## [1] FALSE\n2 > 2  # Mayor\n## [1] FALSE\n2 < 2  # Menor\n## [1] FALSE\n2 >= 2 # Mayor o igual\n## [1] TRUE\n2 <= 2 # Menor o igual\n## [1] TRUE\n!(2 + 2) == 4 # Negación\n## [1] FALSE\n```\n:::\n\n\n\n## Elementos básicos con R {data-background=\"lengR.png\"}\n\n- Conjunción y disyunción:\n    - **`&`** - **`&&`:** conjunción.\n    - **`|`** - **`||`:** disyunción.\n  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nflores <- c(10, 2, 5)\nfrutos <- c(6, 7, 3)\n\n# Conjunción\n(flores > 3) & (frutos <= 2)\n## [1] FALSE FALSE FALSE\n\n# Disyunción\n(flores > 3) | (frutos <= 2)\n## [1]  TRUE FALSE  TRUE\n```\n:::\n\n\n\n## Elementos básicos con R {data-background=\"lengR.png\"}\n\n- Tipos de datos en R\n    - **Numéricos:** `numeric`\n    - **Enteros:** `integer`\n    - **Caracteres:** `character`\n    - **Lógicos:** `logical`\n    - **Complejos:** `complex`\n    - **Nota:** la función `class()` permite obtener el tipo de dato de un objeto o variable.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nnumerico <- 3.5\nentero <- 2L\ncaracter <- \"Semillero de R\"\nlogico <- TRUE\ncomplejo <- 1 + 2i\n\nclass(numerico)\n## [1] \"numeric\"\nclass(entero)\n## [1] \"integer\"\nclass(caracter)\n## [1] \"character\"\nclass(logico)\n## [1] \"logical\"\nclass(complejo)\n## [1] \"complex\"\n```\n:::\n\n\n\n## Objetos estructurados {data-background=\"lengR.png\"}\n\n- **Vectores:**\n    - Función `c()` para generar vectores.\n    - **Características:** sólo almacena datos de un mismo tipo.\n- **Matrices:**\n    - Función `matrix()` para crear matrices.\n    - **Características:** sólo almacena datos de un mismo tipo.     \n- **Factores:**\n    - Caracteres con jerarquías o niveles. \n    - Útil para manipular variables categóricas (nominales u ordinales).\n    - La función `levels()` permite observar los niveles de un factor.\n    - Las funciones `table()` y `prop.table()` permiten obtener las frecuencias absolutas y relativas, respectivamente.\n    - Los niveles se organizan por defecto por orden alfabético.\n- **Listas:**\n    - Función `list()` para crear listas.\n    - Las listas poseen longitud.\n    - Las listas poseen nombres de variables (`names()`).\n    - **Características:** permite almacenar cualquier tipo de dato.    \n\n## Objetos estructurados {data-background=\"lengR.png\"}    \n    \n- **Data frame:**\n    - Función `data.frame()` permite generar marcos de datos (bases de datos).\n    - Los marcos de datos poseen nombres, longitud y dimensión.\n    - La función `str()` es de gran utilidad para observar la estructura interna de un objeto (en este caso de una base de datos).\n    - El operador `$` permitirá elegir variables de la base de datos.\n    - El operador `$` también facilitará la agregación de variables.\n    - La función `head()` permite mostrar un número determinado de datos iniciales.\n    - La función `tail()` permite mostrar un número determinado de datos finales. \n    - **Características:**\n        - Permite almacenar datos de diferente tipo.\n        - Cada columna representa una variable (vector).\n        - Cada fila es una observación, registro o individuo.\n        - Todas las variables deben tener la misma longitud.\n        - Las bases de datos se pueden crear, importar o utilizar las que trae R por defecto (`data()`).\n\n## Objetos estructurados {data-background=\"lengR.png\"}  \n        \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n########### EJEMPLO DE UN FACTOR ##############################################\n\n# Niveles por defecto\nfactor1 <- factor(x = c(\"Hombre\", \"Mujer\", \"Hombre\", \"Mujer\"))\n\nclass(factor1)\n## [1] \"factor\"\n\nlevels(factor1)\n## [1] \"Hombre\" \"Mujer\"\n\n# Manipulando los niveles del factor\nfactor2 <- factor(x = c(\"Hombre\", \"Mujer\", \"Hombre\", \"Mujer\"),\n                  levels = c(\"Mujer\", \"Hombre\"))\nclass(factor2)\n## [1] \"factor\"\n\nlevels(factor2)\n## [1] \"Mujer\"  \"Hombre\"\n\n# Frecuencia absoluta\ntable(factor2)\n## factor2\n##  Mujer Hombre \n##      2      2\n\n# Frecuencia relativa\nprop.table(table(factor2)) \n## factor2\n##  Mujer Hombre \n##    0.5    0.5\n```\n:::\n\n\n\n## Coerción {data-background=\"lengR.png\"}\n\n  - **Implícita:** conversión automática.   \n  - **Explícita:** conversión dirigida.  \n      - `as.numeric():` conversión a numérico.\n      - `as.integer():` conversión a entero.\n      - `as.character():` conversión a caracter.\n      - `as.logical():` conversión a lógico.\n      - `as.complex():` conversión a complejo.\n      - `as.vector():` conversión a vector.\n      - `as.matrix():` conversión a matrix.\n      - `as.factor():` conversión a factor.\n      - `as.list():` conversión a lista.\n      - `as.data.frame():` conversión a base de datos.\n\n## Coerción {data-background=\"lengR.png\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Implícita\ncoer.imp <- c(2, \"Texto\", TRUE)\ncoer.imp\n## [1] \"2\"     \"Texto\" \"TRUE\"\nclass(coer.imp)\n## [1] \"character\"\n\n# Explícita\nas.numeric(coer.imp)\n## [1]  2 NA NA\nas.logical(coer.imp)\n## [1]   NA   NA TRUE\n```\n:::\n\n\n\n## Lectura y escritura de datos {data-background=\"lengR.png\"}\n\n- **Lectura:**\n    - `read.csv():` valores separados por comas.\n    - `read.csv2():` valores separados por punto y coma.\n    - `read.table():` valores separados por espacios en blanco.\n- **Escritura:**\n    - `write.csv()`\n    - `write.csv2()`\n    - `write.table()`\n- **Conversión de formatos:**\n    - Función `save()`: guardar (escribir) datos en formato .Rdata.\n    - Función `load()`: cargar (leer) datos en formato .Rdata.\n    \n# [`Tidyverse`](https://www.tidyverse.org/) {data-background=\"fondo_tidy.png\"}\n\n## Proceso de análisis de datos {data-background=\"fondo_tidy.png\"}\n<br>\n<br>\n<br>\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/data-science.png){fig-align='center' width=670px height=280px}\n:::\n:::\n\n\n\n## Componentes del `tidyverse` {data-background=\"fondo_tidy.png\"}\n<br>\n<br>\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/tidyverse-logo.png){fig-align='center' width=670px height=280px}\n:::\n:::\n\n\n\n## Análisis de datos + `tidyverse` {data-background=\"fondo_tidy.png\"}\n<br>\n<br>\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/tidy.png){fig-align='center' width=690px height=340px}\n:::\n:::\n\n\n\n## Análisis de datos + `tidyverse` {data-background=\"fondo_tidy.png\"}\n<br>\n<br>\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](images/01_tidyverse_data_science.png){fig-align='center' width=620px height=410px}\n:::\n:::\n\n\n\n## Funciones de `dplyr` {data-background=\"fondo_tidy.png\"}\n\n  - `%>%`: operador de encadenamiento de procesos.\n  - **`dplyr`:**\n      - `filter()`: filtrar filas.\n      - `arrange()`: reordenar filas.\n      - `slice()`: seleccionar filas.\n      - `select()`: seleccionar columnas.\n      - `mutate`: editar o generar nuevas variables.\n      - `summarise`: resumir datos.\n      - `group_by()`: operaciones agrupadas.\n      \n## Funciones de `ggplot2` {data-background=\"fondo_tidy.png\"}\n      \n  - **`ggplot2`:**\n      - `ggplot`: primera capa con los datos y el mapeo (`mapping`) estético (`aes`) del gráfico.\n          - `x`: eje x.\n          - `y`: eje y.\n          - `color`: color de bordes o líneas.\n          - `fill`: color de relleno.\n      - `+`: agregar una nueva capa al gráfico.\n      - `geom_`: objetos geométricos\n          - `geom_point()`: diagrama de dispersión x vs y.\n          - `geom_histogram()`: histogramas.\n          - `geom_boxplot()`: diagrama de cajas y bigotes.\n          - `geom_bar()`: diagrama de barras.\n          - `geom_col()`: diagrama de barras (con eje *y* definido).\n          - `geom_density()`: densidad.\n          - `geom_line()`: líneas (interesantes en series temporales).\n\n## Funciones de `ggplot2` {data-background=\"fondo_tidy.png\"}          \n          \n- `labs`: etiquetas del gráfico (eje x, eje y, título, subtítulo).\n- `theme_`: temas para el gráfico.\n- `facet_wrap()`: facetas con una variable categórica.\n- `facet_grid()`: facetas con dos o más variables categóricas.\n\n# Ejemplos prácticos {data-background=\"fondo_tidy.png\"}\n\n## Calidad Educativa - Medellín 2016 {data-background=\"fondo_tidy.png\"}\n\n  - [Índice Sintético de Calidad Educativa - ISCE - Municipio de Medellín 2016.](https://www.datos.gov.co/Educaci-n/-ndice-Sint-tico-de-Calidad-Educativa-ISCE-Municip/uc7t-jc5u)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Lectura de datos\neduca <- read.csv(\"Datos/_ndice_Sint_tico_de_Calidad_Educativa_-_ISCE_-_Municipio_de_Medell_n_2016.csv\")\n\n# Guardando datos en formato .Rdata\nsave(educa, file = \"I_Educativo.Rdata\")\n\n# Cargando datos en formato .Rdata\nload(\"I_Educativo.Rdata\")\n\n# Estructura interna de los datos\nstr(educa)\n## 'data.frame':\t381 obs. of  9 variables:\n##  $ DANE           : num  1.05e+11 1.05e+11 1.05e+11 1.05e+11 1.05e+11 ...\n##  $ PRESTACION     : chr  \"OFICIAL\" \"OFICIAL\" \"OFICIAL\" \"OFICIAL\" ...\n##  $ COMUNA         : int  2 2 16 4 1 3 4 10 8 15 ...\n##  $ NOMBRE.COMUNA  : chr  \" SANTA CRUZ\" \" SANTA CRUZ\" \" BELEN\" \" ARANJUEZ\" ...\n##  $ NOMBRE         : chr  \"INST EDUC JOSE MARIA VELAZ\" \"INST EDUC BARRIO SANTA CRUZ\" \"INST EDUC JOSE MARIA BERNAL\" \"INST EDUC CAMILO TORRES RESTREPO\" ...\n##  $ ISCE.Primaria  : num  4.6 4 6.29 7.78 6.41 5.94 3.92 4.45 4.27 6.9 ...\n##  $ ISCE.Secundaria: chr  \"5.67\" \"4.76\" \"7.17\" \"6.45\" ...\n##  $ ISCE.Media     : chr  \"4.38\" \"3.82\" \"7.48\" \"4.15\" ...\n##  $ ISCE.TOTAL     : num  4.93 4.23 6.84 6.59 NA 4.96 4.5 5.59 4.76 5.34 ...\n```\n:::\n\n\n\n## Estado nutricional en infantes Medellín 2016 {data-background=\"fondo_tidy.png\"}\n\n  - [Estado nutricional de la población menor de 6 años - Municipio de Medellín 2016.](https://www.datos.gov.co/Salud-y-Protecci-n-Social/Estado-nutricional-de-la-poblaci-n-menor-de-6-a-os/bkt5-gpif)\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Lectura de datos\ndatos <- read.csv(\"Datos/Estado_nutricional_de_la_poblaci_n_menor_de_6_a_os_-_Municipio_de_Medell_n_2016.csv\")\n\n# Conversión a formato .Rdata\nsave(datos, file = \"NutricionInfantil.Rdata\")\n\n# Cargando datos en formato .Rdata\nload(\"NutricionInfantil.Rdata\")\n\n# Estructura interna de los datos\nstr(datos)\n## 'data.frame':\t83861 obs. of  15 variables:\n##  $ Regimen         : chr  \"Particular\" \"Contributivo\" \"Contributivo\" \"Contributivo\" ...\n##  $ EPS             : chr  \"OTRA\" \"EPS Y MEDICINA PREPAGADA SURAMERICANA S.A\" \"EPS Y MEDICINA PREPAGADA SURAMERICANA S.A\" \"EPS Y MEDICINA PREPAGADA SURAMERICANA S.A\" ...\n##  $ Sexo            : chr  \"M\" \"F\" \"M\" \"M\" ...\n##  $ Peso            : num  11.4 11.9 14.2 19.3 8.4 9.3 13.9 11.2 8.4 8.5 ...\n##  $ Estatura        : num  79 86.5 91.5 101 72 74 97.5 89 66.5 74.6 ...\n##  $ DS.P.E          : num  0.04 0.75 1.58 2.97 -0.55 0.03 -1.87 -1.52 -0.17 -1.36 ...\n##  $ Denominación.P.E: chr  \"Peso adecuado para la edad\" \"Peso adecuado para la edad\" \"Por encima de 1 desviacion estandar\" \"Por encima de 1 desviacion estandar\" ...\n##  $ DS.T.E          : num  -1.85 1.11 1.82 2.33 -0.85 0.08 -2.22 -0.96 -1.52 -1.62 ...\n##  $ Denominación.T.E: chr  \"Riesgo de estatura baja\" \"Estatura adecuada para la edad\" \"Estatura adecuada para la edad\" \"Estatura adecuada para la edad\" ...\n##  $ DS.P.T          : num  1.24 0.17 0.91 2.45 -0.22 0 -0.79 -1.55 0.99 -0.83 ...\n##  $ Denominación.P.T: chr  \"Sobrepeso\" \"Peso adecuado para la estatura\" \"Peso adecuado para la estatura\" \"Obesidad\" ...\n##  $ Comuna          : chr  \"Robledo\" \"La América\" \"Guayabal\" \"Belén\" ...\n##  $ Zona            : chr  \"NorOccidental\" \"Centro Occidental\" \"Sur Occidental\" \"Sur Occidental\" ...\n##  $ Edad_en_dias    : int  641 684 721 980 408 350 1754 967 283 544 ...\n##  $ Grupo.Edad      : chr  \"1. De 0 a 2 Anos\" \"1. De 0 a 2 Anos\" \"1. De 0 a 2 Anos\" \"2. De 2 a 5 Anos\" ...\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}