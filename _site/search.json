[
  {
    "objectID": "slides-ciclo01/regsimple.html",
    "href": "slides-ciclo01/regsimple.html",
    "title": "Análisis de Regresión",
    "section": "",
    "text": "Gasto militar vs Gasto en Educación: previamente se evidenció a través de gráficos de dispersión y métricas de correlación, la relación negativa entre la inversión militar y la inversión en educación. Se sugiere construir un modelo de regresión lineal simple que permita determinar el cambio en \\(y\\) dado \\(x\\), es decir, que el modelo permitirá establecer por cada unidad que aumenta el gasto militar, cuánto disminuye el gasto en educación. El modelo se puede expresar de la siguiente manera:  \n\n\nModelo matemático: \\(y = mx + b\\)\nModelo estadístico 1: \\(y = \\beta_0\\ +\\ \\beta_1X\\)\nModelo estadístico 2: \\(\\hat{y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\epsilon_i\\)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#descripción-del-problema",
    "href": "slides-ciclo01/regsimple.html#descripción-del-problema",
    "title": "Análisis de Regresión",
    "section": "",
    "text": "Gasto militar vs Gasto en Educación: previamente se evidenció a través de gráficos de dispersión y métricas de correlación, la relación negativa entre la inversión militar y la inversión en educación. Se sugiere construir un modelo de regresión lineal simple que permita determinar el cambio en \\(y\\) dado \\(x\\), es decir, que el modelo permitirá establecer por cada unidad que aumenta el gasto militar, cuánto disminuye el gasto en educación. El modelo se puede expresar de la siguiente manera:  \n\n\nModelo matemático: \\(y = mx + b\\)\nModelo estadístico 1: \\(y = \\beta_0\\ +\\ \\beta_1X\\)\nModelo estadístico 2: \\(\\hat{y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\epsilon_i\\)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#base-de-datos",
    "href": "slides-ciclo01/regsimple.html#base-de-datos",
    "title": "Análisis de Regresión",
    "section": "Base de datos",
    "text": "Base de datos\n \n\n\n                               pais gasto_militar17 gasto_edu16\n1                        Afganistán    0.9068569412     4.20525\n2                           Albania    1.2441751239     3.95464\n3                         Argentina    0.9096629933     5.57218\n4                           Armenia    3.9680393674     2.75812\n5                        Azerbaiyán    3.9373999369     2.90341\n6                        Bangladesh    1.3807504138     1.53554\n7                           Belarús    1.1919853143     4.94655\n8                            Belice    1.2530838896     7.06045\n9                             Benin    1.2163217396     3.99469\n10                Brunei Darussalam    2.8792250162     4.42541\n11                          Burundi    1.9831535621     4.61813\n12                       Cabo Verde    0.5420811232     5.36651\n13                          Camerún    1.3165941862     2.68755\n14                            Chile    1.9100618544     5.35064\n15                         Colombia    3.1022327050     4.52091\n16 Congo, República Democrática del    0.6987735959     2.11869\n17                       Costa Rica    0.0000000000     7.11873\n18                    Côte d'Ivoire    1.2804434296     4.94837\n19                      El Salvador    0.9005176939     3.86991\n20                          Georgia    2.2251392292     3.78477\n21                            Ghana    0.4060350550     5.76632\n22                        Guatemala    0.3732213478     2.83281\n23                           Guinea    2.3324667356     2.51800\n24                           Guyana    1.4436772536     6.06100\n25                            Haití    0.0008874827     2.44959\n26                         Honduras    1.5782303116     6.30177\n27     Irán, República Islámica del    3.0992593495     3.36576\n28                          Jamaica    0.9035377847     5.31866\n29                            Japón    0.9349600138     3.46746\n30                         Jordania    4.7977879047     3.89621\n31                        Kazajstán    0.8412224616     2.97810\n32                            Kenya    1.2307076293     5.36267\n33                       Kirguistán    3.1581710557     6.58615\n34                          Liberia    0.6381542056     4.00885\n35                          Malasia    1.1254530523     4.82754\n36                           Malawi    0.7701815595     4.74857\n37                             Malí    3.0540937475     3.09071\n38                         Mauricio    0.1806502692     5.01360\n39                         Mongolia    0.7371034337     5.18212\n40                            Nepal    1.5527522697     4.44099\n41                        Nicaragua    0.6099226660     4.11264\n42                            Níger    2.6747584248     4.04160\n43                   Nueva Zelandia    1.1584442250     6.30374\n44                         Pakistán    3.4954831621     2.49180\n45                         Paraguay    1.1841593158     4.52037\n46                             Perú    0.9773833671     3.81827\n47                      Reino Unido    1.8348367707     5.54179\n48             República de Moldova    0.4206777465     6.66130\n49                           Rwanda    0.9745172897     3.53979\n50                          Senegal    1.8966349226     6.62561\n51                           Serbia    1.8285005701     3.86178\n52                       Seychelles    1.5655817347     4.41832\n53                     Sierra Leona    0.7233298489     3.06023\n54                        Sri Lanka    2.1719720294     3.47508\n55                        Sudáfrica    1.0474903232     5.94059\n56                            Suiza    0.6836302129     5.12430\n57                             Togo    1.9352608797     5.06326\n58                          Ucrania    3.4129745864     5.01437\n59                           Uganda    1.6750659682     2.55882"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#distribuciones",
    "href": "slides-ciclo01/regsimple.html#distribuciones",
    "title": "Análisis de Regresión",
    "section": "Distribuciones",
    "text": "Distribuciones\n\n\nGasto militar\n\n\n\n\n\n\n\n\n\n\n\nGasto Educación\n\n\n\n\n\n\n\n\n\n\n\nGráficos de dispersión\n\n\nCon valor atípico\n\n\n\n\n\n\n\n\n\n\n\nSin valor atípico\n\n\n\n\n\n\n\n\n\n\n\nCorrelación\n\nConcepto\n\nEl coeficiente de correlación de Pearson es una medida lineal entre dos variables aleatorias cuantitativas. A diferencia de la covarianza, la correlación es independiente de la escala de medida.\nEste coeficiente puede ser de dos tipos:\n\nParamétrico: sujeto a distribución normal o gausiana.\nNo paramétrico: no está sujeto a distribución normal o gausiana.   \\[\\rho_{(X,Y)} = \\frac{Cov_{(X,Y)}}{\\sigma_X\\times\\sigma_Y} = \\frac{\\sum_{i=1}^{n}(X_i-\\mu_X)(Y_i-\\mu_Y)}{\\sigma_X\\times\\sigma_Y}\\]\n\n\n\n\nInterpretación de \\(\\rho\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRelaciones Lineales: análisis exploratorio\n\n\n\n\n\nFuente: Wikipedia.\n\n\n\n\n\n\nPrueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson con dato atípico:\n\n\n\n\n[1] 0.005680844\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis con valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n\n    Pearson's product-moment correlation\n\ndata:  datos$gasto_militar17 and datos$gasto_edu16\nt = 0.043265, df = 58, p-value = 0.9656\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2486025  0.2592316\nsample estimates:\n        cor \n0.005680844 \n\n\n\nConclusión: como el valor p (0.9656) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nPrueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson sin dato atípico:\n\n\n\n\n[1] -0.2046813\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis sin valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n    Pearson's product-moment correlation\n\ndata:  df_reg$gasto_militar17 and df_reg$gasto_edu16\nt = -1.5787, df = 57, p-value = 0.1199\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.43781539  0.05424418\nsample estimates:\n       cor \n-0.2046813 \n\n\nConclusión: como el valor p (0.1199) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nRegresión Lineal Simple (RLS)\n\nOrigen: Francis Galton\n\n\n\n\n\n\nRevista Biometrika\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nIdea intuitiva RLS\n\n\n\n\n\n\n\n\n\n\nModelo tentativo\n\nEl modelo tentativo se puede expresar de la siguiente manera:\n\\[G.Edu = \\beta_0\\ +\\ \\beta_1G.Militar\\]\n\n\n\n\nRLS: percepción geométrica\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\nRLS: ajuste de parámetros\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[f(x|\\mu,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\\]\n\n\n\nRLS: función muestral\n\n \n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nFunción matemática\n\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\\]\nAsumiendo que \\(E(Y|X_i)\\) es lineal en \\(X_i\\):\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\nY_i = \\beta_0 +\\ \\beta_1X_i\\ +\\ \\epsilon_i\\]\nTomando el valor esperado (esperanza matemática) a ambos lados:\n\\[E(Y_i|X_i)\\ =\\  E[E(Y|X_i)] + E(\\epsilon_i|X_i)\\\\\nE(Y_i|X_i)\\ =\\ E(Y|X_i)\\ +\\ E(\\epsilon_i|X_i)\\]\nComo \\(E(Y_i|X_i)\\) es igual a \\(E(Y|X_i)\\), la ecuación anterior determina que \\(E(\\epsilon_i|X_i) = 0\\). Este supuesto implica que la media condicional de \\(\\epsilon_i\\) es cero.\n\n\n\nParámetros \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\n\n\n\n\n\n\n\n\n\nMínimos Cuadrados\n\nEl propósito principal del análisis de regresión es estimar la función de regresión poblacional con base en la función de regresión muestral:\n\\[Y_i = \\beta_0\\ +\\ \\beta_1X\\] \\[\\hat{Y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\hat{\\epsilon_i}\\]\n\n\n \n\n\nSupuestos matemáticos\n\n\nLinealidad en los parámetros.\nValores de \\(X\\) independientes del término residual \\(\\epsilon\\).\nValor medio de los residuales igual a cero: \\(E(\\epsilon_i|X_i) = 0\\).\nHomocedasticidad o varianza constante de los errores \\(\\epsilon_i\\).\nIndependencia de los errores (autocorrelación): \\(cov(\\epsilon_i, \\epsilon_j)=0\\).   \\[\\epsilon\\ \\overset{\\text{i.i.d.}}\\sim\\ N(\\mu = 0,\\ \\sigma^2 = 1)\\]\n\n\n\n\nNormalidad de los residuos\n\n\\[E(\\epsilon_i|X_i)=0\\]\n\n\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad\n\n\\[Var(\\epsilon_i) = E[\\epsilon_i-E(\\epsilon_i|X_i)]^2\\\\\n= E(\\epsilon_i^2|X_i) \\\\\n= E(\\epsilon_i^2)\\\\\n= \\sigma^2\\]\n\n\n\n\n\n\n\n\n\n\n\n\n¿Heterocedasticidad?\n \n\n\n\n\n\n\n\n\n\n\n\n\nRegresión Lineal con R\n\nFunción lm() - summary()\n\n#&lt;b&gt;\nmod1 &lt;- lm(gasto_edu16 ~ gasto_militar17, data = df_reg)\n#&lt;/b&gt;\nresumen_modelo &lt;- summary(mod1)\nresumen_modelo\n\n\nCall:\nlm(formula = gasto_edu16 ~ gasto_militar17, data = df_reg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.92035 -0.83829  0.02911  0.80882  2.58509 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       4.8092     0.3058  15.727   &lt;2e-16 ***\ngasto_militar17  -0.2559     0.1621  -1.579     0.12    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.313 on 57 degrees of freedom\nMultiple R-squared:  0.04189,   Adjusted R-squared:  0.02509 \nF-statistic: 2.492 on 1 and 57 DF,  p-value: 0.1199\n\n\n\n\nGraficando recta (estático)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (ggplotly)\n\n\nlibrary(plotly)\nggplotly(df_reg %&gt;% \n  ggplot(data = ., aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = FALSE,  color = \"forestgreen\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\",\n       y = \"G. Educación (% del PIB)\",\n       title = \"Modelo ajustado\\nggplot2\"))\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (plot_ly)\n\n\nlibrary(plotly)\ndf_reg %&gt;% \n  plot_ly(x = ~gasto_militar17) %&gt;% \n  add_markers(y = ~gasto_edu16) %&gt;% \n  layout(title = \"Modelo ajustado\\nplotly\",\n         width = 600, height = 300,\n         xaxis = list(title = \"G. Militar (% del PIB)\"),\n         yaxis = list(title = \"G. Educación (% del PIB)\")) %&gt;% \n  add_lines(x = ~gasto_militar17, y = fitted(mod1)) %&gt;% \n  layout(showlegend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nDiagnósticos del modelo\n\nAnálisis de residuales:\n\nResiduales ordinarios: residuals()\nResiduales estandarizados: rstandard()\nResiduales estudentizados: rstudent()\nTarea: ¿Cuál es la diferencia entre los tipos de residuales? ¿Cuándo usar cada uno y por qué?\nLeer.\nResiduales con R.\n\n\n\n\nResiduales ordinarios con R\n\npar(mfrow = c(2, 2))\n#&lt;b&gt;\nplot(mod1)\n\n\n\n\n\n\n\n#&lt;/b&gt;\n\n\n\nNormalidad de residuales\n\n#&lt;b&gt;\nerrores &lt;- mod1$residuals # Residuales del modelo\n#&lt;/b&gt;\npar(mfrow = c(1, 2))\nhist(errores, main = \"Histograma de residuales\")\nabline(v = mean(errores), col = \"red\", lwd = 2)\nqqnorm(errores, main = \"Gráfico cuantil-cuantil\")\nqqline(errores, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad de residuales\n\n#&lt;b&gt;\npredichos &lt;- mod1$fitted.values\n#&lt;/b&gt;\nplot(predichos, errores, main = \"Residuales vs Predichos\")\nabline(lm(errores ~ predichos), col = \"red\", lty = 2)\nabline(h = 2, col = \"blue\", lty = 2)\nabline(h = -2, col = \"blue\", lty = 2)\n\n\n\n\n\n\n\n\n\n\nMedidas de influencia\n\n\n# &lt;b&gt;\nlibrary(car)\ninfluencePlot(mod1)\n\n\n\n\n\n\n\n\n      StudRes        Hat       CookD\n4  -0.8312276 0.10496570 0.040736041\n6  -2.3284733 0.01746053 0.044706663\n25 -1.8881594 0.05415889 0.097674574\n30  0.2618339 0.17620806 0.007453931\n33  2.0838759 0.05565281 0.120870520\n\n# &lt;/b&gt;\n\n\n\n\nDiagnósticos del modelo | Contraste de hipótesis (lmtest)\n\n\n\nShapiro Wilk - Normalidad:\n\n\nshapiro.test(errores)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  errores\n## W = 0.98764, p-value = 0.8122\n\n\nBreusch Pagan - Homocedasticidad:\n\n\n# &lt;b&gt;\nlibrary(lmtest)\n# &lt;/b&gt;\nbptest(mod1)\n## \n##  studentized Breusch-Pagan test\n## \n## data:  mod1\n## BP = 1.2889, df = 1, p-value = 0.2563\n\n   - Durbin-Watson - Autocorrelación:\n\ndwtest(mod1, order.by = NULL)\n## \n##  Durbin-Watson test\n## \n## data:  mod1\n## DW = 2.5595, p-value = 0.9863\n## alternative hypothesis: true autocorrelation is greater than 0\n\n\nHarvey/Collier - Linealidad:\n\n\nharvtest(mod1, order.by = NULL)\n## \n##  Harvey-Collier test\n## \n## data:  mod1\n## HC = 0.82571, df = 56, p-value = 0.4125\n\n\n\n\n\nBondad de ajuste del modelo (R2)\n\nresumen_modelo$adj.r.squared\n## [1] 0.02508557\n\nresumen_modelo$r.squared\n## [1] 0.04189444\n\n\n\n\n\n\n\n\n\n\n\n\nModelo final\n\nlibrary(ggpmisc)\nggplot(data = df_reg, aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = TRUE,  color = \"firebrick\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\", y = \"G. Educación (% del PIB)\",\n       title = \"Modelo final de RLS\") +\n  stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = \"~~~~\")),\n               formula = y ~ x, parse = TRUE, label.x.npc = 0.9, color=\"black\")\n\n\n\n\n\n\n\n\n\n\nIntervalos de confianza de \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\nFunción confint()\n\n\n# &lt;b&gt;\nconfint(mod1, level = 0.95)\n\n                     2.5 %   97.5 %\n(Intercept)      4.1968927 5.421542\ngasto_militar17 -0.5804712 0.068682\n\n#&lt;/b&gt;\n\n\n\n\nEstimaciones y Predicciones\n\n\nFunción predict()\nEstimación: estimar cúal es el gasto promedio en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"confidence\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 3.887763 4.655915\n\n\n\nPredicción: predecir cúal es el gasto en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"prediction\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 1.613811 6.929867\n\n\n\n\n\n¿Regresión Lineal Múltiple?"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#gráficos-de-dispersión",
    "href": "slides-ciclo01/regsimple.html#gráficos-de-dispersión",
    "title": "Análisis de Regresión",
    "section": "Gráficos de dispersión",
    "text": "Gráficos de dispersión\n\n\nCon valor atípico\n\n\n\n\n\n\n\n\n\n\n\nSin valor atípico\n\n\n\n\n\n\n\n\n\n\n\nCorrelación\n\nConcepto\n\nEl coeficiente de correlación de Pearson es una medida lineal entre dos variables aleatorias cuantitativas. A diferencia de la covarianza, la correlación es independiente de la escala de medida.\nEste coeficiente puede ser de dos tipos:\n\nParamétrico: sujeto a distribución normal o gausiana.\nNo paramétrico: no está sujeto a distribución normal o gausiana.   \\[\\rho_{(X,Y)} = \\frac{Cov_{(X,Y)}}{\\sigma_X\\times\\sigma_Y} = \\frac{\\sum_{i=1}^{n}(X_i-\\mu_X)(Y_i-\\mu_Y)}{\\sigma_X\\times\\sigma_Y}\\]\n\n\n\n\nInterpretación de \\(\\rho\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRelaciones Lineales: análisis exploratorio\n\n\n\n\n\nFuente: Wikipedia.\n\n\n\n\n\n\nPrueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson con dato atípico:\n\n\n\n\n[1] 0.005680844\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis con valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n\n    Pearson's product-moment correlation\n\ndata:  datos$gasto_militar17 and datos$gasto_edu16\nt = 0.043265, df = 58, p-value = 0.9656\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2486025  0.2592316\nsample estimates:\n        cor \n0.005680844 \n\n\n\nConclusión: como el valor p (0.9656) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nPrueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson sin dato atípico:\n\n\n\n\n[1] -0.2046813\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis sin valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n    Pearson's product-moment correlation\n\ndata:  df_reg$gasto_militar17 and df_reg$gasto_edu16\nt = -1.5787, df = 57, p-value = 0.1199\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.43781539  0.05424418\nsample estimates:\n       cor \n-0.2046813 \n\n\nConclusión: como el valor p (0.1199) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nRegresión Lineal Simple (RLS)\n\nOrigen: Francis Galton\n\n\n\n\n\n\nRevista Biometrika\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nIdea intuitiva RLS\n\n\n\n\n\n\n\n\n\n\nModelo tentativo\n\nEl modelo tentativo se puede expresar de la siguiente manera:\n\\[G.Edu = \\beta_0\\ +\\ \\beta_1G.Militar\\]\n\n\n\n\nRLS: percepción geométrica\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\nRLS: ajuste de parámetros\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[f(x|\\mu,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\\]\n\n\n\nRLS: función muestral\n\n \n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nFunción matemática\n\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\\]\nAsumiendo que \\(E(Y|X_i)\\) es lineal en \\(X_i\\):\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\nY_i = \\beta_0 +\\ \\beta_1X_i\\ +\\ \\epsilon_i\\]\nTomando el valor esperado (esperanza matemática) a ambos lados:\n\\[E(Y_i|X_i)\\ =\\  E[E(Y|X_i)] + E(\\epsilon_i|X_i)\\\\\nE(Y_i|X_i)\\ =\\ E(Y|X_i)\\ +\\ E(\\epsilon_i|X_i)\\]\nComo \\(E(Y_i|X_i)\\) es igual a \\(E(Y|X_i)\\), la ecuación anterior determina que \\(E(\\epsilon_i|X_i) = 0\\). Este supuesto implica que la media condicional de \\(\\epsilon_i\\) es cero.\n\n\n\nParámetros \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\n\n\n\n\n\n\n\n\n\nMínimos Cuadrados\n\nEl propósito principal del análisis de regresión es estimar la función de regresión poblacional con base en la función de regresión muestral:\n\\[Y_i = \\beta_0\\ +\\ \\beta_1X\\] \\[\\hat{Y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\hat{\\epsilon_i}\\]\n\n\n \n\n\nSupuestos matemáticos\n\n\nLinealidad en los parámetros.\nValores de \\(X\\) independientes del término residual \\(\\epsilon\\).\nValor medio de los residuales igual a cero: \\(E(\\epsilon_i|X_i) = 0\\).\nHomocedasticidad o varianza constante de los errores \\(\\epsilon_i\\).\nIndependencia de los errores (autocorrelación): \\(cov(\\epsilon_i, \\epsilon_j)=0\\).   \\[\\epsilon\\ \\overset{\\text{i.i.d.}}\\sim\\ N(\\mu = 0,\\ \\sigma^2 = 1)\\]\n\n\n\n\nNormalidad de los residuos\n\n\\[E(\\epsilon_i|X_i)=0\\]\n\n\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad\n\n\\[Var(\\epsilon_i) = E[\\epsilon_i-E(\\epsilon_i|X_i)]^2\\\\\n= E(\\epsilon_i^2|X_i) \\\\\n= E(\\epsilon_i^2)\\\\\n= \\sigma^2\\]\n\n\n\n\n\n\n\n\n\n\n\n\n¿Heterocedasticidad?\n \n\n\n\n\n\n\n\n\n\n\n\n\nRegresión Lineal con R\n\nFunción lm() - summary()\n\n#&lt;b&gt;\nmod1 &lt;- lm(gasto_edu16 ~ gasto_militar17, data = df_reg)\n#&lt;/b&gt;\nresumen_modelo &lt;- summary(mod1)\nresumen_modelo\n\n\nCall:\nlm(formula = gasto_edu16 ~ gasto_militar17, data = df_reg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.92035 -0.83829  0.02911  0.80882  2.58509 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       4.8092     0.3058  15.727   &lt;2e-16 ***\ngasto_militar17  -0.2559     0.1621  -1.579     0.12    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.313 on 57 degrees of freedom\nMultiple R-squared:  0.04189,   Adjusted R-squared:  0.02509 \nF-statistic: 2.492 on 1 and 57 DF,  p-value: 0.1199\n\n\n\n\nGraficando recta (estático)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (ggplotly)\n\n\nlibrary(plotly)\nggplotly(df_reg %&gt;% \n  ggplot(data = ., aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = FALSE,  color = \"forestgreen\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\",\n       y = \"G. Educación (% del PIB)\",\n       title = \"Modelo ajustado\\nggplot2\"))\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (plot_ly)\n\n\nlibrary(plotly)\ndf_reg %&gt;% \n  plot_ly(x = ~gasto_militar17) %&gt;% \n  add_markers(y = ~gasto_edu16) %&gt;% \n  layout(title = \"Modelo ajustado\\nplotly\",\n         width = 600, height = 300,\n         xaxis = list(title = \"G. Militar (% del PIB)\"),\n         yaxis = list(title = \"G. Educación (% del PIB)\")) %&gt;% \n  add_lines(x = ~gasto_militar17, y = fitted(mod1)) %&gt;% \n  layout(showlegend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nDiagnósticos del modelo\n\nAnálisis de residuales:\n\nResiduales ordinarios: residuals()\nResiduales estandarizados: rstandard()\nResiduales estudentizados: rstudent()\nTarea: ¿Cuál es la diferencia entre los tipos de residuales? ¿Cuándo usar cada uno y por qué?\nLeer.\nResiduales con R.\n\n\n\n\nResiduales ordinarios con R\n\npar(mfrow = c(2, 2))\n#&lt;b&gt;\nplot(mod1)\n\n\n\n\n\n\n\n#&lt;/b&gt;\n\n\n\nNormalidad de residuales\n\n#&lt;b&gt;\nerrores &lt;- mod1$residuals # Residuales del modelo\n#&lt;/b&gt;\npar(mfrow = c(1, 2))\nhist(errores, main = \"Histograma de residuales\")\nabline(v = mean(errores), col = \"red\", lwd = 2)\nqqnorm(errores, main = \"Gráfico cuantil-cuantil\")\nqqline(errores, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad de residuales\n\n#&lt;b&gt;\npredichos &lt;- mod1$fitted.values\n#&lt;/b&gt;\nplot(predichos, errores, main = \"Residuales vs Predichos\")\nabline(lm(errores ~ predichos), col = \"red\", lty = 2)\nabline(h = 2, col = \"blue\", lty = 2)\nabline(h = -2, col = \"blue\", lty = 2)\n\n\n\n\n\n\n\n\n\n\nMedidas de influencia\n\n\n# &lt;b&gt;\nlibrary(car)\ninfluencePlot(mod1)\n\n\n\n\n\n\n\n\n      StudRes        Hat       CookD\n4  -0.8312276 0.10496570 0.040736041\n6  -2.3284733 0.01746053 0.044706663\n25 -1.8881594 0.05415889 0.097674574\n30  0.2618339 0.17620806 0.007453931\n33  2.0838759 0.05565281 0.120870520\n\n# &lt;/b&gt;\n\n\n\n\nDiagnósticos del modelo | Contraste de hipótesis (lmtest)\n\n\n\nShapiro Wilk - Normalidad:\n\n\nshapiro.test(errores)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  errores\n## W = 0.98764, p-value = 0.8122\n\n\nBreusch Pagan - Homocedasticidad:\n\n\n# &lt;b&gt;\nlibrary(lmtest)\n# &lt;/b&gt;\nbptest(mod1)\n## \n##  studentized Breusch-Pagan test\n## \n## data:  mod1\n## BP = 1.2889, df = 1, p-value = 0.2563\n\n   - Durbin-Watson - Autocorrelación:\n\ndwtest(mod1, order.by = NULL)\n## \n##  Durbin-Watson test\n## \n## data:  mod1\n## DW = 2.5595, p-value = 0.9863\n## alternative hypothesis: true autocorrelation is greater than 0\n\n\nHarvey/Collier - Linealidad:\n\n\nharvtest(mod1, order.by = NULL)\n## \n##  Harvey-Collier test\n## \n## data:  mod1\n## HC = 0.82571, df = 56, p-value = 0.4125\n\n\n\n\n\nBondad de ajuste del modelo (R2)\n\nresumen_modelo$adj.r.squared\n## [1] 0.02508557\n\nresumen_modelo$r.squared\n## [1] 0.04189444\n\n\n\n\n\n\n\n\n\n\n\n\nModelo final\n\nlibrary(ggpmisc)\nggplot(data = df_reg, aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = TRUE,  color = \"firebrick\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\", y = \"G. Educación (% del PIB)\",\n       title = \"Modelo final de RLS\") +\n  stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = \"~~~~\")),\n               formula = y ~ x, parse = TRUE, label.x.npc = 0.9, color=\"black\")\n\n\n\n\n\n\n\n\n\n\nIntervalos de confianza de \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\nFunción confint()\n\n\n# &lt;b&gt;\nconfint(mod1, level = 0.95)\n\n                     2.5 %   97.5 %\n(Intercept)      4.1968927 5.421542\ngasto_militar17 -0.5804712 0.068682\n\n#&lt;/b&gt;\n\n\n\n\nEstimaciones y Predicciones\n\n\nFunción predict()\nEstimación: estimar cúal es el gasto promedio en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"confidence\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 3.887763 4.655915\n\n\n\nPredicción: predecir cúal es el gasto en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"prediction\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 1.613811 6.929867\n\n\n\n\n\n¿Regresión Lineal Múltiple?"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#concepto",
    "href": "slides-ciclo01/regsimple.html#concepto",
    "title": "Análisis de Regresión",
    "section": "Concepto",
    "text": "Concepto\n\nEl coeficiente de correlación de Pearson es una medida lineal entre dos variables aleatorias cuantitativas. A diferencia de la covarianza, la correlación es independiente de la escala de medida.\nEste coeficiente puede ser de dos tipos:\n\nParamétrico: sujeto a distribución normal o gausiana.\nNo paramétrico: no está sujeto a distribución normal o gausiana.   \\[\\rho_{(X,Y)} = \\frac{Cov_{(X,Y)}}{\\sigma_X\\times\\sigma_Y} = \\frac{\\sum_{i=1}^{n}(X_i-\\mu_X)(Y_i-\\mu_Y)}{\\sigma_X\\times\\sigma_Y}\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#interpretación-de-rho",
    "href": "slides-ciclo01/regsimple.html#interpretación-de-rho",
    "title": "Análisis de Regresión",
    "section": "Interpretación de \\(\\rho\\)",
    "text": "Interpretación de \\(\\rho\\)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#relaciones-lineales-análisis-exploratorio",
    "href": "slides-ciclo01/regsimple.html#relaciones-lineales-análisis-exploratorio",
    "title": "Análisis de Regresión",
    "section": "Relaciones Lineales: análisis exploratorio",
    "text": "Relaciones Lineales: análisis exploratorio\n\n\n\n\n\nFuente: Wikipedia."
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#prueba-de-hipótesis-para-rho",
    "href": "slides-ciclo01/regsimple.html#prueba-de-hipótesis-para-rho",
    "title": "Análisis de Regresión",
    "section": "Prueba de Hipótesis para \\(\\rho\\)",
    "text": "Prueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson con dato atípico:\n\n\n\n\n[1] 0.005680844\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis con valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n\n    Pearson's product-moment correlation\n\ndata:  datos$gasto_militar17 and datos$gasto_edu16\nt = 0.043265, df = 58, p-value = 0.9656\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2486025  0.2592316\nsample estimates:\n        cor \n0.005680844 \n\n\n\nConclusión: como el valor p (0.9656) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nPrueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson sin dato atípico:\n\n\n\n\n[1] -0.2046813\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis sin valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n    Pearson's product-moment correlation\n\ndata:  df_reg$gasto_militar17 and df_reg$gasto_edu16\nt = -1.5787, df = 57, p-value = 0.1199\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.43781539  0.05424418\nsample estimates:\n       cor \n-0.2046813 \n\n\nConclusión: como el valor p (0.1199) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nRegresión Lineal Simple (RLS)\n\nOrigen: Francis Galton\n\n\n\n\n\n\nRevista Biometrika\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nIdea intuitiva RLS\n\n\n\n\n\n\n\n\n\n\nModelo tentativo\n\nEl modelo tentativo se puede expresar de la siguiente manera:\n\\[G.Edu = \\beta_0\\ +\\ \\beta_1G.Militar\\]\n\n\n\n\nRLS: percepción geométrica\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\nRLS: ajuste de parámetros\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[f(x|\\mu,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\\]\n\n\n\nRLS: función muestral\n\n \n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nFunción matemática\n\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\\]\nAsumiendo que \\(E(Y|X_i)\\) es lineal en \\(X_i\\):\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\nY_i = \\beta_0 +\\ \\beta_1X_i\\ +\\ \\epsilon_i\\]\nTomando el valor esperado (esperanza matemática) a ambos lados:\n\\[E(Y_i|X_i)\\ =\\  E[E(Y|X_i)] + E(\\epsilon_i|X_i)\\\\\nE(Y_i|X_i)\\ =\\ E(Y|X_i)\\ +\\ E(\\epsilon_i|X_i)\\]\nComo \\(E(Y_i|X_i)\\) es igual a \\(E(Y|X_i)\\), la ecuación anterior determina que \\(E(\\epsilon_i|X_i) = 0\\). Este supuesto implica que la media condicional de \\(\\epsilon_i\\) es cero.\n\n\n\nParámetros \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\n\n\n\n\n\n\n\n\n\nMínimos Cuadrados\n\nEl propósito principal del análisis de regresión es estimar la función de regresión poblacional con base en la función de regresión muestral:\n\\[Y_i = \\beta_0\\ +\\ \\beta_1X\\] \\[\\hat{Y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\hat{\\epsilon_i}\\]\n\n\n \n\n\nSupuestos matemáticos\n\n\nLinealidad en los parámetros.\nValores de \\(X\\) independientes del término residual \\(\\epsilon\\).\nValor medio de los residuales igual a cero: \\(E(\\epsilon_i|X_i) = 0\\).\nHomocedasticidad o varianza constante de los errores \\(\\epsilon_i\\).\nIndependencia de los errores (autocorrelación): \\(cov(\\epsilon_i, \\epsilon_j)=0\\).   \\[\\epsilon\\ \\overset{\\text{i.i.d.}}\\sim\\ N(\\mu = 0,\\ \\sigma^2 = 1)\\]\n\n\n\n\nNormalidad de los residuos\n\n\\[E(\\epsilon_i|X_i)=0\\]\n\n\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad\n\n\\[Var(\\epsilon_i) = E[\\epsilon_i-E(\\epsilon_i|X_i)]^2\\\\\n= E(\\epsilon_i^2|X_i) \\\\\n= E(\\epsilon_i^2)\\\\\n= \\sigma^2\\]\n\n\n\n\n\n\n\n\n\n\n\n\n¿Heterocedasticidad?\n \n\n\n\n\n\n\n\n\n\n\n\n\nRegresión Lineal con R\n\nFunción lm() - summary()\n\n#&lt;b&gt;\nmod1 &lt;- lm(gasto_edu16 ~ gasto_militar17, data = df_reg)\n#&lt;/b&gt;\nresumen_modelo &lt;- summary(mod1)\nresumen_modelo\n\n\nCall:\nlm(formula = gasto_edu16 ~ gasto_militar17, data = df_reg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.92035 -0.83829  0.02911  0.80882  2.58509 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       4.8092     0.3058  15.727   &lt;2e-16 ***\ngasto_militar17  -0.2559     0.1621  -1.579     0.12    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.313 on 57 degrees of freedom\nMultiple R-squared:  0.04189,   Adjusted R-squared:  0.02509 \nF-statistic: 2.492 on 1 and 57 DF,  p-value: 0.1199\n\n\n\n\nGraficando recta (estático)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (ggplotly)\n\n\nlibrary(plotly)\nggplotly(df_reg %&gt;% \n  ggplot(data = ., aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = FALSE,  color = \"forestgreen\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\",\n       y = \"G. Educación (% del PIB)\",\n       title = \"Modelo ajustado\\nggplot2\"))\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (plot_ly)\n\n\nlibrary(plotly)\ndf_reg %&gt;% \n  plot_ly(x = ~gasto_militar17) %&gt;% \n  add_markers(y = ~gasto_edu16) %&gt;% \n  layout(title = \"Modelo ajustado\\nplotly\",\n         width = 600, height = 300,\n         xaxis = list(title = \"G. Militar (% del PIB)\"),\n         yaxis = list(title = \"G. Educación (% del PIB)\")) %&gt;% \n  add_lines(x = ~gasto_militar17, y = fitted(mod1)) %&gt;% \n  layout(showlegend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nDiagnósticos del modelo\n\nAnálisis de residuales:\n\nResiduales ordinarios: residuals()\nResiduales estandarizados: rstandard()\nResiduales estudentizados: rstudent()\nTarea: ¿Cuál es la diferencia entre los tipos de residuales? ¿Cuándo usar cada uno y por qué?\nLeer.\nResiduales con R.\n\n\n\n\nResiduales ordinarios con R\n\npar(mfrow = c(2, 2))\n#&lt;b&gt;\nplot(mod1)\n\n\n\n\n\n\n\n#&lt;/b&gt;\n\n\n\nNormalidad de residuales\n\n#&lt;b&gt;\nerrores &lt;- mod1$residuals # Residuales del modelo\n#&lt;/b&gt;\npar(mfrow = c(1, 2))\nhist(errores, main = \"Histograma de residuales\")\nabline(v = mean(errores), col = \"red\", lwd = 2)\nqqnorm(errores, main = \"Gráfico cuantil-cuantil\")\nqqline(errores, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad de residuales\n\n#&lt;b&gt;\npredichos &lt;- mod1$fitted.values\n#&lt;/b&gt;\nplot(predichos, errores, main = \"Residuales vs Predichos\")\nabline(lm(errores ~ predichos), col = \"red\", lty = 2)\nabline(h = 2, col = \"blue\", lty = 2)\nabline(h = -2, col = \"blue\", lty = 2)\n\n\n\n\n\n\n\n\n\n\nMedidas de influencia\n\n\n# &lt;b&gt;\nlibrary(car)\ninfluencePlot(mod1)\n\n\n\n\n\n\n\n\n      StudRes        Hat       CookD\n4  -0.8312276 0.10496570 0.040736041\n6  -2.3284733 0.01746053 0.044706663\n25 -1.8881594 0.05415889 0.097674574\n30  0.2618339 0.17620806 0.007453931\n33  2.0838759 0.05565281 0.120870520\n\n# &lt;/b&gt;\n\n\n\n\nDiagnósticos del modelo | Contraste de hipótesis (lmtest)\n\n\n\nShapiro Wilk - Normalidad:\n\n\nshapiro.test(errores)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  errores\n## W = 0.98764, p-value = 0.8122\n\n\nBreusch Pagan - Homocedasticidad:\n\n\n# &lt;b&gt;\nlibrary(lmtest)\n# &lt;/b&gt;\nbptest(mod1)\n## \n##  studentized Breusch-Pagan test\n## \n## data:  mod1\n## BP = 1.2889, df = 1, p-value = 0.2563\n\n   - Durbin-Watson - Autocorrelación:\n\ndwtest(mod1, order.by = NULL)\n## \n##  Durbin-Watson test\n## \n## data:  mod1\n## DW = 2.5595, p-value = 0.9863\n## alternative hypothesis: true autocorrelation is greater than 0\n\n\nHarvey/Collier - Linealidad:\n\n\nharvtest(mod1, order.by = NULL)\n## \n##  Harvey-Collier test\n## \n## data:  mod1\n## HC = 0.82571, df = 56, p-value = 0.4125\n\n\n\n\n\nBondad de ajuste del modelo (R2)\n\nresumen_modelo$adj.r.squared\n## [1] 0.02508557\n\nresumen_modelo$r.squared\n## [1] 0.04189444\n\n\n\n\n\n\n\n\n\n\n\n\nModelo final\n\nlibrary(ggpmisc)\nggplot(data = df_reg, aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = TRUE,  color = \"firebrick\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\", y = \"G. Educación (% del PIB)\",\n       title = \"Modelo final de RLS\") +\n  stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = \"~~~~\")),\n               formula = y ~ x, parse = TRUE, label.x.npc = 0.9, color=\"black\")\n\n\n\n\n\n\n\n\n\n\nIntervalos de confianza de \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\nFunción confint()\n\n\n# &lt;b&gt;\nconfint(mod1, level = 0.95)\n\n                     2.5 %   97.5 %\n(Intercept)      4.1968927 5.421542\ngasto_militar17 -0.5804712 0.068682\n\n#&lt;/b&gt;\n\n\n\n\nEstimaciones y Predicciones\n\n\nFunción predict()\nEstimación: estimar cúal es el gasto promedio en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"confidence\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 3.887763 4.655915\n\n\n\nPredicción: predecir cúal es el gasto en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"prediction\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 1.613811 6.929867\n\n\n\n\n\n¿Regresión Lineal Múltiple?"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#prueba-de-hipótesis-para-rho-1",
    "href": "slides-ciclo01/regsimple.html#prueba-de-hipótesis-para-rho-1",
    "title": "Análisis de Regresión",
    "section": "Prueba de Hipótesis para \\(\\rho\\)",
    "text": "Prueba de Hipótesis para \\(\\rho\\)\n\n\n\nCorrelación de Pearson sin dato atípico:\n\n\n\n\n[1] -0.2046813\n\n\n\n\n\n\n\n\n\n\n\n\nTest de hipótesis sin valor atípico\n\n\\[H_0: \\rho = 0\\\\H_1: \\rho \\neq 0\\]\n\n\n\n    Pearson's product-moment correlation\n\ndata:  df_reg$gasto_militar17 and df_reg$gasto_edu16\nt = -1.5787, df = 57, p-value = 0.1199\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.43781539  0.05424418\nsample estimates:\n       cor \n-0.2046813 \n\n\nConclusión: como el valor p (0.1199) es mayor que el nivel de significancia \\(\\alpha = 0.05\\), no existe evidencia para rechazar la hipótesis nula.\n\n\n\n\nRegresión Lineal Simple (RLS)\n\nOrigen: Francis Galton\n\n\n\n\n\n\nRevista Biometrika\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\nIdea intuitiva RLS\n\n\n\n\n\n\n\n\n\n\nModelo tentativo\n\nEl modelo tentativo se puede expresar de la siguiente manera:\n\\[G.Edu = \\beta_0\\ +\\ \\beta_1G.Militar\\]\n\n\n\n\nRLS: percepción geométrica\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\nRLS: ajuste de parámetros\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[f(x|\\mu,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\\]\n\n\n\nRLS: función muestral\n\n \n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nFunción matemática\n\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\\]\nAsumiendo que \\(E(Y|X_i)\\) es lineal en \\(X_i\\):\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\nY_i = \\beta_0 +\\ \\beta_1X_i\\ +\\ \\epsilon_i\\]\nTomando el valor esperado (esperanza matemática) a ambos lados:\n\\[E(Y_i|X_i)\\ =\\  E[E(Y|X_i)] + E(\\epsilon_i|X_i)\\\\\nE(Y_i|X_i)\\ =\\ E(Y|X_i)\\ +\\ E(\\epsilon_i|X_i)\\]\nComo \\(E(Y_i|X_i)\\) es igual a \\(E(Y|X_i)\\), la ecuación anterior determina que \\(E(\\epsilon_i|X_i) = 0\\). Este supuesto implica que la media condicional de \\(\\epsilon_i\\) es cero.\n\n\n\nParámetros \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\n\n\n\n\n\n\n\n\n\nMínimos Cuadrados\n\nEl propósito principal del análisis de regresión es estimar la función de regresión poblacional con base en la función de regresión muestral:\n\\[Y_i = \\beta_0\\ +\\ \\beta_1X\\] \\[\\hat{Y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\hat{\\epsilon_i}\\]\n\n\n \n\n\nSupuestos matemáticos\n\n\nLinealidad en los parámetros.\nValores de \\(X\\) independientes del término residual \\(\\epsilon\\).\nValor medio de los residuales igual a cero: \\(E(\\epsilon_i|X_i) = 0\\).\nHomocedasticidad o varianza constante de los errores \\(\\epsilon_i\\).\nIndependencia de los errores (autocorrelación): \\(cov(\\epsilon_i, \\epsilon_j)=0\\).   \\[\\epsilon\\ \\overset{\\text{i.i.d.}}\\sim\\ N(\\mu = 0,\\ \\sigma^2 = 1)\\]\n\n\n\n\nNormalidad de los residuos\n\n\\[E(\\epsilon_i|X_i)=0\\]\n\n\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad\n\n\\[Var(\\epsilon_i) = E[\\epsilon_i-E(\\epsilon_i|X_i)]^2\\\\\n= E(\\epsilon_i^2|X_i) \\\\\n= E(\\epsilon_i^2)\\\\\n= \\sigma^2\\]\n\n\n\n\n\n\n\n\n\n\n\n\n¿Heterocedasticidad?\n \n\n\n\n\n\n\n\n\n\n\n\n\nRegresión Lineal con R\n\nFunción lm() - summary()\n\n#&lt;b&gt;\nmod1 &lt;- lm(gasto_edu16 ~ gasto_militar17, data = df_reg)\n#&lt;/b&gt;\nresumen_modelo &lt;- summary(mod1)\nresumen_modelo\n\n\nCall:\nlm(formula = gasto_edu16 ~ gasto_militar17, data = df_reg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.92035 -0.83829  0.02911  0.80882  2.58509 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       4.8092     0.3058  15.727   &lt;2e-16 ***\ngasto_militar17  -0.2559     0.1621  -1.579     0.12    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.313 on 57 degrees of freedom\nMultiple R-squared:  0.04189,   Adjusted R-squared:  0.02509 \nF-statistic: 2.492 on 1 and 57 DF,  p-value: 0.1199\n\n\n\n\nGraficando recta (estático)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (ggplotly)\n\n\nlibrary(plotly)\nggplotly(df_reg %&gt;% \n  ggplot(data = ., aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = FALSE,  color = \"forestgreen\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\",\n       y = \"G. Educación (% del PIB)\",\n       title = \"Modelo ajustado\\nggplot2\"))\n\n\n\n\n\n\n\n\n\n\n\n\nGraficando recta (plot_ly)\n\n\nlibrary(plotly)\ndf_reg %&gt;% \n  plot_ly(x = ~gasto_militar17) %&gt;% \n  add_markers(y = ~gasto_edu16) %&gt;% \n  layout(title = \"Modelo ajustado\\nplotly\",\n         width = 600, height = 300,\n         xaxis = list(title = \"G. Militar (% del PIB)\"),\n         yaxis = list(title = \"G. Educación (% del PIB)\")) %&gt;% \n  add_lines(x = ~gasto_militar17, y = fitted(mod1)) %&gt;% \n  layout(showlegend = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nDiagnósticos del modelo\n\nAnálisis de residuales:\n\nResiduales ordinarios: residuals()\nResiduales estandarizados: rstandard()\nResiduales estudentizados: rstudent()\nTarea: ¿Cuál es la diferencia entre los tipos de residuales? ¿Cuándo usar cada uno y por qué?\nLeer.\nResiduales con R.\n\n\n\n\nResiduales ordinarios con R\n\npar(mfrow = c(2, 2))\n#&lt;b&gt;\nplot(mod1)\n\n\n\n\n\n\n\n#&lt;/b&gt;\n\n\n\nNormalidad de residuales\n\n#&lt;b&gt;\nerrores &lt;- mod1$residuals # Residuales del modelo\n#&lt;/b&gt;\npar(mfrow = c(1, 2))\nhist(errores, main = \"Histograma de residuales\")\nabline(v = mean(errores), col = \"red\", lwd = 2)\nqqnorm(errores, main = \"Gráfico cuantil-cuantil\")\nqqline(errores, col = \"red\")\n\n\n\n\n\n\n\n\n\n\nHomocedasticidad de residuales\n\n#&lt;b&gt;\npredichos &lt;- mod1$fitted.values\n#&lt;/b&gt;\nplot(predichos, errores, main = \"Residuales vs Predichos\")\nabline(lm(errores ~ predichos), col = \"red\", lty = 2)\nabline(h = 2, col = \"blue\", lty = 2)\nabline(h = -2, col = \"blue\", lty = 2)\n\n\n\n\n\n\n\n\n\n\nMedidas de influencia\n\n\n# &lt;b&gt;\nlibrary(car)\ninfluencePlot(mod1)\n\n\n\n\n\n\n\n\n      StudRes        Hat       CookD\n4  -0.8312276 0.10496570 0.040736041\n6  -2.3284733 0.01746053 0.044706663\n25 -1.8881594 0.05415889 0.097674574\n30  0.2618339 0.17620806 0.007453931\n33  2.0838759 0.05565281 0.120870520\n\n# &lt;/b&gt;\n\n\n\n\nDiagnósticos del modelo | Contraste de hipótesis (lmtest)\n\n\n\nShapiro Wilk - Normalidad:\n\n\nshapiro.test(errores)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  errores\n## W = 0.98764, p-value = 0.8122\n\n\nBreusch Pagan - Homocedasticidad:\n\n\n# &lt;b&gt;\nlibrary(lmtest)\n# &lt;/b&gt;\nbptest(mod1)\n## \n##  studentized Breusch-Pagan test\n## \n## data:  mod1\n## BP = 1.2889, df = 1, p-value = 0.2563\n\n   - Durbin-Watson - Autocorrelación:\n\ndwtest(mod1, order.by = NULL)\n## \n##  Durbin-Watson test\n## \n## data:  mod1\n## DW = 2.5595, p-value = 0.9863\n## alternative hypothesis: true autocorrelation is greater than 0\n\n\nHarvey/Collier - Linealidad:\n\n\nharvtest(mod1, order.by = NULL)\n## \n##  Harvey-Collier test\n## \n## data:  mod1\n## HC = 0.82571, df = 56, p-value = 0.4125\n\n\n\n\n\nBondad de ajuste del modelo (R2)\n\nresumen_modelo$adj.r.squared\n## [1] 0.02508557\n\nresumen_modelo$r.squared\n## [1] 0.04189444\n\n\n\n\n\n\n\n\n\n\n\n\nModelo final\n\nlibrary(ggpmisc)\nggplot(data = df_reg, aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = TRUE,  color = \"firebrick\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\", y = \"G. Educación (% del PIB)\",\n       title = \"Modelo final de RLS\") +\n  stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = \"~~~~\")),\n               formula = y ~ x, parse = TRUE, label.x.npc = 0.9, color=\"black\")\n\n\n\n\n\n\n\n\n\n\nIntervalos de confianza de \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\nFunción confint()\n\n\n# &lt;b&gt;\nconfint(mod1, level = 0.95)\n\n                     2.5 %   97.5 %\n(Intercept)      4.1968927 5.421542\ngasto_militar17 -0.5804712 0.068682\n\n#&lt;/b&gt;\n\n\n\n\nEstimaciones y Predicciones\n\n\nFunción predict()\nEstimación: estimar cúal es el gasto promedio en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"confidence\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 3.887763 4.655915\n\n\n\nPredicción: predecir cúal es el gasto en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"prediction\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 1.613811 6.929867\n\n\n\n\n\n¿Regresión Lineal Múltiple?"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#origen-francis-galton",
    "href": "slides-ciclo01/regsimple.html#origen-francis-galton",
    "title": "Análisis de Regresión",
    "section": "Origen: Francis Galton",
    "text": "Origen: Francis Galton\n\n\n\n\n\n\nRevista Biometrika"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#idea-intuitiva-rls",
    "href": "slides-ciclo01/regsimple.html#idea-intuitiva-rls",
    "title": "Análisis de Regresión",
    "section": "Idea intuitiva RLS",
    "text": "Idea intuitiva RLS\n\n\n\n\n\n\n\n\n\n\nModelo tentativo\n\nEl modelo tentativo se puede expresar de la siguiente manera:\n\\[G.Edu = \\beta_0\\ +\\ \\beta_1G.Militar\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#rls-percepción-geométrica",
    "href": "slides-ciclo01/regsimple.html#rls-percepción-geométrica",
    "title": "Análisis de Regresión",
    "section": "RLS: percepción geométrica",
    "text": "RLS: percepción geométrica"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#rls-ajuste-de-parámetros",
    "href": "slides-ciclo01/regsimple.html#rls-ajuste-de-parámetros",
    "title": "Análisis de Regresión",
    "section": "RLS: ajuste de parámetros",
    "text": "RLS: ajuste de parámetros\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\[f(x|\\mu,\\sigma^2) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}}\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#rls-función-muestral",
    "href": "slides-ciclo01/regsimple.html#rls-función-muestral",
    "title": "Análisis de Regresión",
    "section": "RLS: función muestral",
    "text": "RLS: función muestral"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#función-matemática",
    "href": "slides-ciclo01/regsimple.html#función-matemática",
    "title": "Análisis de Regresión",
    "section": "Función matemática",
    "text": "Función matemática\n\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\\]\nAsumiendo que \\(E(Y|X_i)\\) es lineal en \\(X_i\\):\n\\[Y_i = E(Y|X_i)\\ +\\ \\epsilon_i\\\\\nY_i = \\beta_0 +\\ \\beta_1X_i\\ +\\ \\epsilon_i\\]\nTomando el valor esperado (esperanza matemática) a ambos lados:\n\\[E(Y_i|X_i)\\ =\\  E[E(Y|X_i)] + E(\\epsilon_i|X_i)\\\\\nE(Y_i|X_i)\\ =\\ E(Y|X_i)\\ +\\ E(\\epsilon_i|X_i)\\]\nComo \\(E(Y_i|X_i)\\) es igual a \\(E(Y|X_i)\\), la ecuación anterior determina que \\(E(\\epsilon_i|X_i) = 0\\). Este supuesto implica que la media condicional de \\(\\epsilon_i\\) es cero."
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#parámetros-beta_0-y-beta_1",
    "href": "slides-ciclo01/regsimple.html#parámetros-beta_0-y-beta_1",
    "title": "Análisis de Regresión",
    "section": "Parámetros \\(\\beta_0\\) y \\(\\beta_1\\)",
    "text": "Parámetros \\(\\beta_0\\) y \\(\\beta_1\\)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#mínimos-cuadrados",
    "href": "slides-ciclo01/regsimple.html#mínimos-cuadrados",
    "title": "Análisis de Regresión",
    "section": "Mínimos Cuadrados",
    "text": "Mínimos Cuadrados\n\nEl propósito principal del análisis de regresión es estimar la función de regresión poblacional con base en la función de regresión muestral:\n\\[Y_i = \\beta_0\\ +\\ \\beta_1X\\] \\[\\hat{Y_i} = \\hat{\\beta_0}\\ + \\hat{\\beta_1}X_i\\ + \\hat{\\epsilon_i}\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#supuestos-matemáticos",
    "href": "slides-ciclo01/regsimple.html#supuestos-matemáticos",
    "title": "Análisis de Regresión",
    "section": "Supuestos matemáticos",
    "text": "Supuestos matemáticos\n\n\nLinealidad en los parámetros.\nValores de \\(X\\) independientes del término residual \\(\\epsilon\\).\nValor medio de los residuales igual a cero: \\(E(\\epsilon_i|X_i) = 0\\).\nHomocedasticidad o varianza constante de los errores \\(\\epsilon_i\\).\nIndependencia de los errores (autocorrelación): \\(cov(\\epsilon_i, \\epsilon_j)=0\\).   \\[\\epsilon\\ \\overset{\\text{i.i.d.}}\\sim\\ N(\\mu = 0,\\ \\sigma^2 = 1)\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#normalidad-de-los-residuos",
    "href": "slides-ciclo01/regsimple.html#normalidad-de-los-residuos",
    "title": "Análisis de Regresión",
    "section": "Normalidad de los residuos",
    "text": "Normalidad de los residuos\n\n\\[E(\\epsilon_i|X_i)=0\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#homocedasticidad",
    "href": "slides-ciclo01/regsimple.html#homocedasticidad",
    "title": "Análisis de Regresión",
    "section": "Homocedasticidad",
    "text": "Homocedasticidad\n\n\\[Var(\\epsilon_i) = E[\\epsilon_i-E(\\epsilon_i|X_i)]^2\\\\\n= E(\\epsilon_i^2|X_i) \\\\\n= E(\\epsilon_i^2)\\\\\n= \\sigma^2\\]"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#heterocedasticidad",
    "href": "slides-ciclo01/regsimple.html#heterocedasticidad",
    "title": "Análisis de Regresión",
    "section": "¿Heterocedasticidad?",
    "text": "¿Heterocedasticidad?"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#función-lm---summary",
    "href": "slides-ciclo01/regsimple.html#función-lm---summary",
    "title": "Análisis de Regresión",
    "section": "Función lm() - summary()",
    "text": "Función lm() - summary()\n\n#&lt;b&gt;\nmod1 &lt;- lm(gasto_edu16 ~ gasto_militar17, data = df_reg)\n#&lt;/b&gt;\nresumen_modelo &lt;- summary(mod1)\nresumen_modelo\n\n\nCall:\nlm(formula = gasto_edu16 ~ gasto_militar17, data = df_reg)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.92035 -0.83829  0.02911  0.80882  2.58509 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       4.8092     0.3058  15.727   &lt;2e-16 ***\ngasto_militar17  -0.2559     0.1621  -1.579     0.12    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.313 on 57 degrees of freedom\nMultiple R-squared:  0.04189,   Adjusted R-squared:  0.02509 \nF-statistic: 2.492 on 1 and 57 DF,  p-value: 0.1199"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#graficando-recta-estático",
    "href": "slides-ciclo01/regsimple.html#graficando-recta-estático",
    "title": "Análisis de Regresión",
    "section": "Graficando recta (estático)",
    "text": "Graficando recta (estático)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#graficando-recta-ggplotly",
    "href": "slides-ciclo01/regsimple.html#graficando-recta-ggplotly",
    "title": "Análisis de Regresión",
    "section": "Graficando recta (ggplotly)",
    "text": "Graficando recta (ggplotly)\n\n\nlibrary(plotly)\nggplotly(df_reg %&gt;% \n  ggplot(data = ., aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = FALSE,  color = \"forestgreen\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\",\n       y = \"G. Educación (% del PIB)\",\n       title = \"Modelo ajustado\\nggplot2\"))"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#graficando-recta-plot_ly",
    "href": "slides-ciclo01/regsimple.html#graficando-recta-plot_ly",
    "title": "Análisis de Regresión",
    "section": "Graficando recta (plot_ly)",
    "text": "Graficando recta (plot_ly)\n\n\nlibrary(plotly)\ndf_reg %&gt;% \n  plot_ly(x = ~gasto_militar17) %&gt;% \n  add_markers(y = ~gasto_edu16) %&gt;% \n  layout(title = \"Modelo ajustado\\nplotly\",\n         width = 600, height = 300,\n         xaxis = list(title = \"G. Militar (% del PIB)\"),\n         yaxis = list(title = \"G. Educación (% del PIB)\")) %&gt;% \n  add_lines(x = ~gasto_militar17, y = fitted(mod1)) %&gt;% \n  layout(showlegend = FALSE)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#diagnósticos-del-modelo",
    "href": "slides-ciclo01/regsimple.html#diagnósticos-del-modelo",
    "title": "Análisis de Regresión",
    "section": "Diagnósticos del modelo",
    "text": "Diagnósticos del modelo\n\nAnálisis de residuales:\n\nResiduales ordinarios: residuals()\nResiduales estandarizados: rstandard()\nResiduales estudentizados: rstudent()\nTarea: ¿Cuál es la diferencia entre los tipos de residuales? ¿Cuándo usar cada uno y por qué?\nLeer.\nResiduales con R."
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#residuales-ordinarios-con-r",
    "href": "slides-ciclo01/regsimple.html#residuales-ordinarios-con-r",
    "title": "Análisis de Regresión",
    "section": "Residuales ordinarios con R",
    "text": "Residuales ordinarios con R\n\npar(mfrow = c(2, 2))\n#&lt;b&gt;\nplot(mod1)\n\n\n\n\n\n\n\n#&lt;/b&gt;"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#normalidad-de-residuales",
    "href": "slides-ciclo01/regsimple.html#normalidad-de-residuales",
    "title": "Análisis de Regresión",
    "section": "Normalidad de residuales",
    "text": "Normalidad de residuales\n\n#&lt;b&gt;\nerrores &lt;- mod1$residuals # Residuales del modelo\n#&lt;/b&gt;\npar(mfrow = c(1, 2))\nhist(errores, main = \"Histograma de residuales\")\nabline(v = mean(errores), col = \"red\", lwd = 2)\nqqnorm(errores, main = \"Gráfico cuantil-cuantil\")\nqqline(errores, col = \"red\")"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#homocedasticidad-de-residuales",
    "href": "slides-ciclo01/regsimple.html#homocedasticidad-de-residuales",
    "title": "Análisis de Regresión",
    "section": "Homocedasticidad de residuales",
    "text": "Homocedasticidad de residuales\n\n#&lt;b&gt;\npredichos &lt;- mod1$fitted.values\n#&lt;/b&gt;\nplot(predichos, errores, main = \"Residuales vs Predichos\")\nabline(lm(errores ~ predichos), col = \"red\", lty = 2)\nabline(h = 2, col = \"blue\", lty = 2)\nabline(h = -2, col = \"blue\", lty = 2)"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#medidas-de-influencia",
    "href": "slides-ciclo01/regsimple.html#medidas-de-influencia",
    "title": "Análisis de Regresión",
    "section": "Medidas de influencia",
    "text": "Medidas de influencia\n\n\n# &lt;b&gt;\nlibrary(car)\ninfluencePlot(mod1)\n\n\n\n\n\n\n\n\n      StudRes        Hat       CookD\n4  -0.8312276 0.10496570 0.040736041\n6  -2.3284733 0.01746053 0.044706663\n25 -1.8881594 0.05415889 0.097674574\n30  0.2618339 0.17620806 0.007453931\n33  2.0838759 0.05565281 0.120870520\n\n# &lt;/b&gt;"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#diagnósticos-del-modelo-contraste-de-hipótesis-lmtest",
    "href": "slides-ciclo01/regsimple.html#diagnósticos-del-modelo-contraste-de-hipótesis-lmtest",
    "title": "Análisis de Regresión",
    "section": "Diagnósticos del modelo | Contraste de hipótesis (lmtest)",
    "text": "Diagnósticos del modelo | Contraste de hipótesis (lmtest)\n\n\n\nShapiro Wilk - Normalidad:\n\n\nshapiro.test(errores)\n## \n##  Shapiro-Wilk normality test\n## \n## data:  errores\n## W = 0.98764, p-value = 0.8122\n\n\nBreusch Pagan - Homocedasticidad:\n\n\n# &lt;b&gt;\nlibrary(lmtest)\n# &lt;/b&gt;\nbptest(mod1)\n## \n##  studentized Breusch-Pagan test\n## \n## data:  mod1\n## BP = 1.2889, df = 1, p-value = 0.2563\n\n   - Durbin-Watson - Autocorrelación:\n\ndwtest(mod1, order.by = NULL)\n## \n##  Durbin-Watson test\n## \n## data:  mod1\n## DW = 2.5595, p-value = 0.9863\n## alternative hypothesis: true autocorrelation is greater than 0\n\n\nHarvey/Collier - Linealidad:\n\n\nharvtest(mod1, order.by = NULL)\n## \n##  Harvey-Collier test\n## \n## data:  mod1\n## HC = 0.82571, df = 56, p-value = 0.4125"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#bondad-de-ajuste-del-modelo-r2",
    "href": "slides-ciclo01/regsimple.html#bondad-de-ajuste-del-modelo-r2",
    "title": "Análisis de Regresión",
    "section": "Bondad de ajuste del modelo (R2)",
    "text": "Bondad de ajuste del modelo (R2)\n\nresumen_modelo$adj.r.squared\n## [1] 0.02508557\n\nresumen_modelo$r.squared\n## [1] 0.04189444"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#modelo-final",
    "href": "slides-ciclo01/regsimple.html#modelo-final",
    "title": "Análisis de Regresión",
    "section": "Modelo final",
    "text": "Modelo final\n\nlibrary(ggpmisc)\nggplot(data = df_reg, aes(x = gasto_militar17, y = gasto_edu16)) + \n  geom_point() + theme_light() +\n  geom_smooth(method = \"lm\", se = TRUE,  color = \"firebrick\", lwd = 1.2) +\n  labs(x = \"G. Militar (% del PIB)\", y = \"G. Educación (% del PIB)\",\n       title = \"Modelo final de RLS\") +\n  stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = \"~~~~\")),\n               formula = y ~ x, parse = TRUE, label.x.npc = 0.9, color=\"black\")"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#intervalos-de-confianza-de-beta_0-y-beta_1",
    "href": "slides-ciclo01/regsimple.html#intervalos-de-confianza-de-beta_0-y-beta_1",
    "title": "Análisis de Regresión",
    "section": "Intervalos de confianza de \\(\\beta_0\\) y \\(\\beta_1\\)",
    "text": "Intervalos de confianza de \\(\\beta_0\\) y \\(\\beta_1\\)\n\n\nFunción confint()\n\n\n# &lt;b&gt;\nconfint(mod1, level = 0.95)\n\n                     2.5 %   97.5 %\n(Intercept)      4.1968927 5.421542\ngasto_militar17 -0.5804712 0.068682\n\n#&lt;/b&gt;"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#estimaciones-y-predicciones",
    "href": "slides-ciclo01/regsimple.html#estimaciones-y-predicciones",
    "title": "Análisis de Regresión",
    "section": "Estimaciones y Predicciones",
    "text": "Estimaciones y Predicciones\n\n\nFunción predict()\nEstimación: estimar cúal es el gasto promedio en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"confidence\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 3.887763 4.655915\n\n\n\nPredicción: predecir cúal es el gasto en educación para un país que tiene 2.15% del PIB en inversión militar.\n\n\npredict(object = mod1, newdata = data.frame(gasto_militar17 = c(2.1)),\n        interval = \"prediction\", level = 0.95)\n\n       fit      lwr      upr\n1 4.271839 1.613811 6.929867"
  },
  {
    "objectID": "slides-ciclo01/regsimple.html#regresión-lineal-múltiple",
    "href": "slides-ciclo01/regsimple.html#regresión-lineal-múltiple",
    "title": "Análisis de Regresión",
    "section": "¿Regresión Lineal Múltiple?",
    "text": "¿Regresión Lineal Múltiple?"
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html",
    "href": "slides-ciclo01/Ejercicio1.html",
    "title": "Actividad práctica 1",
    "section": "",
    "text": "Las variables se almacenan tanto en filas como en columnas.\nMás de una variable se almacena en una columna.\nMúltiples tipos de unidades experimentales se almacenan en una misma tabla.\nUn sólo tipo de unidad experimental se almacena en múltiples tablas.\nLos encabezados de las columnas, son valores, no variables.\n\n\n\n\n\nBases de datos en múltiples archivos de excel.\nSi el objetivo de análisis es holístico, no es conveniente tener información disgregada o fraccionada.\nUnión de datos en función de un factor, individuo u observación común.\nCaracterizar el comportamiento por países en función de las variables registradas.\nObjetivo: hacer uso de los temas abordados el semestre pasado para describir y caracterizar la situación global por país."
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html#problemas-asociados-a-bases-de-datos-no-ordenadas",
    "href": "slides-ciclo01/Ejercicio1.html#problemas-asociados-a-bases-de-datos-no-ordenadas",
    "title": "Actividad práctica 1",
    "section": "",
    "text": "Las variables se almacenan tanto en filas como en columnas.\nMás de una variable se almacena en una columna.\nMúltiples tipos de unidades experimentales se almacenan en una misma tabla.\nUn sólo tipo de unidad experimental se almacena en múltiples tablas.\nLos encabezados de las columnas, son valores, no variables."
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html#descripción-del-problema",
    "href": "slides-ciclo01/Ejercicio1.html#descripción-del-problema",
    "title": "Actividad práctica 1",
    "section": "",
    "text": "Bases de datos en múltiples archivos de excel.\nSi el objetivo de análisis es holístico, no es conveniente tener información disgregada o fraccionada.\nUnión de datos en función de un factor, individuo u observación común.\nCaracterizar el comportamiento por países en función de las variables registradas.\nObjetivo: hacer uso de los temas abordados el semestre pasado para describir y caracterizar la situación global por país."
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html#bases-de-datos-12",
    "href": "slides-ciclo01/Ejercicio1.html#bases-de-datos-12",
    "title": "Actividad práctica 1",
    "section": "Bases de datos (1/2)",
    "text": "Bases de datos (1/2)\n\nTodas las bases de datos fueron obtenidas del Banco Mundial.\nDensidad poblacional.\nConsumo de energía eléctrica.\nPIB.\nCrecimiento del PIB.\nGasto público en educación.\nGasto militar.\nGasto en investigación y desarrollo.\nDeuda externa acumulada."
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html#bases-de-datos-22",
    "href": "slides-ciclo01/Ejercicio1.html#bases-de-datos-22",
    "title": "Actividad práctica 1",
    "section": "Bases de datos (2/2)",
    "text": "Bases de datos (2/2)\n\nAcceso a la electricidad.\nDesempleo total.\nCamas hospitalarias.\nCajeros automáticos.\nContaminación del aire por PM2.5\nPoblación rural.\nTierras cultivables.\nConsumo de fertilizantes.\nExtracción de agua dulce."
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html#ejercicios",
    "href": "slides-ciclo01/Ejercicio1.html#ejercicios",
    "title": "Actividad práctica 1",
    "section": "Ejercicios",
    "text": "Ejercicios\n\nUnir las bases de datos en un sólo data frame que contenga información para cada país.\n¿Cuáles son los 10 países con mayor densidad poblacional?\nPiense en un gráfico (sólo uno) que permita evidenciar la relación del gasto en educación y el crecimiento del PIB.\nGenere una nueva variable con información del continente al cual pertenece el país.\nCon un gráfico o medida trate de mostrar la variación existente en el gasto en investigación y desarrollo por continente.\nCon un gráfico muestre cómo es la distribución de cada variable numérica."
  },
  {
    "objectID": "slides-ciclo01/Ejercicio1.html#tareas",
    "href": "slides-ciclo01/Ejercicio1.html#tareas",
    "title": "Actividad práctica 1",
    "section": "Tareas",
    "text": "Tareas\n\nBase de datos con experimento de interés (29 de junio de 2019).\nPropuesta del logo del semillero (29 de junio de 2019).\nPresentación de propuestas tentativas para el R day - Medellín (06 de julio de 2019).\nLeer acerca de gráficos cuantil-cuantil y contrastes de hipótesis para validación del supuesto de normalidad.\nLeer acerca de las funciones join:\n\nJoin Data Frames with the R dplyr package.\nJoining Data in R with dplyr.\nJoin two tbls together."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#section",
    "href": "slides-ciclo01/2_MundoR_tidy.html#section",
    "title": "Semillero de R - FacCA",
    "section": "",
    "text": "Función\nDescripción\n\n\n\n\nmean()\nMedia\n\n\nmedian()\nMediana\n\n\nsd()\nDesviación estándar\n\n\nvar()\nVarianza\n\n\nrange()\nRango\n\n\nmin()\nValor mínimo\n\n\nmax()\nValor máximo\n\n\nquantile()\nCuartiles, deciles y percentiles\n\n\ncor()\nCoeficiente de correlación\n\n\nIQR()\nRango intercuartílico\n\n\nskewness()\nCoeficiente de asimetría (biblioteca moments)\n\n\nkurtosis()\nCoeficiente de curtosis (biblioteca moments)"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#section-1",
    "href": "slides-ciclo01/2_MundoR_tidy.html#section-1",
    "title": "Semillero de R - FacCA",
    "section": "",
    "text": "Función\nDescripción\n\n\n\n\ntable()\nTabla de frecuencias absolutas\n\n\nprop.table()\nTabla de frecuencias relativas\n\n\nsort()\nOrdenar los datos\n\n\nsum()()\nSumar\n\n\ncolSums()\nSuma por columnas\n\n\nrowSums()\nSuma por filas\n\n\ncolMeans()\nPromedios por columnas\n\n\nrowMeans()\nPromedios por filas"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#section-2",
    "href": "slides-ciclo01/2_MundoR_tidy.html#section-2",
    "title": "Semillero de R - FacCA",
    "section": "",
    "text": "“Tidy datasets are all alike but every messy dataset is messy in its own way.”\n– Hadley Wickham"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#qué-son-datos-ordenados",
    "href": "slides-ciclo01/2_MundoR_tidy.html#qué-son-datos-ordenados",
    "title": "Semillero de R - FacCA",
    "section": "¿Qué son datos ordenados?",
    "text": "¿Qué son datos ordenados?\n\nCada variable debe tener su propia columna.\nCada observacioón debe tener su propia fila.\nCada valor debe tener su propia celda."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#qué-son-datos-ordenados-1",
    "href": "slides-ciclo01/2_MundoR_tidy.html#qué-son-datos-ordenados-1",
    "title": "Semillero de R - FacCA",
    "section": "¿Qué son datos ordenados?",
    "text": "¿Qué son datos ordenados?"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#funciones-tidyr",
    "href": "slides-ciclo01/2_MundoR_tidy.html#funciones-tidyr",
    "title": "Semillero de R - FacCA",
    "section": "Funciones tidyr",
    "text": "Funciones tidyr\n\nspread(): de formato largo a formato ancho.\ngather(): de formato ancho a formato largo.\nseparate(): separar columnas.\nunite(): unir columnas."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#usos-de-las-funciones-tidyr",
    "href": "slides-ciclo01/2_MundoR_tidy.html#usos-de-las-funciones-tidyr",
    "title": "Semillero de R - FacCA",
    "section": "Usos de las funciones tidyr",
    "text": "Usos de las funciones tidyr\n\nspread(data, key, value)\ngather(data, \"variable1\", \"variable2\", 1:3)\nseparate(data, Separ, into = c(\"n1\", \"n2\"), sep = \"/\")\nunite(data, \"nueva\", var1, var2, sep = \"\")"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#spread",
    "href": "slides-ciclo01/2_MundoR_tidy.html#spread",
    "title": "Semillero de R - FacCA",
    "section": "spread()",
    "text": "spread()"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#gather",
    "href": "slides-ciclo01/2_MundoR_tidy.html#gather",
    "title": "Semillero de R - FacCA",
    "section": "gather()",
    "text": "gather()"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR_tidy.html#resultados-saber-11º",
    "href": "slides-ciclo01/2_MundoR_tidy.html#resultados-saber-11º",
    "title": "Semillero de R - FacCA",
    "section": "Resultados Saber 11º",
    "text": "Resultados Saber 11º\n\nEjemplo grupo lunes: ICFES 2017-02.\nEjemplo grupo martes: ICFES 2018-02."
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#qué-es-markdown",
    "href": "slides-ciclo01/1_RMarkdown.html#qué-es-markdown",
    "title": "Semillero de R - FacCA",
    "section": "¿Qué es Markdown?",
    "text": "¿Qué es Markdown?\n“Markdown es un lenguaje de marcado ligero creado por John Gruber que trata de conseguir la máxima legibilidad y facilidad de publicación tanto en su forma de entrada como de salida, inspirándose en muchas convenciones existentes para marcar mensajes de correo electrónico usando texto plano.”"
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#flujo-de-trabajo-archivo-.rmd",
    "href": "slides-ciclo01/1_RMarkdown.html#flujo-de-trabajo-archivo-.rmd",
    "title": "Semillero de R - FacCA",
    "section": "Flujo de trabajo: archivo .Rmd",
    "text": "Flujo de trabajo: archivo .Rmd\n\nCrear archivo nuevo de extensión .Rmd.\n\nFile -&gt; New File -&gt; R Markdown\n\n\n\n\n\n\n\n\n\n\n\n\nGuardar archivo .Rmd\n\nFile -&gt; Save with Encoding -&gt; UTF-8."
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#flujo-de-trabajo-r-markdown",
    "href": "slides-ciclo01/1_RMarkdown.html#flujo-de-trabajo-r-markdown",
    "title": "Semillero de R - FacCA",
    "section": "Flujo de trabajo: R Markdown",
    "text": "Flujo de trabajo: R Markdown\n\nTexto en formato markdown.\nFragmentos de código R.\nCompilación de archivos .html.\nTeclas de acceso rápido:\n\nCtrl + Alt + i: insertar código R.\nCtrl + Shift + k: compilar el documento a formato .html."
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#títulos-o-encabezados",
    "href": "slides-ciclo01/1_RMarkdown.html#títulos-o-encabezados",
    "title": "Semillero de R - FacCA",
    "section": "Títulos o encabezados",
    "text": "Títulos o encabezados\n# Título 1\n\n## Título 2\n\n### Título 3"
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#viñetas",
    "href": "slides-ciclo01/1_RMarkdown.html#viñetas",
    "title": "Semillero de R - FacCA",
    "section": "Viñetas",
    "text": "Viñetas\n  - Viñeta 1\n  - Viñeta 2\n      - Subviñeta 2.1\n  - Viñeta 3\n\n  * Viñeta 1\n  * Viñeta 2\n      * Subviñeta 2.1\n  * Viñeta 3\n  \n  + Viñeta 1\n  + Viñeta 2\n      + Subviñeta 2.1\n  + Viñeta 3"
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#insertar-imagen",
    "href": "slides-ciclo01/1_RMarkdown.html#insertar-imagen",
    "title": "Semillero de R - FacCA",
    "section": "Insertar imagen",
    "text": "Insertar imagen\n![](imagen.png)"
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#insertar-hipervínculo",
    "href": "slides-ciclo01/1_RMarkdown.html#insertar-hipervínculo",
    "title": "Semillero de R - FacCA",
    "section": "Insertar hipervínculo",
    "text": "Insertar hipervínculo\n\nPrimera forma:\n\nhttps://es.wikipedia.org/wiki/Git \n\nSegunda forma:\n\n[Git Wikipedia](https://es.wikipedia.org/wiki/Git)"
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#opciones-de-texto",
    "href": "slides-ciclo01/1_RMarkdown.html#opciones-de-texto",
    "title": "Semillero de R - FacCA",
    "section": "Opciones de texto",
    "text": "Opciones de texto\n\nCursiva:\n\n*Texto*\n_Texto_\n\nNegrilla:\n\n**Texto**\n__Texto__\n\nNegrilla cursiva:\n\n***Texto***\n___Texto___"
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#r-markdown-the-definitive-guide",
    "href": "slides-ciclo01/1_RMarkdown.html#r-markdown-the-definitive-guide",
    "title": "Semillero de R - FacCA",
    "section": "R Markdown: The Definitive Guide",
    "text": "R Markdown: The Definitive Guide\n\n\n\n\n\n\n\n\n\nR Markdown: The Definitive Guide."
  },
  {
    "objectID": "slides-ciclo01/1_RMarkdown.html#rpubs-y-rstudio-connect",
    "href": "slides-ciclo01/1_RMarkdown.html#rpubs-y-rstudio-connect",
    "title": "Semillero de R - FacCA",
    "section": "RPubs y RStudio Connect",
    "text": "RPubs y RStudio Connect\n\nCrear cuenta en Rpubs.\nRStudio Connect."
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#section",
    "href": "slides-ciclo01/1.2_RMarkdown.html#section",
    "title": "Semillero de R - FacCA",
    "section": "",
    "text": "Definición de markdown.\nFlujo de trabajo inicial con R Markdown.\n\nFile -&gt; New File -&gt; R Markdown.\nGuardar con codificación UTF-8.\n\nComponentes de R Markdown:\n\nMetadatos. (--- ---)\nFragmentos de R. (```{r} ```)\n\nTeclas de acceso rápido:\n\nCtrl + Alt + i: insertar código R.\nCtrl + Shift + k: compilar el documento a formato .html.\n\nElementos básicos: títulos, viñetas, opciones de texto, insertar imagenes, insertar hipervínculos.\nPublicación de documentos en Rpubs.\n\nRegístrese aquí.\n\nR Markdown: The Definitive Guide"
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#section-1",
    "href": "slides-ciclo01/1.2_RMarkdown.html#section-1",
    "title": "Semillero de R - FacCA",
    "section": "",
    "text": "R Markdown proporciona dos tipos de salidas:\n\nDocumentos\n\nhtml_document\ngithub_document\nlatex_document\nmd_document\nodt_document\npdf_document\nrtf_document\nword_document\n\nPresentaciones (diapositivas)\n\nioslides_presentation\nslidy_presentation\n\nbeamer_presentation\n\npower_presentation"
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-i",
    "href": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-i",
    "title": "Semillero de R - FacCA",
    "section": "Sintaxis de R Markdown I",
    "text": "Sintaxis de R Markdown I\n\nEncabezados: #, ##.\n*Cursiva*\n**Negrilla**\n*Negrilla cursiva*\nInsertar imagen: ![](imagen.png)\nInsertar hipervínculo: [](url.com)"
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii",
    "href": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii",
    "title": "Semillero de R - FacCA",
    "section": "Sintaxis de R Markdown II",
    "text": "Sintaxis de R Markdown II\n\nMarcado de texto con comillas transversas `mean()`\nTexto con opción de celda de código: ```ejemplo```\nEjecución de código en línea de texto: ```letra r código```\nMás opciones de texto:\n\nH~3~PO~4~ —-&gt; H3PO4\n2^2^ —-&gt; 22\nInsertar citación o notas al pie del texto con ^[] —-&gt; Semillero R1\nSalto de línea en markdown con &lt;br&gt;."
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii-1",
    "href": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii-1",
    "title": "Semillero de R - FacCA",
    "section": "Sintaxis de R Markdown II",
    "text": "Sintaxis de R Markdown II\n\nCitas textuales con `&gt;`\n\n&gt; \"I thoroughly disapprove of duels. If a man should challenge me,\n  I would take him kindly and forgivingly by the hand and lead him\n  to a quiet place and kill him.\"\n&gt;\n&gt; --- Mark Twain      \n\n“I thoroughly disapprove of duels. If a man should challenge me, I would take him kindly and forgivingly by the hand and lead him to a quiet place and kill him.”\n— Mark Twain"
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii-2",
    "href": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii-2",
    "title": "Semillero de R - FacCA",
    "section": "Sintaxis de R Markdown II",
    "text": "Sintaxis de R Markdown II\n\nExpresiones matemáticas\n\n$$Latex$$: ecuación centrada con salto de línea.\n$Latex$: ecuación en línea.\nEjemplos:\n\n$f(x) = {n \\choose k} p^{x}(1-p)^{n-x}$\n\nEn línea \\(f(x) = {n \\choose k} p^{x}(1-p)^{n-x}\\)\n\n$$f(x) = {n \\choose k} p^{x}(1-p)^{n-x}$$ \\[f(x) = {n \\choose k} p^{x}(1-p)^{n-x}\\]\n\n\nDocumentación Latex.\nSímbolos matemáticos en Latex."
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii-3",
    "href": "slides-ciclo01/1.2_RMarkdown.html#sintaxis-de-r-markdown-ii-3",
    "title": "Semillero de R - FacCA",
    "section": "Sintaxis de R Markdown II",
    "text": "Sintaxis de R Markdown II\n\nTablas 1:\n\nColumna 1 | Columna 2 | Columna 3\n--------- | --------- | ---------\nDato 1    | Dato 2    | Dato 3\n\n\n\nColumna 1\nColumna 2\nColumna 3\n\n\n\n\nDato 1\nDato 2\nDato 3\n\n\n\n - Tablas 2:\nColumna 1 | Columna 2 | Columna 3\n :------: | --------: | :------\nDato 1    | Dato 2    | Dato 3\nDato 1    | Dato 2    | Dato 3\n\n\n\nColumna 1\nColumna 2\nColumna 3\n\n\n\n\nDato 1\nDato 2\nDato 3\n\n\nDato 1\nDato 2\nDato 3"
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#metadatos",
    "href": "slides-ciclo01/1.2_RMarkdown.html#metadatos",
    "title": "Semillero de R - FacCA",
    "section": "Metadatos",
    "text": "Metadatos\n\ntitle: título principal del documento.\nsubtitle: subtítulo.\ndate: fecha.\noutput: tipo de salida.\n\ntoc: opción para activar tabla de contenidos.\ntoc_depth: configurar los encabezados a tener en cuenta para la tabla de contenidos.\ntoc_float: tabla de contenido flotante.\n\ncollapsed: tabla de contenido flotante y plegable.\nsmooth_scroll: animaciones de tabla de contenido con el clic.\n\nnumber_sections: numeración de secciones.\ntheme: tema del documento.\nhighlight: estilo de resaltado.\ndf_print: impresión de data.frame con formato.\ncode_folding: opción que permite mostrar u ocultar el código en el documento.\ncss: personalización avanzada a través de css."
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#fragmentos-de-r",
    "href": "slides-ciclo01/1.2_RMarkdown.html#fragmentos-de-r",
    "title": "Semillero de R - FacCA",
    "section": "Fragmentos de R",
    "text": "Fragmentos de R\n\nInsertar fragmento de R con Ctrl + ALt + i.\nfig.align: alineación de figuras e imágenes.\nfig.width: ancho de gráficos.\nfig.height: altura de gráficos.\nout.width: ancho de imágenes.\nout.height: alto de imágenes.\necho: opción para imprimir el código en el documento.\neval: opción para evaluar el código, es decir, producir resultados.\nwarning: opción para desactivar las advertencias.\nmessage: opción para desactivar los mensajes."
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#metadatos-y-chunk-de-r",
    "href": "slides-ciclo01/1.2_RMarkdown.html#metadatos-y-chunk-de-r",
    "title": "Semillero de R - FacCA",
    "section": "Metadatos y chunk de R",
    "text": "Metadatos y chunk de R\n\nPlantilla de metadatos:\n\n---\ntitle: \"Título\"\nsubtitle: \"Subtítulo\"\nauthor: \"Nombre Apellido\"\ndate: \"01 de enero de 1900\"\noutput:\n  html_document:\n    toc: true\n    toc_depth: 3\n    toc_float: true\n      collapsed: true\n      smooth_scroll: true\n    number_sections: true\n    theme: readable\n    highlight: tango\n    df_print: paged\n    code_folding: hide\n    css: estilo.css\n---\n\nPlantilla fragmento de R:\n\n``{r, fig.align='center', fig.width=8, fig.height=5, echo=TRUE, eval=TRUE}\n\n``"
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#presentación-ioslides",
    "href": "slides-ciclo01/1.2_RMarkdown.html#presentación-ioslides",
    "title": "Semillero de R - FacCA",
    "section": "Presentación ioslides",
    "text": "Presentación ioslides\n\nCrear archivo de extensión .Rmd\n\nFile -&gt; New File -&gt; R Mardown -&gt; Presentation -&gt; Ioslides\n\n\n\n\n\n\n\n\n\n\n\n\nGuardar archivo .Rmd\n\nFile -&gt; Save with Encoding -&gt; UTF-8.\n\nNueva diapositiva con ##.\nDiapositiva de tema principal con #."
  },
  {
    "objectID": "slides-ciclo01/1.2_RMarkdown.html#footnotes",
    "href": "slides-ciclo01/1.2_RMarkdown.html#footnotes",
    "title": "Semillero de R - FacCA",
    "section": "Notas",
    "text": "Notas\n\n\nhttps://unal-semilleror-facca.github.io/↩︎"
  },
  {
    "objectID": "recursos-info.html",
    "href": "recursos-info.html",
    "title": "Recursos Web",
    "section": "",
    "text": "Algunos recursos de información en los cuales el usuario podrá encontrar múltiples ayudas, ejemplos, tutoriales y ejercicios para desarrollar con R (y otros lenguajes de programación) son los siguientes:\n\nStack Overflow en inglés\nStack Overflow en español\nRpubs\nCRAN\nR-Studio\nDataCamp\nGithub\nedX\nR-Exercises\nR-bloggers"
  },
  {
    "objectID": "recursos-info.html#sitios-web",
    "href": "recursos-info.html#sitios-web",
    "title": "Recursos Web",
    "section": "",
    "text": "Algunos recursos de información en los cuales el usuario podrá encontrar múltiples ayudas, ejemplos, tutoriales y ejercicios para desarrollar con R (y otros lenguajes de programación) son los siguientes:\n\nStack Overflow en inglés\nStack Overflow en español\nRpubs\nCRAN\nR-Studio\nDataCamp\nGithub\nedX\nR-Exercises\nR-bloggers"
  },
  {
    "objectID": "recursos-info.html#material-bibliográfico",
    "href": "recursos-info.html#material-bibliográfico",
    "title": "Recursos Web",
    "section": "Material bibliográfico",
    "text": "Material bibliográfico\nAdemás de los sitios web, también se recomienda al usuario tener en cuenta el siguiente material de apoyo:\n\nR for Data Science - R4ds\nR: A Language for Data Analysis and Graphichs\nR and S\nR for Beginners\nR para principiantes\nAn Introduction to R\nIntroduction to the R project for Statistical Computing for use at ITC\nR for Biologists\nMétodos Estadísticos con R y R commander\nStatistics Using R with Biological Examples\nOpenIntro Statistics\nAn Introduction to Statistical Learning with Applications in R\nHandbook of Biological Statistics\nGráficos Estadísticos con R\nEl arte de programar en R\nComputational Statistics Using R and R Studio An Introduction for Scientists"
  },
  {
    "objectID": "recursos-info.html#hojas-de-referencia",
    "href": "recursos-info.html#hojas-de-referencia",
    "title": "Recursos Web",
    "section": "Hojas de referencia",
    "text": "Hojas de referencia\nLas siguientes son guías de R y R Studio que pueden ser consultadas aquí.\n\nHojas de referencia en español:\n\nImportación de datos\nManejo de datos (1)\nManejo de datos (2)\nManejo de factores con forcats\nManeo de fechas con lubridate\nManejo de caracteres con stringr\nVisualización con ggplot2\nProgramación con purrr\nEcosistema R Markdown\nAplicaciones con shiny\nIDE RStudio\n\nHojas de referencia en inglés:\n\nBase R: Cheat Sheet\nRStudio IDE Cheat Sheet\nData Visualization with ggplot2\nR Markdown\nShiny\n\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "guide-rpy.html",
    "href": "guide-rpy.html",
    "title": "Guías - Herramientas",
    "section": "",
    "text": "Descargar R\nDescargar Python\nDescargar RStudio\nDescargar Visual Studio Code\nDescargar Quarto"
  },
  {
    "objectID": "guide-rpy.html#instalación-de-r-y-rstudio",
    "href": "guide-rpy.html#instalación-de-r-y-rstudio",
    "title": "Guías - Herramientas",
    "section": "Instalación de R y RStudio",
    "text": "Instalación de R y RStudio"
  },
  {
    "objectID": "guide-rpy.html#instalación-de-python-y-visual-studio-code",
    "href": "guide-rpy.html#instalación-de-python-y-visual-studio-code",
    "title": "Guías - Herramientas",
    "section": "Instalación de Python y Visual Studio Code",
    "text": "Instalación de Python y Visual Studio Code"
  },
  {
    "objectID": "guide-rpy.html#instalación-de-bibliotecas-en-r",
    "href": "guide-rpy.html#instalación-de-bibliotecas-en-r",
    "title": "Guías - Herramientas",
    "section": "Instalación de bibliotecas en R",
    "text": "Instalación de bibliotecas en R"
  },
  {
    "objectID": "guide-rpy.html#instalación-de-bibliotecas-en-python",
    "href": "guide-rpy.html#instalación-de-bibliotecas-en-python",
    "title": "Guías - Herramientas",
    "section": "Instalación de bibliotecas en Python",
    "text": "Instalación de bibliotecas en Python"
  },
  {
    "objectID": "guide-rpy.html#guía-rápida-de-markdown",
    "href": "guide-rpy.html#guía-rápida-de-markdown",
    "title": "Guías - Herramientas",
    "section": "Guía rápida de Markdown",
    "text": "Guía rápida de Markdown"
  },
  {
    "objectID": "guide-rpy.html#guía-rápida-de-r-markdown",
    "href": "guide-rpy.html#guía-rápida-de-r-markdown",
    "title": "Guías - Herramientas",
    "section": "Guía rápida de R Markdown",
    "text": "Guía rápida de R Markdown"
  },
  {
    "objectID": "guide-rpy.html#creación-de-informes-con-quarto",
    "href": "guide-rpy.html#creación-de-informes-con-quarto",
    "title": "Guías - Herramientas",
    "section": "Creación de informes con Quarto",
    "text": "Creación de informes con Quarto"
  },
  {
    "objectID": "code-example/GoogleNoticias-R.html",
    "href": "code-example/GoogleNoticias-R.html",
    "title": "Web Scraping con R",
    "section": "",
    "text": "Este documento tiene como propósito ejemplificar técnicas de web scraping con R y análisis exploratorio de datos."
  },
  {
    "objectID": "code-example/GoogleNoticias-R.html#colombia",
    "href": "code-example/GoogleNoticias-R.html#colombia",
    "title": "Web Scraping con R",
    "section": "Colombia",
    "text": "Colombia\nPrimero guardamos la URL para las noticas de Colombia en un objeto de nombre url_colombia. Cabe mencionar que este nombre lo asigna el usuario.\n\n\nCódigo\nurl_colombia &lt;- \"https://news.google.com/topics/CAAqJggKIiBDQkFTRWdvSUwyMHZNREZzY3pJU0JtVnpMVFF4T1NnQVAB?hl=es-419&gl=CO&ceid=CO%3Aes-419\"\n\n\nLuego usamos la función googleNoticiasR() e ingresamos url_colombia como argumento de entrada. Guardamos este resultado en un objeto de nombre noticias_colombia.\n\n\nCódigo\nnoticias_colombia &lt;- googleNoticiasR(url = url_colombia)\n\n\nLa ejecución anterior devuelve un dataframe como se muestra a continuación. La función head() se utiliza para imprimir sólo las primeras 6 filas de la tabla.\n\n\nCódigo\nnoticias_colombia %&gt;% \n  head()\n\n\nPodemos consultar el total de noticias (número de filas):\n\n\nCódigo\nnoticias_colombia %&gt;% \n  nrow()\n\n\nLos nombres de la base de datos pueden ser consultados con la función names():\n\n\nCódigo\nnoticias_colombia %&gt;% \n  names()"
  },
  {
    "objectID": "code-example/GoogleNoticias-R.html#negocios",
    "href": "code-example/GoogleNoticias-R.html#negocios",
    "title": "Web Scraping con R",
    "section": "Negocios",
    "text": "Negocios\nPrimero guardamos la URL para las noticas de Colombia en un objeto de nombre url_negocios. Cabe mencionar que este nombre lo asigna el usuario.\n\n\nCódigo\nurl_negocios &lt;- \"https://news.google.com/topics/CAAqLAgKIiZDQkFTRmdvSUwyMHZNRGx6TVdZU0JtVnpMVFF4T1JvQ1EwOG9BQVAB?hl=es-419&gl=CO&ceid=CO%3Aes-419\"\n\n\nLuego usamos la función googleNoticiasR() e ingresamos url_negocios como argumento de entrada. Guardamos este resultado en un objeto de nombre noticias_negocios.\n\n\nCódigo\nnoticias_negocios &lt;- googleNoticiasR(url = url_negocios)\nnoticias_negocios %&gt;% \n  head()"
  },
  {
    "objectID": "code-example/GoogleNoticias-R.html#deportes",
    "href": "code-example/GoogleNoticias-R.html#deportes",
    "title": "Web Scraping con R",
    "section": "Deportes",
    "text": "Deportes\nPrimero guardamos la URL para las noticas de Colombia en un objeto de nombre url_deportes. Cabe mencionar que este nombre lo asigna el usuario.\n\n\nCódigo\nurl_deportes &lt;- \"https://news.google.com/topics/CAAqLAgKIiZDQkFTRmdvSUwyMHZNRFp1ZEdvU0JtVnpMVFF4T1JvQ1EwOG9BQVAB?hl=es-419&gl=CO&ceid=CO%3Aes-419\"\n\n\nLuego usamos la función googleNoticiasR() e ingresamos url_deportes como argumento de entrada. Guardamos este resultado en un objeto de nombre noticias_deportes.\n\n\nCódigo\nnoticias_deportes &lt;- googleNoticiasR(url = url_deportes)\nnoticias_deportes %&gt;% \n  head()"
  },
  {
    "objectID": "code-example/GoogleNoticias-R.html#noticias-colombia",
    "href": "code-example/GoogleNoticias-R.html#noticias-colombia",
    "title": "Web Scraping con R",
    "section": "Noticias Colombia",
    "text": "Noticias Colombia\n\nTokenización\n\nEl primer paso es convertir las noticias (cadenas de texto) en tokens, es decir, palabras individuales que aportan información a nuestro análisis. Este proceso se logra a través de la función unnest_tokens() de la biblioteca tidytext.\n\n\n\nCódigo\ntokens_colombia &lt;-\n  noticias_colombia %&gt;% \n  unnest_tokens(output = \"token\", input = noticia)\n\ntokens_colombia %&gt;% \n  head()\n\n\nAlgunas palabras en la columna token no tienen propiedades informativas, por ejemplo, conectores, artículos, pronombres, preposiciones, etc. Es común en la minería de texto utilizar stop words para cada lenguaje, en este caso para el castellano. Podemos acceder a estas palabras a través de la función stopwords() de la biblioteca tm. Es importante mencionar que es posible que queden algunas palabras que no son informativas, de tal manera que se recomienda profundizar más en este tema.\nAsignamos las stop words a un objeto de nombre stop_spanish:\n\n\nCódigo\nstop_spanish &lt;- stopwords(kind = \"spanish\")\n\n\nTenemos en total el siguiente número de stop words en español:\n\n\nCódigo\nstop_spanish %&gt;% \n  length()\n\n\nAhoa filtramos las palabras de la columna token que están dentro de las palabras sin significado (stop words) y asignamos el resultado a un objeto de nombre tokens_colombia_final. Note que en la columna token quedan números, que eventualmente podrían ser filtrados para el análisis, no obstante, se recomienda profundizar en cuál debería ser la limpieza del texto más adecuada para su análisis. En este caso hacemos caso omiso de estos datos.\n\n\nCódigo\ntokens_colombia_final &lt;-\n  tokens_colombia %&gt;%\n  filter(!token %in% stop_spanish) \n\ntokens_colombia_final %&gt;% \n  head()\n\n\n\n\nPreguntas\n\nPregunta 1\n\n¿Cuántas noticias hay para cada medio de comunicación? Nota: para respondera a esta pregunta no es estrictamente necesario tokenizar el texto, por tal motivo obtendremos el conteo a través del dataframe de nombre noticias_colombia. Observe que algunas fuentes se repiten, por ejemplo, El Tiempo y EL TIEMPO, R los define como entidades diferentes porque no están escritas de la misma manera, aunque esta característica es fácil de resolver lo dejaremos así y cada usuario podrá direccionar la depuración bajo la estructura correcta.\n\n\n\nCódigo\nnoticias_colombia %&gt;% \n  count(fuente, sort = TRUE)\n\n\nPodemos graficar los 10 primeros medios de comunicación con mayor número de noticias:\n\n\nCódigo\nnoticias_colombia %&gt;% \n  count(fuente, sort = TRUE) %&gt;% \n  slice(1:10) %&gt;% \n  ggplot(aes(x = reorder(fuente, n), y = n)) +\n  geom_col() +\n  coord_flip() +\n  labs(x = \"\", y = \"Noticias (n)\", title = \"Google Noticias - Colombia\")\n\n\n\n\nPregunta 2\n\n¿Cuáles son las palabras más frecuentes en las noticias? Para responder a estar preguna utilizaremos el dataframe que posee los tokens y sobre el cual ya pasamos el filtro de las palabras sin significado, es decir, tokens_colombia_final. Observamos que la palabra más frecuente en las noticias es “petro”.\n\n\n\nCódigo\ntokens_colombia_final %&gt;% \n  count(token, sort = TRUE)\n\n\nComo son tantas palabras, es posible representar esta información a través de nubes de palabras. Este proceso lo llevamos a cabo con la biblioteca wordcloud2.\n\n\nCódigo\ntokens_colombia_final %&gt;%\n  count(token, sort = TRUE) %&gt;% \n  wordcloud2(data = ., backgroundColor = \"black\")\n\n\n\n\nPregunta 3\n\n¿Podemos asignar algún sentimiento a las noticias en función de las palabras que contienen? Para responder a esta pregunta lo primero que vamos a hacer es descargar el archivo que contiene el sentimiento para las palabras en español. Se puede descargar aquí.\nAgradecimiento especial a Juan Bosco Mendoza Vega por disponibilizar esta información.\nNote que la base de datos tiene tres columnas, la variable Palabra denota la información en español, la variable Word es su traducción al inglés y la Puntuacion (sin tilde) denota el score determinado por el léxico AFINN.\n\n\n\nCódigo\n# URL\nurl_sentimiento &lt;- \n  \"https://raw.githubusercontent.com/jboscomendoza/rpubs/master/sentimientos_afinn/lexico_afinn.en.es.csv\"\n\n# Lectura de datos\ndf_sentimiento &lt;-\n  read_csv(url_sentimiento)\n\ndf_sentimiento %&gt;% \n  head()\n\n\nSi usted desea descargar el archivo anterior puede ejecutar el siguiente código:\n\n\nCódigo\ndownload.file(url = url_sentimiento, destfile = \"datos_sentimiento_spanish_AFINN.csv\")\n\n\nVamos a cambiar el nombre Palabra por token, para que podamos unir a la tabla tokens_colombia_final y seleccionamos sólo las variables token y Puntuacion. Además, discretizamos la variable Puntuacion en una nueva variable llamada sentimiento, de tal manera que si la Puntuacion es mayor a 0 se le asigna el nivel Positivo, de lo contrario será Negativo. Asignamos este resultado a un nuevo objeto de nombre sentimiento_spanish.\n\n\nCódigo\nsentimiento_spanish &lt;-\n  df_sentimiento %&gt;% \n  rename(token = Palabra) %&gt;% \n  select(token, Puntuacion) %&gt;% \n  mutate(sentimiento = if_else(Puntuacion &gt; 0, \"Positivo\", \"Negativo\"))\n\nsentimiento_spanish %&gt;% \n  head()\n\n\nAhora unimos los datos de sentimiento con la tabla tokens_colombia_final. La unión la realizamos con la función inner_join(), de tal manera que sólo serán tenidas en cuenta palabras que estén en ambas tablas. Note que la nueva tabla se reduce, ya que muchas palabras de las noticias no están presente en el dataframe sentimiento_spanish. Es importante mencionar que esta es una aproximación simple de análisis de sentimientos, sin embargo, podrían ser utilizadas técnicas más robustas, por ejemplo, Deep Learning.\n\n\nCódigo\nnoticias_sentimiento &lt;-\n  inner_join(x = tokens_colombia_final, y = sentimiento_spanish, by = \"token\")\n\nnoticias_sentimiento %&gt;% \n  head()\n\n\nPodemos consultar el número de filas de la nueva tabla.\n\n\nCódigo\nnoticias_sentimiento %&gt;% \n  nrow()\n\n\nPodemos responder a la siguiente pregunta, ¿Predominan las palabras positivas o negativas? Parece que son más las noticias que tiene palabras negativas que positivas.\n\n\nCódigo\nnoticias_sentimiento %&gt;% \n  count(sentimiento)\n\n\n¿Cuál medio de comunicación es más negativo o positivo en sus noticias?\n\n\nCódigo\nnoticias_sentimiento %&gt;% \n  count(fuente, sentimiento, sort = TRUE)\n\n\nPodemos representar el resultado anterior a través de un gráfico. Para tener una representación más transparente filtramos medios de comunicación con más de 3 noticias.\n\n\nCódigo\nnoticias_sentimiento %&gt;% \n  count(fuente, sentimiento, sort = TRUE) %&gt;% \n  filter(n &gt; 3) %&gt;% \n  ggplot(aes(x = reorder(fuente, n), y = n, fill = sentimiento)) +\n  geom_col(position = \"fill\") +\n  coord_flip() +\n  labs(x = \"\", y = \"Frecuencia relativa\", fill = \"Sentimiento\") +\n  theme(legend.position = \"top\")\n\n\nHasta ahora hemos usamos la variable sentimiento, pero también podríamos calcular alguna métrica estadística con la variable Puntuacion. En este caso calculamos la mediana de la Puntuacion y obtenemos el número de datos (N) con los cuales es calculada la métrica.\n\n\nCódigo\nnoticias_sentimiento %&gt;% \n  group_by(fuente) %&gt;% \n  summarise(\n    mediana_sent = median(Puntuacion),\n    N = n()\n  ) %&gt;% \n  arrange(desc(mediana_sent))\n\n\nPodemos graficar la nube de palabras para el sentimiento positivo y negativo a través de la biblioteca wordcloud. Para este proceso fíjese que “remodelamos” los datos a través de la función acast() de la biblioteca reshape2. Este proceso es necesario para obtener la nube de palabras comparativa con la función comparison.cloud().\n\n\nCódigo\nnoticias_sentimiento %&gt;%\n  count(token, sentimiento, sort = TRUE) %&gt;% \n  acast(token ~ sentimiento, value.var = \"n\", fill = 0) %&gt;%\n  comparison.cloud(colors = c(\"gray20\", \"forestgreen\"),\n                   max.words = 100)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/05-resultados-dashboard-r.html",
    "href": "code-example/ejemplos-r-py-202401/05-resultados-dashboard-r.html",
    "title": "Resultados Dashboard con R",
    "section": "",
    "text": "1 Importando bibliotecas\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\n\n2 Importando datos\n\nCréditos agropecuarios\nEvaluaciones agropecuarias\n\n\nCréditos agropecuariosEvaluaciones agropecuarias\n\n\n\n# Datos de créditos agropecuarios en café\ncreditos_cafe &lt;- read_csv(\"datos/créditos_café_colombia.csv\")\ncreditos_cafe |&gt; head()\n\n\n\n\n# Datos de evaluaciones agropecuarias\neva_cafe &lt;- read_csv(\"datos/evas_café.csv\")\neva_cafe |&gt; head()\n\n\n\n\n\n\n3 Municipios en ambas tablas\n\nPrimero identificamos a partir de cuáles variables podríamos unir las dos bases de datos.\n¿Unimos los créditos a las EVAs o las EVAs a los créditos? En este caso nos interesan municipios que estén en ambas bases de datos.\n\n¿Cuántos municipios hay en la base de datos de créditos?\n¿Cuántos municipios hay en la base de datos de EVAs?\n\n\n\n# Total de municipios direrentes\nmpios_unicos_creditos &lt;-unique(creditos_cafe$id_munic)\nmpios_unicos_evas &lt;- unique(eva_cafe$codigo_dane_municipio)\n\nlength(mpios_unicos_creditos)\nlength(mpios_unicos_evas)\n\n\n¿Cuántos municipios comparten las dos bases de datos?\n\n\nsum(unique(creditos_cafe$id_munic) %in% unique(eva_cafe$codigo_dane_municipio))\n\n\n\n4 Resumen por municipio\n\nPara simplificar el ejercicio vamos a calcular algunas métricas estadísticas por municipio.\n\n\nResumen créditosResumen EVAs\n\n\n\nresumen_creditos &lt;-\n  creditos_cafe |&gt;\n  group_by(id_depto,\n           departamento_inversion,\n           id_munic,\n           municipio_inversion) |&gt;\n  reframe(\n    promedio_plazo = mean(plazo, na.rm = TRUE),\n    promedio_valor = mean(vlr_inic_garantia, na.rm = TRUE)\n  )\n\nresumen_creditos |&gt; \n  head()\n\n\n\n\nresumen_evas &lt;-\n  eva_cafe |&gt;\n  group_by(codigo_dane_departamento,\n           departamento,\n           codigo_dane_municipio,\n           municipio) |&gt;\n  reframe(\n    promedio_rto = mean(rendimiento_t_ha, na.rm = TRUE),\n    promedio_pdn = mean(produccion_t, na.rm = TRUE)\n  )\n\nresumen_evas |&gt; \n  head()\n\n\n\n\n\n\n5 Unión de datos\n\nAhora unimos los dos resúmenes. La unión se realiza teniendo en cuenta la variable municipio, pero es importante tener en cuenta que tienen diferente nombre en cada tabla.\n\n\nnames(resumen_creditos)\nnames(resumen_evas)\n\n\nOpcional: para facilitar el proceso podemos hacer dos cosas antes de unir las bases de datos:\n\nEditar los nombres de la variable que es común en ambas tablas y a través de la cual realizamos la unión.\nComo el nombre del municipio y departamento está en ambas tablas, solo es necesario que lo mantengamos en una tabla, ya que se repetirá.\n\n\n\n# Editando nombres y seleccionando columnas en evas\nresumen_evas2 &lt;-\n  resumen_evas |&gt;\n  select(id_munic = codigo_dane_municipio, promedio_rto, promedio_pdn)\n\nresumen_evas2 |&gt; head()\n\n\nAhora unimos las dos tablas.\n\n\ndf_completa &lt;-\n  inner_join(resumen_creditos, resumen_evas2, by = \"id_munic\")\n\ndf_completa |&gt; head()\n\n\n¿Cuál es la dimensión de esta nueva base de datos?\n\n\ndf_completa |&gt; dim()\n\n\n\n6 Visualizaciones\n\nDistribución de variablesMonto vs RendimientoMonto vs rendimientoMonto vs producción\n\n\n\nPlazo del crédito:\n\n\ndf_completa |&gt; \n  ggplot(aes(x = promedio_plazo)) +\n  geom_histogram(color = \"black\") +\n  labs(x = \"Plazo (meses)\",\n       y = \"Frecuencia\",\n       title = \"Distribución del plazo en créditos agropecuarios\",\n       subtitle = \"Colombia\") +\n  theme_minimal()\n\n\nValor del crédito:\n\n\ndf_completa |&gt; \n  ggplot(aes(x = promedio_valor)) +\n  geom_histogram(color = \"black\") +\n  labs(x = \"Valor ($)\",\n       y = \"Frecuencia\",\n       title = \"Distribución del valor en créditos agropecuarios\",\n       subtitle = \"Colombia\") +\n  theme_minimal()\n\n\nPromedio de rendimiento:\n\n\ndf_completa |&gt; \n  ggplot(aes(x = promedio_rto)) +\n  geom_histogram(color = \"black\") +\n  labs(x = \"Rendimiento (t/ha)\",\n       y = \"Frecuencia\",\n       title = \"Distribución del rendimiento promedio en café\",\n       subtitle = \"Colombia\") +\n  theme_minimal()\n\n\nProducción en toneladas del cultivo de café:\n\n\ndf_completa |&gt; \n  ggplot(aes(x = promedio_pdn)) +\n  geom_histogram(color = \"black\") +\n  labs(x = \"Producción (t)\",\n       y = \"Frecuencia\",\n       title = \"Distribución de producción promedio en café\",\n       subtitle = \"Colombia\") +\n  theme_minimal()\n\n\n\n\n¿En qué departamentos se solicita mayor monto de créditos?\n\n\ndf_completa |&gt; \n  ggplot(aes(x = departamento_inversion, y = promedio_valor)) +\n  geom_boxplot() +\n  labs(x = \"Departamento\",\n       y = \"Valor ($)\",\n       title = \"Distribución de monto de crédito por departamento\",\n       subtitle = \"Colombia\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n¿En qué departamentos hay mayores rendimientos?\n\n\ndf_completa |&gt; \n  ggplot(aes(x = departamento_inversion, y = promedio_rto)) +\n  geom_boxplot() +\n  labs(x = \"Departamento\",\n       y = \"Rendimiento (t/ha)\",\n       title = \"Distribución del rendimiento por departamento\",\n       subtitle = \"Colombia\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n¿Existe asociación entre el monto del crédito y el rendimiento?\n\n\ncor(df_completa$promedio_valor, df_completa$promedio_rto, use = \"pairwise.complete.obs\")\n\n\nGraficamos el diagrama de dispersión:\n\n\ndf_completa |&gt; \n  # filter(promedio_valor &lt;= 4e+07) |&gt;\n  ggplot(aes(x = promedio_valor, y = promedio_rto)) +\n  geom_point() +\n  labs(x = \"Valor ($)\",\n       y = \"Rendimiento (t/ha)\",\n       title = \"Monto del crédito vs rendimiento\",\n       subtitle = \"Colombia\") +\n  theme_minimal()\n\n\n\n\nAhora relacionamos el valor del crédito con la producción:\n\n\ncor(df_completa$promedio_valor, df_completa$promedio_pdn, use = \"pairwise.complete.obs\")\n\n\nGráfico:\n\n\ndf_completa |&gt; \n  # filter(promedio_valor &lt;= 4e+07) |&gt;\n  ggplot(aes(x = promedio_valor, y = promedio_pdn)) +\n  geom_point() +\n  labs(x = \"Valor ($)\",\n       y = \"Producción (t)\",\n       title = \"Monto del crédito vs producción\",\n       subtitle = \"Colombia\") +\n  theme_minimal() +\n  scale_y_log10()"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/03-ejemplos-visualizacion-r.html",
    "href": "code-example/ejemplos-r-py-202401/03-ejemplos-visualizacion-r.html",
    "title": "Título",
    "section": "",
    "text": "library(readr)\nlibrary(dplyr)\nlibrary(ggplot2)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/03-ejemplos-visualizacion-r.html#conteo-de-créditos-por-género",
    "href": "code-example/ejemplos-r-py-202401/03-ejemplos-visualizacion-r.html#conteo-de-créditos-por-género",
    "title": "Título",
    "section": "Conteo de créditos por género",
    "text": "Conteo de créditos por género\n\nTabla:\n\n\ncreditos |&gt; \n  count(genero)\n\n\nGráfico:\n\n\ncreditos |&gt; \n  count(genero) |&gt; \n  ggplot(aes(x = genero, y = n)) +\n  geom_col()"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "",
    "text": "a &lt;- list(2, 1, 4)\na\n\n[[1]]\n[1] 2\n\n[[2]]\n[1] 1\n\n[[3]]\n[1] 4\n\n\n\nlength(a)\n\n[1] 3\n\n\n\nclass(a)\n\n[1] \"list\"\n\n\n\nround(1.345, 1)\n\n[1] 1.3\n\n\n\nhelp(round)\n\nstarting httpd help server ... done"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#vectores",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#vectores",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Vectores",
    "text": "Vectores\n\npeso_kg &lt;- c(65.3, 82.5, 57.5, 82, 77.7)\naltura_m &lt;- c(1.68, 1.75, 1.62, 1.80, 1.72)\n\npeso_kg / altura_m^2\n\n[1] 23.13634 26.93878 21.90977 25.30864 26.26420\n\n\n\naltura_m &gt; 1.70\n\n[1] FALSE  TRUE FALSE  TRUE  TRUE\n\n\n\naltura_m[altura_m &gt; 1.70]\n\n[1] 1.75 1.80 1.72"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#diccionarios-listas",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#diccionarios-listas",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Diccionarios (listas)",
    "text": "Diccionarios (listas)\n\ndiccionario &lt;- list(\n  Nombre = c('Pepito', 'Juanita', 'Pepita', 'Bill', 'Jenny'),\n  Peso = peso_kg,\n  Altura = altura_m\n)\n\ndiccionario\n\n$Nombre\n[1] \"Pepito\"  \"Juanita\" \"Pepita\"  \"Bill\"    \"Jenny\"  \n\n$Peso\n[1] 65.3 82.5 57.5 82.0 77.7\n\n$Altura\n[1] 1.68 1.75 1.62 1.80 1.72\n\n\n\nnames(diccionario)\n\n[1] \"Nombre\" \"Peso\"   \"Altura\""
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#dataframes-desde-una-lista-diccionario",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#dataframes-desde-una-lista-diccionario",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Dataframes desde una lista (diccionario)",
    "text": "Dataframes desde una lista (diccionario)\n\ndata.frame(diccionario)\n\n   Nombre Peso Altura\n1  Pepito 65.3   1.68\n2 Juanita 82.5   1.75\n3  Pepita 57.5   1.62\n4    Bill 82.0   1.80\n5   Jenny 77.7   1.72\n\n\n\ntabla &lt;- data.frame(diccionario)\nhead(tabla, 2)\n\n   Nombre Peso Altura\n1  Pepito 65.3   1.68\n2 Juanita 82.5   1.75\n\n\n\nrownames(tabla) &lt;- c(\"P1\", \"P2\", \"P3\", \"P4\", \"P5\")\ntabla\n\n    Nombre Peso Altura\nP1  Pepito 65.3   1.68\nP2 Juanita 82.5   1.75\nP3  Pepita 57.5   1.62\nP4    Bill 82.0   1.80\nP5   Jenny 77.7   1.72\n\n\n\ncolnames(tabla)\n\n[1] \"Nombre\" \"Peso\"   \"Altura\""
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#dataframe-desde-un-archivo-.csv",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#dataframe-desde-un-archivo-.csv",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Dataframe desde un archivo .csv",
    "text": "Dataframe desde un archivo .csv\n\n1000 Empresas más grandes de Colombia (2017-2018)\n\n\ndf_csv &lt;- read_csv(\"1000_Empresas_mas_grandes_del_pa_s.csv\")\nhead(df_csv)\n\n\nExportamos este archivo a excel:\n\n\nlibrary(writexl)\nwrite_xlsx(df_csv, \"empresas_colombia2.xlsx\")"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#dataframe-desde-un-archivo-de-excel",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-R-01-04-2023.html#dataframe-desde-un-archivo-de-excel",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Dataframe desde un archivo de excel",
    "text": "Dataframe desde un archivo de excel\n\nlibrary(readxl)\ndf_excel &lt;- read_excel(\"empresas_colombia2.xlsx\")\nhead(df_excel, 5)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html",
    "title": "Manipulando listas con R",
    "section": "",
    "text": "numero_decimal &lt;- 23.13\nnumero_entero &lt;- 73\ntexto &lt;- \"Hola mundo!\"\nbooleano &lt;- TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#tipos-de-datos-básicos",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#tipos-de-datos-básicos",
    "title": "Manipulando listas con R",
    "section": "",
    "text": "numero_decimal &lt;- 23.13\nnumero_entero &lt;- 73\ntexto &lt;- \"Hola mundo!\"\nbooleano &lt;- TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#creando-una-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#creando-una-lista",
    "title": "Manipulando listas con R",
    "section": "Creando una lista",
    "text": "Creando una lista\n\nmi_lista = list(numero_decimal, numero_entero, texto, booleano)\nmi_lista\n\n[[1]]\n[1] 23.13\n\n[[2]]\n[1] 73\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#indexación-o-subconjuntos",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#indexación-o-subconjuntos",
    "title": "Manipulando listas con R",
    "section": "Indexación o subconjuntos",
    "text": "Indexación o subconjuntos\n\nmi_lista[1]\n\n[[1]]\n[1] 23.13\n\n\n\nmi_lista[1:2]\n\n[[1]]\n[1] 23.13\n\n[[2]]\n[1] 73"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#cambiando-elementos-de-la-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#cambiando-elementos-de-la-lista",
    "title": "Manipulando listas con R",
    "section": "Cambiando elementos de la lista",
    "text": "Cambiando elementos de la lista\n\nmi_lista[1] &lt;- \"Colombia\"\nmi_lista\n\n[[1]]\n[1] \"Colombia\"\n\n[[2]]\n[1] 73\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE\n\n\n\nmi_lista[1:2] &lt;- list(\"América Latina\", 3.1416)\nmi_lista\n\n[[1]]\n[1] \"América Latina\"\n\n[[2]]\n[1] 3.1416\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#agregando-elementos-a-la-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#agregando-elementos-a-la-lista",
    "title": "Manipulando listas con R",
    "section": "Agregando elementos a la lista",
    "text": "Agregando elementos a la lista\n\nc(mi_lista, \"2023-01-01\")\n\n[[1]]\n[1] \"América Latina\"\n\n[[2]]\n[1] 3.1416\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE\n\n[[5]]\n[1] \"2023-01-01\"\n\n\n\nmi_lista[5] &lt;- \"2023-01-01\"\nmi_lista\n\n[[1]]\n[1] \"América Latina\"\n\n[[2]]\n[1] 3.1416\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE\n\n[[5]]\n[1] \"2023-01-01\""
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#concatenando-combinando-listas",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#concatenando-combinando-listas",
    "title": "Manipulando listas con R",
    "section": "Concatenando (combinando) listas",
    "text": "Concatenando (combinando) listas\n\notra_lista &lt;- list(0.1, 0.2, 0.3)\nc(mi_lista, otra_lista)\n\n[[1]]\n[1] \"América Latina\"\n\n[[2]]\n[1] 3.1416\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE\n\n[[5]]\n[1] \"2023-01-01\"\n\n[[6]]\n[1] 0.1\n\n[[7]]\n[1] 0.2\n\n[[8]]\n[1] 0.3"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#removiendo-elementos-de-la-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#removiendo-elementos-de-la-lista",
    "title": "Manipulando listas con R",
    "section": "Removiendo elementos de la lista",
    "text": "Removiendo elementos de la lista\n\nmi_lista[-5]\n\n[[1]]\n[1] \"América Latina\"\n\n[[2]]\n[1] 3.1416\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#generando-repeticiones-con-listas",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-r.html#generando-repeticiones-con-listas",
    "title": "Manipulando listas con R",
    "section": "Generando repeticiones con listas",
    "text": "Generando repeticiones con listas\n\nrep(mi_lista, 3)\n\n[[1]]\n[1] \"América Latina\"\n\n[[2]]\n[1] 3.1416\n\n[[3]]\n[1] \"Hola mundo!\"\n\n[[4]]\n[1] TRUE\n\n[[5]]\n[1] \"2023-01-01\"\n\n[[6]]\n[1] \"América Latina\"\n\n[[7]]\n[1] 3.1416\n\n[[8]]\n[1] \"Hola mundo!\"\n\n[[9]]\n[1] TRUE\n\n[[10]]\n[1] \"2023-01-01\"\n\n[[11]]\n[1] \"América Latina\"\n\n[[12]]\n[1] 3.1416\n\n[[13]]\n[1] \"Hola mundo!\"\n\n[[14]]\n[1] TRUE\n\n[[15]]\n[1] \"2023-01-01\""
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html",
    "title": "Operadores, listas y vectores",
    "section": "",
    "text": "Numéricos\nEnteros\nTexto\nBooleanos"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#suma",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#suma",
    "title": "Operadores, listas y vectores",
    "section": "Suma",
    "text": "Suma\n\n2 + 2\n\n[1] 4\n\n\n\na &lt;- 10\nb &lt;- 20\na + b\n\n[1] 30\n\n\n\na + 100\n\n[1] 110"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#resta",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#resta",
    "title": "Operadores, listas y vectores",
    "section": "Resta",
    "text": "Resta\n\na - 200\n\n[1] -190"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#multiplicación",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#multiplicación",
    "title": "Operadores, listas y vectores",
    "section": "Multiplicación",
    "text": "Multiplicación\n\na * b\n\n[1] 200"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#división",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#división",
    "title": "Operadores, listas y vectores",
    "section": "División",
    "text": "División\n\na / b\n\n[1] 0.5"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#potencia",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#potencia",
    "title": "Operadores, listas y vectores",
    "section": "Potencia",
    "text": "Potencia\n\n2 ^ 2\n\n[1] 4"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#mayor-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#mayor-que",
    "title": "Operadores, listas y vectores",
    "section": "Mayor que",
    "text": "Mayor que\n\na &gt; b\n\n[1] FALSE\n\n\n\na &gt; 5\n\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#menor-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#menor-que",
    "title": "Operadores, listas y vectores",
    "section": "Menor que",
    "text": "Menor que\n\na &lt; 10\n\n[1] FALSE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#mayor-o-igual-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#mayor-o-igual-que",
    "title": "Operadores, listas y vectores",
    "section": "Mayor o igual que",
    "text": "Mayor o igual que\n\na &gt;= 10\n\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#menor-o-igual-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#menor-o-igual-que",
    "title": "Operadores, listas y vectores",
    "section": "Menor o igual que",
    "text": "Menor o igual que\n\na &lt;= 10\n\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#igualdad",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#igualdad",
    "title": "Operadores, listas y vectores",
    "section": "Igualdad",
    "text": "Igualdad\n\na == b\n\n[1] FALSE\n\n\n\na == a\n\n[1] TRUE"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#diferencia-no-igual",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-R.html#diferencia-no-igual",
    "title": "Operadores, listas y vectores",
    "section": "Diferencia (no igual)",
    "text": "Diferencia (no igual)\n\na != b \n\n[1] TRUE\n\n\n\n2 != 3\n\n[1] TRUE"
  },
  {
    "objectID": "ciclo3.html",
    "href": "ciclo3.html",
    "title": "Ciclo 03",
    "section": "",
    "text": "Introducción a la Ciencia de Datos\nFundamentos de R y Python - Parte 1\nTipos de datos y visualización\n\n\n\n\n\nColocaciones de Crédito Sector Agropecuario 2024\nCréditos agropecuarios en café\nEvaluaciones agropecuarias en café"
  },
  {
    "objectID": "ciclo3.html#material-de-apoyo---2024-01",
    "href": "ciclo3.html#material-de-apoyo---2024-01",
    "title": "Ciclo 03",
    "section": "",
    "text": "Introducción a la Ciencia de Datos\nFundamentos de R y Python - Parte 1\nTipos de datos y visualización\n\n\n\n\n\nColocaciones de Crédito Sector Agropecuario 2024\nCréditos agropecuarios en café\nEvaluaciones agropecuarias en café"
  },
  {
    "objectID": "ciclo3.html#plantillas",
    "href": "ciclo3.html#plantillas",
    "title": "Ciclo 03",
    "section": "Plantillas",
    "text": "Plantillas\n\nPlantillas Quarto - Jupyter Notebook\n\n\nEjemplos\n\nGoogle Colab: ejemplo biblioteca dtale en Python\nScript: ejemplo biblioteca esquisse en R\nNotebook: ejemplo biblioteca dtale en Python\nEjemplo de visualización con R\nEjemplo de visualización con Python\nAnálisis exploratorio con R\nAnálisis exploratorio con Python"
  },
  {
    "objectID": "ciclo3.html#la-ciencia-de-datos-tiene-que-ver-más-con-personas-que-con-datos",
    "href": "ciclo3.html#la-ciencia-de-datos-tiene-que-ver-más-con-personas-que-con-datos",
    "title": "Ciclo 03",
    "section": "La Ciencia de Datos tiene que ver más con personas que con datos",
    "text": "La Ciencia de Datos tiene que ver más con personas que con datos\n\n\n\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "ciclo1.html",
    "href": "ciclo1.html",
    "title": "Ciclo 01",
    "section": "",
    "text": "Este ciclo se desarrolló durante los años 2018 a 2022.\nLos temas principales fueron:\n\nInvestigación reproducible con R: Ecosistema R Markdown\nFundamentos de manipulación de datos con R: tidyverse\nFundamentos de visualización de datos con R: ggplot2\nGeneración de tableros con R: flexdashboard\nIntroducción al desarrollo de aplicaciones con R: shiny\nIntroducción al Machine Learning con R: tidymodels"
  },
  {
    "objectID": "ciclo1.html#temas-desarrollados",
    "href": "ciclo1.html#temas-desarrollados",
    "title": "Ciclo 01",
    "section": "",
    "text": "Este ciclo se desarrolló durante los años 2018 a 2022.\nLos temas principales fueron:\n\nInvestigación reproducible con R: Ecosistema R Markdown\nFundamentos de manipulación de datos con R: tidyverse\nFundamentos de visualización de datos con R: ggplot2\nGeneración de tableros con R: flexdashboard\nIntroducción al desarrollo de aplicaciones con R: shiny\nIntroducción al Machine Learning con R: tidymodels"
  },
  {
    "objectID": "ciclo1.html#material-de-apoyo---2019-01",
    "href": "ciclo1.html#material-de-apoyo---2019-01",
    "title": "Ciclo 01",
    "section": "Material de apoyo - 2019-01",
    "text": "Material de apoyo - 2019-01\n\nBienvenida\nIntroducción a R y RStudio\nEcosistema R Markdown (1/2)\nEcosistema R Markdown (2/2)\nMundo R + tidyverse (1/2)\nMundo R + tidyverse (2/2)"
  },
  {
    "objectID": "ciclo1.html#material-de-apoyo---2019-02",
    "href": "ciclo1.html#material-de-apoyo---2019-02",
    "title": "Ciclo 01",
    "section": "Material de apoyo - 2019-02",
    "text": "Material de apoyo - 2019-02\n\nRepaso: R + tidyverse\nEjercicio\nCorrelaciones\nRegresión Lineal Simple\nEncuesta rday 2019"
  },
  {
    "objectID": "ciclo1.html#material-de-apoyo---2021-01",
    "href": "ciclo1.html#material-de-apoyo---2021-01",
    "title": "Ciclo 01",
    "section": "Material de apoyo - 2021-01",
    "text": "Material de apoyo - 2021-01\n\nRepaso R-Markdown y Tidyverse\nNovedades en el tidyverse y bibliotecas auxiliares\nVisualización con R: parte 1\nVisualización con R: parte 2\nTableros: flexdashboard 1\nTableros: flexdashboard 2\nShiny: Introducción\nDescargar ejemplos .Rmd y datos"
  },
  {
    "objectID": "ciclo1.html#material-de-apoyo---2022-01",
    "href": "ciclo1.html#material-de-apoyo---2022-01",
    "title": "Ciclo 01",
    "section": "Material de apoyo - 2022-01",
    "text": "Material de apoyo - 2022-01\n\nMachine Learning con R: introducción a tidymodels\nRemuestreo con rsample y modelos con parsnip\nAjuste de modelos con tune e Ingeniería de características con recipes\nOptimización de hiperparámetros con R: tune\nFlujos de trabajo para Machine Learning con R: workflow (pipelines)\nDescargar ejemplos .Rmd y datos\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Ciencia de Datos con R y Python",
    "section": "",
    "text": "Cualquier persona que tenga interés en aprender a utilizar los lenguajes de programación R y Python para análisis de datos. El semillero es totalmente abierto y no tiene ningún costo."
  },
  {
    "objectID": "about.html#quién-puede-participar-en-el-semillero",
    "href": "about.html#quién-puede-participar-en-el-semillero",
    "title": "Ciencia de Datos con R y Python",
    "section": "",
    "text": "Cualquier persona que tenga interés en aprender a utilizar los lenguajes de programación R y Python para análisis de datos. El semillero es totalmente abierto y no tiene ningún costo."
  },
  {
    "objectID": "about.html#propósitos-del-semillero",
    "href": "about.html#propósitos-del-semillero",
    "title": "Ciencia de Datos con R y Python",
    "section": "Propósitos del semillero",
    "text": "Propósitos del semillero\n\nFomentar la discusión de temas relacionados con estadística computacional aplicada .\nPromover la formulación y ejecución de proyectos de investigación con énfasis en métodos estadísticos aplicados.\nEstimular el uso de herramientas tecnológicas que viabilicen el ejercicio académico y profesional.\nImpulsar la utilización de herramientas de código abierto (software libre) para ejecutar análisis estadístico.\nFomentar la sinergía científica entre estudiantes, docentes y comunidad en general."
  },
  {
    "objectID": "about.html#horario",
    "href": "about.html#horario",
    "title": "Ciencia de Datos con R y Python",
    "section": "Horario",
    "text": "Horario\n\nLugar: reuniones virtuales.\nCanal de Youtube: RPyCol- @rpycol"
  },
  {
    "objectID": "about.html#dirección-del-semillero",
    "href": "about.html#dirección-del-semillero",
    "title": "Ciencia de Datos con R y Python",
    "section": "Dirección del semillero",
    "text": "Dirección del semillero\n\nEdimer David Jaramillo"
  },
  {
    "objectID": "about.html#contacto",
    "href": "about.html#contacto",
    "title": "Ciencia de Datos con R y Python",
    "section": "Contacto",
    "text": "Contacto\n\nEscríbenos a cualquiera de estos correos:\n\nedavidja@unal.edu.co\nedimer.davidj@udea.edu.co\n\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "books-rpy.html",
    "href": "books-rpy.html",
    "title": "Libros",
    "section": "",
    "text": "R Para Ciencia de Datos\n\n\n\n\n\n\n\nPython for Data Analysis, 3E\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFundamentals of Data Visualization\n\n\n\n\n\n\n\nggplot2: Elegant Graphics for Data Analysis\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInteractive web-based data visualization with R, plotly, and shiny\n\n\n\n\n\n\n\nData Visualization A practical introduction\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHands-On Programming with R\n\n\n\n\n\n\n\nAdvanced R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNatural Language Processing with Python\n\n\n\n\n\n\n\nWelcome to Text Mining with R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR Markdown: The Definitive Guide\n\n\n\n\n\n\n\nMastering Shiny\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForecasting: Principles and Practice (3rd ed)\n\n\n\n\n\n\n\nStatistical Inference via Data Science\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupervised Machine Learning for Text Analysis in R\n\n\n\n\n\n\n\nTidy Modeling with R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeep Learning\n\n\n\n\n\n\n\nHands-On Machine Learning with Scikit-Learn and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeep Learning with Python\n\n\n\n\n\n\n\nDeep Learning with R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDeep Learning for Coders with Fastai and PyTorch\n\n\n\n\n\n\n\nMastering Spark with R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSpatial Data Science with R and “terra”\n\n\n\n\n\n\n\nGeocomputation with R\n\n\n\n\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "ciclo2.html",
    "href": "ciclo2.html",
    "title": "Ciclo 02",
    "section": "",
    "text": "Bienvenida e Introducción\nEjemplo aplicado: Web Scraping con R\nEjemplo aplicado: Web Scraping con Python\nR + Python en la nube\nFundamentos básicos de R y Python\nOperadores, listas y vectores"
  },
  {
    "objectID": "ciclo2.html#material-de-apoyo---2022-02",
    "href": "ciclo2.html#material-de-apoyo---2022-02",
    "title": "Ciclo 02",
    "section": "",
    "text": "Bienvenida e Introducción\nEjemplo aplicado: Web Scraping con R\nEjemplo aplicado: Web Scraping con Python\nR + Python en la nube\nFundamentos básicos de R y Python\nOperadores, listas y vectores"
  },
  {
    "objectID": "ciclo2.html#ia-para-todos",
    "href": "ciclo2.html#ia-para-todos",
    "title": "Ciclo 02",
    "section": "IA para todos",
    "text": "IA para todos"
  },
  {
    "objectID": "ciclo2.html#chatgpt",
    "href": "ciclo2.html#chatgpt",
    "title": "Ciclo 02",
    "section": "ChatGPT",
    "text": "ChatGPT\n\nSitio oficial OpenAI\n\n\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html",
    "title": "Operadores, listas y vectores",
    "section": "",
    "text": "Numéricos\nEnteros\nTexto\nBooleanos"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#suma",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#suma",
    "title": "Operadores, listas y vectores",
    "section": "Suma",
    "text": "Suma\n\n2 + 2\n\n4\n\n\n\na = 10\nb = 20\na + b\n\n30\n\n\n\na + 100\n\n110"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#resta",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#resta",
    "title": "Operadores, listas y vectores",
    "section": "Resta",
    "text": "Resta\n\na - 200\n\n-190"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#multiplicación",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#multiplicación",
    "title": "Operadores, listas y vectores",
    "section": "Multiplicación",
    "text": "Multiplicación\n\na * b\n\n200"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#división",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#división",
    "title": "Operadores, listas y vectores",
    "section": "División",
    "text": "División\n\na / b\n\n0.5"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#potencia",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#potencia",
    "title": "Operadores, listas y vectores",
    "section": "Potencia",
    "text": "Potencia\n\n2 ** 2\n\n4"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#mayor-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#mayor-que",
    "title": "Operadores, listas y vectores",
    "section": "Mayor que",
    "text": "Mayor que\n\na &gt; b\n\nFalse\n\n\n\na &gt; 5\n\nTrue"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#menor-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#menor-que",
    "title": "Operadores, listas y vectores",
    "section": "Menor que",
    "text": "Menor que\n\na &lt; 10\n\nFalse"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#mayor-o-igual-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#mayor-o-igual-que",
    "title": "Operadores, listas y vectores",
    "section": "Mayor o igual que",
    "text": "Mayor o igual que\n\na &gt;= 10\n\nTrue"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#menor-o-igual-que",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#menor-o-igual-que",
    "title": "Operadores, listas y vectores",
    "section": "Menor o igual que",
    "text": "Menor o igual que\n\na &lt;= 10\n\nTrue"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#igualdad",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#igualdad",
    "title": "Operadores, listas y vectores",
    "section": "Igualdad",
    "text": "Igualdad\n\na == b\n\nFalse\n\n\n\na == a\n\nTrue"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#diferencia-no-igual",
    "href": "code-example/ejemplos-r-py-202301/02-operadores-listas-vectores-Py.html#diferencia-no-igual",
    "title": "Operadores, listas y vectores",
    "section": "Diferencia (no igual)",
    "text": "Diferencia (no igual)\n\na != b\n\nTrue\n\n\n\n2 != 3\n\nTrue"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html",
    "title": "Manipulando listas con Python",
    "section": "",
    "text": "numero_decimal = 23.13\nnumero_entero = 73\ntexto = \"Hola mundo!\"\nbooleano = True"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#tipos-de-datos",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#tipos-de-datos",
    "title": "Manipulando listas con Python",
    "section": "",
    "text": "numero_decimal = 23.13\nnumero_entero = 73\ntexto = \"Hola mundo!\"\nbooleano = True"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#creando-una-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#creando-una-lista",
    "title": "Manipulando listas con Python",
    "section": "Creando una lista",
    "text": "Creando una lista\n\nmi_lista = [numero_decimal, numero_entero, texto, booleano]\nmi_lista\n\n[23.13, 73, 'Hola mundo!', True]\n\n\n\nmi_lista2 = list([numero_decimal, numero_entero, texto, booleano])\nmi_lista2\n\n[23.13, 73, 'Hola mundo!', True]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#indexación-o-sobconjuntos",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#indexación-o-sobconjuntos",
    "title": "Manipulando listas con Python",
    "section": "Indexación o sobconjuntos",
    "text": "Indexación o sobconjuntos\n\nmi_lista[0]\n\n23.13\n\n\n\nmi_lista[-4]\n\n23.13\n\n\n\nmi_lista[0:3]\n\n[23.13, 73, 'Hola mundo!']"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#cambiando-elementos-de-la-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#cambiando-elementos-de-la-lista",
    "title": "Manipulando listas con Python",
    "section": "Cambiando elementos de la lista",
    "text": "Cambiando elementos de la lista\n\nmi_lista[0] = \"Colombia\"\nmi_lista\n\n['Colombia', 73, 'Hola mundo!', True]\n\n\n\nmi_lista[0:2] = [\"América Latina\", 3.1416]\nmi_lista\n\n['América Latina', 3.1416, 'Hola mundo!', True]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#agregando-elementos-a-la-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#agregando-elementos-a-la-lista",
    "title": "Manipulando listas con Python",
    "section": "Agregando elementos a la lista",
    "text": "Agregando elementos a la lista\n\nmi_lista + [\"2023-01-01\"]\n\n['América Latina', 3.1416, 'Hola mundo!', True, '2023-01-01']"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#concatenando-combinando-listas",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#concatenando-combinando-listas",
    "title": "Manipulando listas con Python",
    "section": "Concatenando (combinando) listas",
    "text": "Concatenando (combinando) listas\n\notra_lista = [0.1, 0.2, 0.3]\nmi_lista + otra_lista\n\n['América Latina', 3.1416, 'Hola mundo!', True, 0.1, 0.2, 0.3]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#removiendo-elementos-de-la-lista",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#removiendo-elementos-de-la-lista",
    "title": "Manipulando listas con Python",
    "section": "Removiendo elementos de la lista",
    "text": "Removiendo elementos de la lista\n\ndel(mi_lista[0])\nmi_lista\n\n[3.1416, 'Hola mundo!', True]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#generando-repeticiones-con-listas",
    "href": "code-example/ejemplos-r-py-202301/03-manipulando-listas-python.html#generando-repeticiones-con-listas",
    "title": "Manipulando listas con Python",
    "section": "Generando repeticiones con listas",
    "text": "Generando repeticiones con listas\n\nmi_lista * 3\n\n[3.1416,\n 'Hola mundo!',\n True,\n 3.1416,\n 'Hola mundo!',\n True,\n 3.1416,\n 'Hola mundo!',\n True]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#funciones",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#funciones",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Funciones",
    "text": "Funciones\n\na = [2, 1, 4]\n\n\nlen(a)\n\n\ntype(a)\n\n\nround(1.345, 1)\n\n\nhelp(round)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#métodos",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#métodos",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Métodos",
    "text": "Métodos\n\na.sort()\na\n\n\na.reverse()\na\n\n\ntexto = \"¡hola mundo cruel!\"\n\n\ntexto.upper()\n\n\ntexto.lower()\n\n\ntexto.capitalize()\n\n\ntexto.count(\"a\")\n\n\ntexto.count(\"l\")"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#arrays-con-numpy",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#arrays-con-numpy",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Arrays con numpy",
    "text": "Arrays con numpy\n\nimport numpy as np\n\n\nArrays 1D (vectores) vs Listas\n\npeso_kg = [65.3, 82.5, 57.5, 82, 77.7]\naltura_m = [1.68, 1.75, 1.62, 1.80, 1.72]\n\nCalculemos el índice de masa corporal para estas tres personas:\n\npeso_kg / altura_m ** 2\n\n\npeso_kg_array = np.array(peso_kg)\naltura_m_array = np.array(altura_m)\n\npeso_kg_array / altura_m_array ** 2\n\n\n¿Cómo extraer sólo personas con alturas mayores a 1.70 m?\n\n\naltura_m &gt; 1.70\n\n\naltura_m_array &gt; 1.70\n\n\naltura_m_array[altura_m_array &gt; 1.70]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#diccionarios",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#diccionarios",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Diccionarios",
    "text": "Diccionarios\n\ndiccionario = {'Nombre': ['Pepito', 'Juanita', 'Pepita', 'Bill', 'Jenny'],\n               'Peso': peso_kg,\n               'Altura': altura_m}\n\ndiccionario\n\n\ndiccionario.keys()\n\n\ndiccionario.values()\n\n\ndiccionario.items()\n\n\ndiccionario[\"Peso\"]"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#introducción-a-pandas",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#introducción-a-pandas",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Introducción a pandas",
    "text": "Introducción a pandas\n\nimport pandas as pd"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#dataframe-desde-un-diccionario",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#dataframe-desde-un-diccionario",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Dataframe desde un diccionario",
    "text": "Dataframe desde un diccionario\n\nkeys: nombres o etiquetas de columnas\nvalues: valores (columna por columna)\n\n\npd.DataFrame(diccionario)\n\n\ntabla = pd.DataFrame(diccionario)\ntabla.head(2)\n\n\ntabla.index = [\"P1\", \"P2\", \"P3\", \"P4\", \"P5\"]\ntabla\n\n\ntabla.columns"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#dataframe-desde-un-archivo-.csv",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#dataframe-desde-un-archivo-.csv",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Dataframe desde un archivo .csv",
    "text": "Dataframe desde un archivo .csv\n\n1000 Empresas más grandes de Colombia (2017-2018)\n\n\ndf_csv = pd.read_csv(\"1000_Empresas_mas_grandes_del_pa_s.csv\")\ndf_csv.head(5)\n\n\nExportemos este archivo a excel:\n\n\ndf_csv.to_excel(\"empresas_colombia.xlsx\")"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#dataframe-desde-un-archivo-de-excel",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#dataframe-desde-un-archivo-de-excel",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Dataframe desde un archivo de excel",
    "text": "Dataframe desde un archivo de excel\n\ndf_excel = pd.read_excel(\"empresas_colombia.xlsx\")\ndf_excel.head(5)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#resumen-descriptivo-rápido",
    "href": "code-example/ejemplos-r-py-202301/sesiones-sincronicas/01-python-01-04-2023.html#resumen-descriptivo-rápido",
    "title": "Sesión sincrónica 01-04-2023",
    "section": "Resumen descriptivo rápido",
    "text": "Resumen descriptivo rápido\n\ndf_csv.describe()\n\n\n# df_csv.describe(include = [float])\ndf_csv.describe(include = [np.number])\n\n\ndf_csv.describe(include = [object])"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/02-visualizacion-py-jupyter.html",
    "href": "code-example/ejemplos-r-py-202401/02-visualizacion-py-jupyter.html",
    "title": "Importando datos con pandas",
    "section": "",
    "text": "import pandas as pd\n\ndatos = pd.read_csv(\"datos/colocaciones_créditos_agropecuarios_2024.csv\")\ndatos.head()\n\n\n\n\n\n\n\n\nyear_es\nmes\nfuente_colocacion\ntipo_productor\nvalor_inversion\ndepartamento_inversion\nmunicipio_inversion\nmpio_posconflicto\nplazo\nlinea_de_produccion\ndestino_de_credito\ngenero\nlatitud\nlongitud\n\n\n\n\n0\n2024\n3\nREDESCUENTO\nPEQUEÑO PPIB\n22000000.0\nPUTUMAYO\nORITO\nS\n84\nSIEMBRAS (I)\n141430 Plátano\nH\n0.696667\n-76.874722\n\n\n1\n2024\n3\nREDESCUENTO\nPEQUEÑO PPIB\n17000000.0\nSANTANDER\nOIBA\nN\n81\nSIEMBRAS (I)\n141100 Café\nH\n6.300000\n-73.250000\n\n\n2\n2024\n3\nREDESCUENTO\nPEQUEÑO PPIB\n4000000.0\nHUILA\nLA ARGENTINA\nN\n63\nSIEMBRAS (I)\n141100 Café\nM\n2.250000\n-76.166667\n\n\n3\n2024\n3\nREDESCUENTO\nPEQUEÑO PPIB\n15000000.0\nANTIOQUIA\nURRAO\nS\n36\nSIEMBRAS (I)\n151360 Lulo\nH\n6.333333\n-76.416667\n\n\n4\n2024\n3\nREDESCUENTO\nPEQUEÑO PPIB\n31000000.0\nMETA\nGRANADA\nN\n24\nSIEMBRAS (I)\n141430 Plátano\nH\n3.538611\n-73.700556\n\n\n\n\n\n\n\n\nEjemplo con dtale\n\nPrimero debemos instalar la biblioteca dtale con el siguiente código: pip install dtale\nDespués importamos la biblioteca.\n\n\nimport dtale\n\n\nLo único que necesitamos es pasar el método show() sobre nuestros datos.\n\n\ndtale.show(datos)\n\n\n\ndtale en Google Colab\n\nPrimero debemos instalar las bibliotecas:\n\n\n!pip install pandas\n!pip install dtale\n\n\nConfigruación adicional para ejecutar dentro de Google Colab:\n\n\nimport dtale\nimport dtale.app as dtale_app\ndtale_app.USE_COLAB = True\n\n\nEjecutamos el método show sobre nuestros datos:\n\n\ndtale.show(datos)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/04-ejemplos-visualizacion-python.html",
    "href": "code-example/ejemplos-r-py-202401/04-ejemplos-visualizacion-python.html",
    "title": "Título",
    "section": "",
    "text": "import pandas as pd\nfrom plotnine import ggplot, aes, geom_boxplot, scale_y_log10, geom_col\nfrom siuba import _, count"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/04-ejemplos-visualizacion-python.html#boxplot",
    "href": "code-example/ejemplos-r-py-202401/04-ejemplos-visualizacion-python.html#boxplot",
    "title": "Título",
    "section": "Boxplot",
    "text": "Boxplot\n\n(\n    creditos &gt;&gt;\n    ggplot(aes(y = \"valor_inversion\")) +\n    geom_boxplot() +\n    scale_y_log10()\n)\n\n\n\n\n\n\n\n\n\n(\n    creditos &gt;&gt;\n    ggplot(aes(x = \"genero\", y = \"valor_inversion\")) +\n    geom_boxplot() +\n    scale_y_log10()\n)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/04-ejemplos-visualizacion-python.html#conteo-de-créditos-por-género",
    "href": "code-example/ejemplos-r-py-202401/04-ejemplos-visualizacion-python.html#conteo-de-créditos-por-género",
    "title": "Título",
    "section": "Conteo de créditos por género",
    "text": "Conteo de créditos por género\n\nTabla:\n\n\n(\n    creditos &gt;&gt;\n    count(_.genero)\n)\n\n\n\n\n\n\n\n\ngenero\nn\n\n\n\n\n0\nH\n63357\n\n\n1\nM\n33295\n\n\n2\nS\n7365\n\n\n\n\n\n\n\n\nGráfico:\n\n\n(\n    creditos &gt;&gt;\n    count(_.genero) &gt;&gt;\n    ggplot(aes(x = \"genero\", y = \"n\")) +\n    geom_col()\n)"
  },
  {
    "objectID": "code-example/ejemplos-r-py-202401/06-resultados-dashboard-py.html",
    "href": "code-example/ejemplos-r-py-202401/06-resultados-dashboard-py.html",
    "title": "Resultados Dashboard con Python",
    "section": "",
    "text": "1 Importando bibliotecas\n\nimport pandas as pd\nimport numpy as np\nfrom plotnine import * \n\n\n\n2 Importando datos\n\nCréditos agropecuariosEvaluaciones agropecuarias\n\n\n\n# Datos de créditos agropecuarios en café\ncreditos_cafe = pd.read_csv(\"datos/créditos_café_colombia.csv\")\ncreditos_cafe.head()\n\n\n\n\n\n\n\n\nyear_es\nmes\nfuente_colocacion\nid_tipo_prod\ntipo_productor\nvalor_inversion\ncolocacion\nid_depto\ndepartamento_inversion\nid_munic\n...\nlinea_de_credito\nlinea_de_produccion\nid_rubro\ndestino_de_credito\ngenero\npercent_fag\nvlr_inic_garantia\nlatitud\nlongitud\ncantidad\n\n\n\n\n0\n2021\n4\nREDESCUENTO\n0\nPEQUEÑO\n10000000.0\n10000000\n85\nCASANARE\n85136\n...\nInversión\nSIEMBRAS (I)\n141100\n141100 Café\nH\n80.0\n8000000.0\n6.185278\n-72.344444\n1\n\n\n1\n2021\n4\nREDESCUENTO\n0\nPEQUEÑO\n6000000.0\n6000000\n85\nCASANARE\n85400\n...\nInversión\nSIEMBRAS (I)\n141100\n141100 Café\nH\n80.0\n4800000.0\n5.829722\n-72.163333\n1\n\n\n2\n2021\n4\nREDESCUENTO\n0\nPEQUEÑO\n8000000.0\n8000000\n17\nCALDAS\n17013\n...\nInversión\nSIEMBRAS (I)\n141100\n141100 Café\nH\n80.0\n6400000.0\n5.633333\n-75.416667\n1\n\n\n3\n2021\n4\nREDESCUENTO\n0\nPEQUEÑO\n25000000.0\n20000000\n68\nSANTANDER\n68669\n...\nInversión\nSIEMBRAS (I)\n141100\n141100 Café\nH\nNaN\nNaN\n6.833333\n-72.750000\n1\n\n\n4\n2021\n9\nREDESCUENTO\n0\nPEQUEÑO\n9000000.0\n9000000\n73\nTOLIMA\n73520\n...\nInversión\nSIEMBRAS (I)\n141100\n141100 Café\nM\n80.0\n7200000.0\n5.133333\n-75.033333\n1\n\n\n\n\n5 rows × 27 columns\n\n\n\n\n\n\n# Datos de evaluaciones agropecuarias\neva_cafe = pd.read_csv(\"datos/evas_café.csv\")\neva_cafe.head()\n\n\n\n\n\n\n\n\ncodigo_dane_departamento\ndepartamento\ncodigo_dane_municipio\nmunicipio\ndesagregacion_cultivo\ncultivo\nciclo_del_cultivo\ngrupo_cultivo\nsubgrupo\nyear_es\nperiodo\narea_sembrada_ha\narea_cosechada_ha\nproduccion_t\nrendimiento_t_ha\nnombre_cientifico_del_cultivo\ncodigo_del_cultivo\nestado_fisico_del_cultivo\n\n\n\n\n0\n5\nAntioquia\n5001\nMedellín\nCafé\nCafé\nPermanente\nCultivos tropicales tradicionales\nCultivos tropicales tradicionales\n2019\n2019\n465.00\n417.00\n517.0000\n1.24\nCoffea arabica\n2030300\nPergamino o seco de trilla\n\n\n1\n5\nAntioquia\n5001\nMedellín\nCafé\nCafé\nPermanente\nCultivos tropicales tradicionales\nCultivos tropicales tradicionales\n2020\n2020\n450.00\n394.00\n452.0000\n1.15\nCoffea arabica\n2030300\nPergamino o seco de trilla\n\n\n2\n5\nAntioquia\n5001\nMedellín\nCafé\nCafé\nPermanente\nCultivos tropicales tradicionales\nCultivos tropicales tradicionales\n2021\n2021\n437.58\n378.22\n276.1006\n0.73\nCoffea arabica\n2030300\nPergamino o seco de trilla\n\n\n3\n5\nAntioquia\n5001\nMedellín\nCafé\nCafé\nPermanente\nCultivos tropicales tradicionales\nCultivos tropicales tradicionales\n2022\n2022\n420.87\n387.08\n241.1800\n0.62\nCoffea arabica\n2030300\nPergamino o seco de trilla\n\n\n4\n5\nAntioquia\n5001\nMedellín\nCafé\nCafé\nPermanente\nCultivos tropicales tradicionales\nCultivos tropicales tradicionales\n2023\n2023\n368.73\n335.26\n238.6600\n0.71\nCoffea arabica\n2030300\nPergamino o seco de trilla\n\n\n\n\n\n\n\n\n\n\n\n\n3 Municipios en ambas tablas\n\nPrimero identificamos a partir de cuáles variables podríamos unir las dos bases de datos.\n¿Unimos los créditos a las EVAs o las EVAs a los créditos? En este caso nos interesan municipios que estén en ambas bases de datos.\n\n¿Cuántos municipios hay en la base de datos de créditos?\n¿Cuántos municipios hay en la base de datos de EVAs?\n\n\n\n# Total de municipios direrentes\nmpios_unicos_creditos = creditos_cafe[\"id_munic\"].unique()\nmpios_unicos_evas = eva_cafe[\"codigo_dane_municipio\"].unique()\n\nprint(len(mpios_unicos_creditos))\nprint(len(mpios_unicos_evas))\n\n717\n640\n\n\n\n¿Cuántos municipios comparten las dos bases de datos?\n\n\nsum(np.isin(mpios_unicos_creditos, mpios_unicos_evas))\n\nnp.int64(623)\n\n\n\n\n4 Resumen por municipio\n\nPara simplificar el ejercicio vamos a calcular algunas métricas estadísticas por municipio.\n\n\nResumen créditosResumen EVAs\n\n\n\nresumen_creditos = (\n    creditos_cafe\n    .groupby(\n        [\"id_depto\", \"departamento_inversion\", \"id_munic\", \"municipio_inversion\"]\n    )\n    .agg(\n        promedio_plazo = (\"plazo\", \"mean\"),\n        promedio_valor = (\"vlr_inic_garantia\", \"mean\")\n    )\n    .reset_index()\n)\n\nresumen_creditos.head()\n\n\n\n\n\n\n\n\nid_depto\ndepartamento_inversion\nid_munic\nmunicipio_inversion\npromedio_plazo\npromedio_valor\n\n\n\n\n0\n5\nANTIOQUIA\n5001\nMEDELLÍN\n67.714286\n1.100000e+07\n\n\n1\n5\nANTIOQUIA\n5002\nABEJORRAL\n79.545455\n1.009633e+07\n\n\n2\n5\nANTIOQUIA\n5004\nABRIAQUÍ\n75.648649\n9.169697e+06\n\n\n3\n5\nANTIOQUIA\n5021\nALEJANDRÍA\n88.168317\n1.119543e+07\n\n\n4\n5\nANTIOQUIA\n5030\nAMAGÁ\n70.026316\n6.445704e+06\n\n\n\n\n\n\n\n\n\n\nresumen_evas = (\n    eva_cafe\n    .groupby(\n        [\"codigo_dane_departamento\", \"departamento\", \"codigo_dane_municipio\", \"municipio\"]\n    )\n    .agg(\n        promedio_rto = (\"rendimiento_t_ha\", \"mean\"),\n        promedio_pdn = (\"produccion_t\", \"mean\")\n    )\n    .reset_index()\n)\n\nresumen_evas.head()\n\n\n\n\n\n\n\n\ncodigo_dane_departamento\ndepartamento\ncodigo_dane_municipio\nmunicipio\npromedio_rto\npromedio_pdn\n\n\n\n\n0\n5\nAntioquia\n5001\nMedellín\n0.890\n344.98812\n\n\n1\n5\nAntioquia\n5002\nAbejorral\n1.372\n3445.49862\n\n\n2\n5\nAntioquia\n5004\nAbriaquí\n1.332\n134.02920\n\n\n3\n5\nAntioquia\n5021\nAlejandría\n1.214\n589.95256\n\n\n4\n5\nAntioquia\n5030\nAmagá\n1.222\n573.34512\n\n\n\n\n\n\n\n\n\n\n\n\n5 Unión de datos\n\nAhora unimos los dos resúmenes. La unión se realiza teniendo en cuenta la variable municipio, pero es importante tener en cuenta que tienen diferente nombre en cada tabla.\n\n\nprint(resumen_creditos.columns)\nprint(resumen_evas.columns)\n\nIndex(['id_depto', 'departamento_inversion', 'id_munic', 'municipio_inversion',\n       'promedio_plazo', 'promedio_valor'],\n      dtype='object')\nIndex(['codigo_dane_departamento', 'departamento', 'codigo_dane_municipio',\n       'municipio', 'promedio_rto', 'promedio_pdn'],\n      dtype='object')\n\n\n\nOpcional: para facilitar el proceso podemos hacer dos cosas antes de unir las bases de datos:\n\nEditar los nombres de la variable que es común en ambas tablas y a través de la cual realizamos la unión.\nComo el nombre del municipio y departamento está en ambas tablas, solo es necesario que lo mantengamos en una tabla, ya que se repetirá.\n\n\n\nresumen_evas2 = (\n    resumen_evas\n    .rename(columns = {\"codigo_dane_municipio\": \"id_munic\"})\n    .loc[:, [\"id_munic\", \"promedio_rto\", \"promedio_pdn\"]]\n)\n\nresumen_evas2.head()\n\n\n\n\n\n\n\n\nid_munic\npromedio_rto\npromedio_pdn\n\n\n\n\n0\n5001\n0.890\n344.98812\n\n\n1\n5002\n1.372\n3445.49862\n\n\n2\n5004\n1.332\n134.02920\n\n\n3\n5021\n1.214\n589.95256\n\n\n4\n5030\n1.222\n573.34512\n\n\n\n\n\n\n\n\nAhora unimos las dos tablas.\n\n\ndf_completa = pd.merge(resumen_creditos, resumen_evas2, on = \"id_munic\")\ndf_completa.head()\n\n\n\n\n\n\n\n\nid_depto\ndepartamento_inversion\nid_munic\nmunicipio_inversion\npromedio_plazo\npromedio_valor\npromedio_rto\npromedio_pdn\n\n\n\n\n0\n5\nANTIOQUIA\n5001\nMEDELLÍN\n67.714286\n1.100000e+07\n0.890\n344.98812\n\n\n1\n5\nANTIOQUIA\n5002\nABEJORRAL\n79.545455\n1.009633e+07\n1.372\n3445.49862\n\n\n2\n5\nANTIOQUIA\n5004\nABRIAQUÍ\n75.648649\n9.169697e+06\n1.332\n134.02920\n\n\n3\n5\nANTIOQUIA\n5021\nALEJANDRÍA\n88.168317\n1.119543e+07\n1.214\n589.95256\n\n\n4\n5\nANTIOQUIA\n5030\nAMAGÁ\n70.026316\n6.445704e+06\n1.222\n573.34512\n\n\n\n\n\n\n\n\n¿Cuál es la dimensión de esta nueva base de datos?\n\n\ndf_completa.shape\n\n(625, 8)\n\n\n\n\n6 Visualizaciones\n\nDistribución de variablesDistribución comparativaMonto vs rendimientoMonto vs producción\n\n\n\nPlazo del crédito:\n\n\n(\n    df_completa &gt;&gt;\n    ggplot(aes(x = \"promedio_plazo\")) +\n    geom_histogram(color = \"black\") +\n    labs(x = \"Plazo (meses)\",\n         y = \"Frecuencia\",\n         title = \"Distribución del plazo en créditos agropecuarios\",\n         subtitle = \"Colombia\") +\n    theme_minimal() \n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\stats\\stat_bin.py:109: PlotnineWarning: 'stat_bin()' using 'bins = 32'. Pick better value with 'binwidth'.\n\n\n\n\n\n\n\n\n\n\nValor del crédito:\n\n\n(\n    df_completa &gt;&gt;\n    ggplot(aes(x = \"promedio_valor\")) +\n    geom_histogram(color = \"black\") +\n    labs(x = \"Valor ($)\",\n         y = \"Frecuencia\",\n         title = \"Distribución del valor en créditos agropecuarios\",\n         subtitle = \"Colombia\") +\n    theme_minimal() \n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\stats\\stat_bin.py:109: PlotnineWarning: 'stat_bin()' using 'bins = 66'. Pick better value with 'binwidth'.\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\layer.py:284: PlotnineWarning: stat_bin : Removed 2 rows containing non-finite values.\n\n\n\n\n\n\n\n\n\n\nRendimiento del cultivo de café:\n\n\n(\n    df_completa &gt;&gt;\n    ggplot(aes(x = \"promedio_rto\")) +\n    geom_histogram(color = \"black\") +\n    labs(x = \"Rendimiento (t/ha)\",\n         y = \"Frecuencia\",\n         title = \"Distribución del rendimiento promedio en café\",\n         subtitle = \"Colombia\") +\n    theme_minimal() \n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\stats\\stat_bin.py:109: PlotnineWarning: 'stat_bin()' using 'bins = 30'. Pick better value with 'binwidth'.\n\n\n\n\n\n\n\n\n\n\nProducción en toneladas del cultivo de café:\n\n\n(\n    df_completa &gt;&gt;\n    ggplot(aes(x = \"promedio_pdn\")) +\n    geom_histogram(color = \"black\") +\n    labs(x = \"Producción (t)\",\n         y = \"Frecuencia\",\n         title = \"Distribución de producción promedio en café\",\n         subtitle = \"Colombia\") +\n    theme_minimal() \n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\stats\\stat_bin.py:109: PlotnineWarning: 'stat_bin()' using 'bins = 72'. Pick better value with 'binwidth'.\n\n\n\n\n\n\n\n\n\n\n\n\n¿En qué departamentos se solicita mayor monto de créditos?\n\n\n(\n    df_completa &gt;&gt; \n    ggplot(aes(x = \"departamento_inversion\", y = \"promedio_valor\")) +\n    geom_boxplot() +\n    labs(x = \"Departamento\",\n         y = \"Valor ($)\",\n         title = \"Distribución de monto de crédito por departamento\",\n         subtitle = \"Colombia\") +\n    theme_minimal() +\n    theme(axis_text_x = element_text(angle = 45, hjust = 1))\n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\layer.py:284: PlotnineWarning: stat_boxplot : Removed 2 rows containing non-finite values.\n\n\n\n\n\n\n\n\n\n\n¿En qué departamentos hay mayores rendimientos?\n\n\n(\n    df_completa &gt;&gt; \n    ggplot(aes(x = \"departamento_inversion\", y = \"promedio_rto\")) +\n    geom_boxplot() +\n    labs(x = \"Departamento\",\n         y = \"Rendimiento (t/ha)\",\n         title = \"Distribución del rendimiento por departamento\",\n         subtitle = \"Colombia\") +\n    theme_minimal() +\n    theme(axis_text_x = element_text(angle = 45, hjust = 1))\n)\n\n\n\n\n\n\n\n\n\n\n\n¿Existe asociación entre el monto del crédito y el rendimiento?\n\n\ndf_completa[[\"promedio_valor\", \"promedio_rto\"]].corr()\n\n\n\n\n\n\n\n\npromedio_valor\npromedio_rto\n\n\n\n\npromedio_valor\n1.000000\n-0.098442\n\n\npromedio_rto\n-0.098442\n1.000000\n\n\n\n\n\n\n\n\nGraficamos el diagrama de dispersión:\n\n\n(\n    \n    df_completa &gt;&gt;\n    # df_completa[df_completa[\"promedio_valor\"] &lt; 4e+07] &gt;&gt; \n    ggplot(aes(x = \"promedio_valor\", y = \"promedio_rto\")) +\n    geom_point() +\n    labs(x = \"Valor ($)\",\n         y = \"Rendimiento (t/ha)\",\n         title = \"Monto del crédito vs rendimiento\",\n         subtitle = \"Colombia\") +\n    theme_minimal()\n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\plotnine\\layer.py:364: PlotnineWarning: geom_point : Removed 2 rows containing missing values.\n\n\n\n\n\n\n\n\n\n\n\n\nAhora relacionamos el valor del crédito con la producción:\n\n\ndf_completa[[\"promedio_valor\", \"promedio_pdn\"]].corr()\n\n\n\n\n\n\n\n\npromedio_valor\npromedio_pdn\n\n\n\n\npromedio_valor\n1.000000\n-0.099401\n\n\npromedio_pdn\n-0.099401\n1.000000\n\n\n\n\n\n\n\n\nGráfico:\n\n\n(\n    \n    # df_completa &gt;&gt;\n    df_completa[df_completa[\"promedio_valor\"] &lt; 4e+07] &gt;&gt; \n    ggplot(aes(x = \"promedio_valor\", y = \"promedio_pdn\")) +\n    geom_point() +\n    labs(x = \"Valor ($)\",\n         y = \"Producción (t)\",\n         title = \"Monto del crédito vs producción\",\n         subtitle = \"Colombia\") +\n    theme_minimal() +\n    scale_y_log10()\n)\n\nc:\\Users\\edimer.david\\AppData\\Local\\miniconda3\\envs\\semillero\\Lib\\site-packages\\pandas\\core\\arraylike.py:399: RuntimeWarning: divide by zero encountered in log10"
  },
  {
    "objectID": "examples-rpy.html",
    "href": "examples-rpy.html",
    "title": "Ejemplos",
    "section": "",
    "text": "Página web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "examples-rpy.html#visualizaciones",
    "href": "examples-rpy.html#visualizaciones",
    "title": "Ejemplos",
    "section": "",
    "text": "Página web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ciencia de Datos con R y Python",
    "section": "",
    "text": "¡Bienvenidos al Semillero de Ciencia de Datos!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPágina web construida con Quarto - Código fuente en Github."
  },
  {
    "objectID": "slides-ciclo01/0_Bienvenida.html#participantes",
    "href": "slides-ciclo01/0_Bienvenida.html#participantes",
    "title": "Semillero de R - FacCA",
    "section": "Participantes",
    "text": "Participantes\n\n¿Cuál es su nombre completo?\n\n\n¿Qué carrera está estudiando?\n\n\n¿Cuáles son sus expectativas del semillero?"
  },
  {
    "objectID": "slides-ciclo01/0_Bienvenida.html#section",
    "href": "slides-ciclo01/0_Bienvenida.html#section",
    "title": "Semillero de R - FacCA",
    "section": "",
    "text": "Fomentar la discusión de temas relacionados con estadística computacional.\nPromover la formulación y ejecución de proyectos de investigación.\nEstimular el uso de herramientas tecnológicas que viabilicen el ejercicio académico y profesional.\nImpulsar la utilización de herramientas de código abierto (software libre).\nPotenciar la sinergía entre tecnología, agricultura y datos; como pilar fundamental de la toma de decisiones."
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#características-de-r",
    "href": "slides-ciclo01/1_Intro.html#características-de-r",
    "title": "Semillero de R - FacCA",
    "section": "Características de R",
    "text": "Características de R\n\nÚtil para administración, gestión e integración de datos.\nCapacidad de graficación robusta.\nComunidad dinámica de R.\nSistema basado en bibliotecas.\nSoftware libre\nDescargar R."
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#gui-de-r",
    "href": "slides-ciclo01/1_Intro.html#gui-de-r",
    "title": "Semillero de R - FacCA",
    "section": "GUI de R",
    "text": "GUI de R"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#caracterísitcas-de-rstudio",
    "href": "slides-ciclo01/1_Intro.html#caracterísitcas-de-rstudio",
    "title": "Semillero de R - FacCA",
    "section": "Caracterísitcas de RStudio",
    "text": "Caracterísitcas de RStudio\n\nEntorno de desarrollo integrado (IDE).\nInteractividad.\nFacilita la investigación reproducible.\nPermite la implementación de otros lenguajes de programación.\nPermite control de versiones (Git).\nDescargar RStudio."
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#ide-rstudio",
    "href": "slides-ciclo01/1_Intro.html#ide-rstudio",
    "title": "Semillero de R - FacCA",
    "section": "IDE RStudio",
    "text": "IDE RStudio"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#flujo-de-trabajo-inicial",
    "href": "slides-ciclo01/1_Intro.html#flujo-de-trabajo-inicial",
    "title": "Semillero de R - FacCA",
    "section": "Flujo de trabajo inicial",
    "text": "Flujo de trabajo inicial\n\nObtener directorio de trabajo (getwd())\nCambiar directorio de trabajo\n\nSession -&gt; Set Working Directory -&gt; Choose Directory.\n\nGenerar archivo .R (ejemplo: Tarea.R).\n\nFile -&gt; New File -&gt; R Script (Ctrl + Shift + N).\n\nGuardar archivo .R (script)\n\nCodificación UTF-8 para lenguaje castellano.\nFile -&gt; Save with Encoding -&gt; UTF-8."
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#elementos-básicos-con-r",
    "href": "slides-ciclo01/1_Intro.html#elementos-básicos-con-r",
    "title": "Semillero de R - FacCA",
    "section": "Elementos básicos con R",
    "text": "Elementos básicos con R\n\n#: comentar código.\n&lt;-: asignar variables.\nCtrl + Enter: ejecutar código.\nCtrl + L: limpiar consola.\nFunciones\n\nc(): concatenar (crear vectores).\ndata.frame(): crear bases de datos.\n$: operador para acceder a las variables por su nombre.\nnames(): nombre de variables o columnas.\nlength(): longitud de un vector o número de variables en una base de datos.\ndim(): dimensiones (filas y columnas) de una matriz o base de datos.\nplot(): función genérica para graficación. Gráfico de dispersión X vs Y.\nstr(): estructura interna de un objeto.\nclass(): clase atómica de un objeto.\n\nTipos de datos: numércios, enteros, caracteres, factores, otros.\nParámetros de graficación: color, tipo de líneas, tipo de símbolos."
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#qué-es-ciencia-de-datos",
    "href": "slides-ciclo01/1_Intro.html#qué-es-ciencia-de-datos",
    "title": "Semillero de R - FacCA",
    "section": "¿Qué es ciencia de datos?",
    "text": "¿Qué es ciencia de datos?"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#qué-es-machine-learning",
    "href": "slides-ciclo01/1_Intro.html#qué-es-machine-learning",
    "title": "Semillero de R - FacCA",
    "section": "¿Qué es Machine Learning?",
    "text": "¿Qué es Machine Learning?"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#machine-learning-razonamiento-intuitivo",
    "href": "slides-ciclo01/1_Intro.html#machine-learning-razonamiento-intuitivo",
    "title": "Semillero de R - FacCA",
    "section": "Machine Learning: razonamiento intuitivo",
    "text": "Machine Learning: razonamiento intuitivo"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#aplicaciones",
    "href": "slides-ciclo01/1_Intro.html#aplicaciones",
    "title": "Semillero de R - FacCA",
    "section": "Aplicaciones",
    "text": "Aplicaciones"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#aplicaciones-1",
    "href": "slides-ciclo01/1_Intro.html#aplicaciones-1",
    "title": "Semillero de R - FacCA",
    "section": "Aplicaciones",
    "text": "Aplicaciones"
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#r-for-data-science",
    "href": "slides-ciclo01/1_Intro.html#r-for-data-science",
    "title": "Semillero de R - FacCA",
    "section": "R for Data Science",
    "text": "R for Data Science\n\n\n\n\n\n\n\n\n\nR for Data Science."
  },
  {
    "objectID": "slides-ciclo01/1_Intro.html#r-programming-for-data-science",
    "href": "slides-ciclo01/1_Intro.html#r-programming-for-data-science",
    "title": "Semillero de R - FacCA",
    "section": "R Programming for Data Science",
    "text": "R Programming for Data Science\n\n\n\n\n\n\n\n\n\nR Programming for Data Science."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r",
    "href": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r",
    "title": "Semillero de R - FacCA",
    "section": "Elementos básicos con R",
    "text": "Elementos básicos con R\n\nEntradas básicas:\n\n#: comentario.\n&lt;-: asignación.\nhelp() o ?: sistema de ayudas en R.\ngetwd(): obtener el directorio de trabajo.\nCTRL + Enter: Ejecutar código.\nCTRL + L: Limpiar consola.\n\nOperadores Aritméticos:\n\n+: suma.\n-: resta.\n*: multiplicación.\n/: división.\n^: potencia.\n%%: división entera.\n%/%: división modular."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-1",
    "href": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-1",
    "title": "Semillero de R - FacCA",
    "section": "Elementos básicos con R",
    "text": "Elementos básicos con R\n\nOperadores lógicos:\n\n==: igualdad.\n!=: diferencia.\n&gt;: mayor.\n&lt;: menor.\n&gt;=: mayor o igual.\n&lt;=: menor o igual.\n!: negación."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-2",
    "href": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-2",
    "title": "Semillero de R - FacCA",
    "section": "Elementos básicos con R",
    "text": "Elementos básicos con R\n\n2 == 2 # Igualdad\n## [1] TRUE\n2 != 2 # Diferencia\n## [1] FALSE\n2 &gt; 2  # Mayor\n## [1] FALSE\n2 &lt; 2  # Menor\n## [1] FALSE\n2 &gt;= 2 # Mayor o igual\n## [1] TRUE\n2 &lt;= 2 # Menor o igual\n## [1] TRUE\n!(2 + 2) == 4 # Negación\n## [1] FALSE"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-3",
    "href": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-3",
    "title": "Semillero de R - FacCA",
    "section": "Elementos básicos con R",
    "text": "Elementos básicos con R\n\nConjunción y disyunción:\n\n& - &&: conjunción.\n| - ||: disyunción.\n\n\n\nflores &lt;- c(10, 2, 5)\nfrutos &lt;- c(6, 7, 3)\n\n# Conjunción\n(flores &gt; 3) & (frutos &lt;= 2)\n## [1] FALSE FALSE FALSE\n\n# Disyunción\n(flores &gt; 3) | (frutos &lt;= 2)\n## [1]  TRUE FALSE  TRUE"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-4",
    "href": "slides-ciclo01/2_MundoR.html#elementos-básicos-con-r-4",
    "title": "Semillero de R - FacCA",
    "section": "Elementos básicos con R",
    "text": "Elementos básicos con R\n\nTipos de datos en R\n\nNuméricos: numeric\nEnteros: integer\nCaracteres: character\nLógicos: logical\nComplejos: complex\nNota: la función class() permite obtener el tipo de dato de un objeto o variable.\n\n\n\nnumerico &lt;- 3.5\nentero &lt;- 2L\ncaracter &lt;- \"Semillero de R\"\nlogico &lt;- TRUE\ncomplejo &lt;- 1 + 2i\n\nclass(numerico)\n## [1] \"numeric\"\nclass(entero)\n## [1] \"integer\"\nclass(caracter)\n## [1] \"character\"\nclass(logico)\n## [1] \"logical\"\nclass(complejo)\n## [1] \"complex\""
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#objetos-estructurados",
    "href": "slides-ciclo01/2_MundoR.html#objetos-estructurados",
    "title": "Semillero de R - FacCA",
    "section": "Objetos estructurados",
    "text": "Objetos estructurados\n\nVectores:\n\nFunción c() para generar vectores.\nCaracterísticas: sólo almacena datos de un mismo tipo.\n\nMatrices:\n\nFunción matrix() para crear matrices.\nCaracterísticas: sólo almacena datos de un mismo tipo.\n\n\nFactores:\n\nCaracteres con jerarquías o niveles.\nÚtil para manipular variables categóricas (nominales u ordinales).\nLa función levels() permite observar los niveles de un factor.\nLas funciones table() y prop.table() permiten obtener las frecuencias absolutas y relativas, respectivamente.\nLos niveles se organizan por defecto por orden alfabético.\n\nListas:\n\nFunción list() para crear listas.\nLas listas poseen longitud.\nLas listas poseen nombres de variables (names()).\nCaracterísticas: permite almacenar cualquier tipo de dato."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#objetos-estructurados-1",
    "href": "slides-ciclo01/2_MundoR.html#objetos-estructurados-1",
    "title": "Semillero de R - FacCA",
    "section": "Objetos estructurados",
    "text": "Objetos estructurados\n\nData frame:\n\nFunción data.frame() permite generar marcos de datos (bases de datos).\nLos marcos de datos poseen nombres, longitud y dimensión.\nLa función str() es de gran utilidad para observar la estructura interna de un objeto (en este caso de una base de datos).\nEl operador $ permitirá elegir variables de la base de datos.\nEl operador $ también facilitará la agregación de variables.\nLa función head() permite mostrar un número determinado de datos iniciales.\nLa función tail() permite mostrar un número determinado de datos finales.\nCaracterísticas:\n\nPermite almacenar datos de diferente tipo.\nCada columna representa una variable (vector).\nCada fila es una observación, registro o individuo.\nTodas las variables deben tener la misma longitud.\nLas bases de datos se pueden crear, importar o utilizar las que trae R por defecto (data())."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#objetos-estructurados-2",
    "href": "slides-ciclo01/2_MundoR.html#objetos-estructurados-2",
    "title": "Semillero de R - FacCA",
    "section": "Objetos estructurados",
    "text": "Objetos estructurados\n\n########### EJEMPLO DE UN FACTOR ##############################################\n\n# Niveles por defecto\nfactor1 &lt;- factor(x = c(\"Hombre\", \"Mujer\", \"Hombre\", \"Mujer\"))\n\nclass(factor1)\n## [1] \"factor\"\n\nlevels(factor1)\n## [1] \"Hombre\" \"Mujer\"\n\n# Manipulando los niveles del factor\nfactor2 &lt;- factor(x = c(\"Hombre\", \"Mujer\", \"Hombre\", \"Mujer\"),\n                  levels = c(\"Mujer\", \"Hombre\"))\nclass(factor2)\n## [1] \"factor\"\n\nlevels(factor2)\n## [1] \"Mujer\"  \"Hombre\"\n\n# Frecuencia absoluta\ntable(factor2)\n## factor2\n##  Mujer Hombre \n##      2      2\n\n# Frecuencia relativa\nprop.table(table(factor2)) \n## factor2\n##  Mujer Hombre \n##    0.5    0.5"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#coerción",
    "href": "slides-ciclo01/2_MundoR.html#coerción",
    "title": "Semillero de R - FacCA",
    "section": "Coerción",
    "text": "Coerción\n\nImplícita: conversión automática.\n\nExplícita: conversión dirigida.\n\nas.numeric(): conversión a numérico.\nas.integer(): conversión a entero.\nas.character(): conversión a caracter.\nas.logical(): conversión a lógico.\nas.complex(): conversión a complejo.\nas.vector(): conversión a vector.\nas.matrix(): conversión a matrix.\nas.factor(): conversión a factor.\nas.list(): conversión a lista.\nas.data.frame(): conversión a base de datos."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#coerción-1",
    "href": "slides-ciclo01/2_MundoR.html#coerción-1",
    "title": "Semillero de R - FacCA",
    "section": "Coerción",
    "text": "Coerción\n\n# Implícita\ncoer.imp &lt;- c(2, \"Texto\", TRUE)\ncoer.imp\n## [1] \"2\"     \"Texto\" \"TRUE\"\nclass(coer.imp)\n## [1] \"character\"\n\n# Explícita\nas.numeric(coer.imp)\n## [1]  2 NA NA\nas.logical(coer.imp)\n## [1]   NA   NA TRUE"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#lectura-y-escritura-de-datos",
    "href": "slides-ciclo01/2_MundoR.html#lectura-y-escritura-de-datos",
    "title": "Semillero de R - FacCA",
    "section": "Lectura y escritura de datos",
    "text": "Lectura y escritura de datos\n\nLectura:\n\nread.csv(): valores separados por comas.\nread.csv2(): valores separados por punto y coma.\nread.table(): valores separados por espacios en blanco.\n\nEscritura:\n\nwrite.csv()\nwrite.csv2()\nwrite.table()\n\nConversión de formatos:\n\nFunción save(): guardar (escribir) datos en formato .Rdata.\nFunción load(): cargar (leer) datos en formato .Rdata."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#proceso-de-análisis-de-datos",
    "href": "slides-ciclo01/2_MundoR.html#proceso-de-análisis-de-datos",
    "title": "Semillero de R - FacCA",
    "section": "Proceso de análisis de datos",
    "text": "Proceso de análisis de datos"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#componentes-del-tidyverse",
    "href": "slides-ciclo01/2_MundoR.html#componentes-del-tidyverse",
    "title": "Semillero de R - FacCA",
    "section": "Componentes del tidyverse",
    "text": "Componentes del tidyverse"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#análisis-de-datos-tidyverse",
    "href": "slides-ciclo01/2_MundoR.html#análisis-de-datos-tidyverse",
    "title": "Semillero de R - FacCA",
    "section": "Análisis de datos + tidyverse",
    "text": "Análisis de datos + tidyverse"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#análisis-de-datos-tidyverse-1",
    "href": "slides-ciclo01/2_MundoR.html#análisis-de-datos-tidyverse-1",
    "title": "Semillero de R - FacCA",
    "section": "Análisis de datos + tidyverse",
    "text": "Análisis de datos + tidyverse"
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#funciones-de-dplyr",
    "href": "slides-ciclo01/2_MundoR.html#funciones-de-dplyr",
    "title": "Semillero de R - FacCA",
    "section": "Funciones de dplyr",
    "text": "Funciones de dplyr\n\n%&gt;%: operador de encadenamiento de procesos.\ndplyr:\n\nfilter(): filtrar filas.\narrange(): reordenar filas.\nslice(): seleccionar filas.\nselect(): seleccionar columnas.\nmutate: editar o generar nuevas variables.\nsummarise: resumir datos.\ngroup_by(): operaciones agrupadas."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#funciones-de-ggplot2",
    "href": "slides-ciclo01/2_MundoR.html#funciones-de-ggplot2",
    "title": "Semillero de R - FacCA",
    "section": "Funciones de ggplot2",
    "text": "Funciones de ggplot2\n\nggplot2:\n\nggplot: primera capa con los datos y el mapeo (mapping) estético (aes) del gráfico.\n\nx: eje x.\ny: eje y.\ncolor: color de bordes o líneas.\nfill: color de relleno.\n\n+: agregar una nueva capa al gráfico.\ngeom_: objetos geométricos\n\ngeom_point(): diagrama de dispersión x vs y.\ngeom_histogram(): histogramas.\ngeom_boxplot(): diagrama de cajas y bigotes.\ngeom_bar(): diagrama de barras.\ngeom_col(): diagrama de barras (con eje y definido).\ngeom_density(): densidad.\ngeom_line(): líneas (interesantes en series temporales)."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#funciones-de-ggplot2-1",
    "href": "slides-ciclo01/2_MundoR.html#funciones-de-ggplot2-1",
    "title": "Semillero de R - FacCA",
    "section": "Funciones de ggplot2",
    "text": "Funciones de ggplot2\n\nlabs: etiquetas del gráfico (eje x, eje y, título, subtítulo).\ntheme_: temas para el gráfico.\nfacet_wrap(): facetas con una variable categórica.\nfacet_grid(): facetas con dos o más variables categóricas."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#calidad-educativa---medellín-2016",
    "href": "slides-ciclo01/2_MundoR.html#calidad-educativa---medellín-2016",
    "title": "Semillero de R - FacCA",
    "section": "Calidad Educativa - Medellín 2016",
    "text": "Calidad Educativa - Medellín 2016\n\nÍndice Sintético de Calidad Educativa - ISCE - Municipio de Medellín 2016.\n\n\n# Lectura de datos\neduca &lt;- read.csv(\"Datos/_ndice_Sint_tico_de_Calidad_Educativa_-_ISCE_-_Municipio_de_Medell_n_2016.csv\")\n\n# Guardando datos en formato .Rdata\nsave(educa, file = \"I_Educativo.Rdata\")\n\n# Cargando datos en formato .Rdata\nload(\"I_Educativo.Rdata\")\n\n# Estructura interna de los datos\nstr(educa)\n## 'data.frame':    381 obs. of  9 variables:\n##  $ DANE           : num  1.05e+11 1.05e+11 1.05e+11 1.05e+11 1.05e+11 ...\n##  $ PRESTACION     : chr  \"OFICIAL\" \"OFICIAL\" \"OFICIAL\" \"OFICIAL\" ...\n##  $ COMUNA         : int  2 2 16 4 1 3 4 10 8 15 ...\n##  $ NOMBRE.COMUNA  : chr  \" SANTA CRUZ\" \" SANTA CRUZ\" \" BELEN\" \" ARANJUEZ\" ...\n##  $ NOMBRE         : chr  \"INST EDUC JOSE MARIA VELAZ\" \"INST EDUC BARRIO SANTA CRUZ\" \"INST EDUC JOSE MARIA BERNAL\" \"INST EDUC CAMILO TORRES RESTREPO\" ...\n##  $ ISCE.Primaria  : num  4.6 4 6.29 7.78 6.41 5.94 3.92 4.45 4.27 6.9 ...\n##  $ ISCE.Secundaria: chr  \"5.67\" \"4.76\" \"7.17\" \"6.45\" ...\n##  $ ISCE.Media     : chr  \"4.38\" \"3.82\" \"7.48\" \"4.15\" ...\n##  $ ISCE.TOTAL     : num  4.93 4.23 6.84 6.59 NA 4.96 4.5 5.59 4.76 5.34 ..."
  },
  {
    "objectID": "slides-ciclo01/2_MundoR.html#estado-nutricional-en-infantes-medellín-2016",
    "href": "slides-ciclo01/2_MundoR.html#estado-nutricional-en-infantes-medellín-2016",
    "title": "Semillero de R - FacCA",
    "section": "Estado nutricional en infantes Medellín 2016",
    "text": "Estado nutricional en infantes Medellín 2016\n\nEstado nutricional de la población menor de 6 años - Municipio de Medellín 2016.\n\n\n# Lectura de datos\ndatos &lt;- read.csv(\"Datos/Estado_nutricional_de_la_poblaci_n_menor_de_6_a_os_-_Municipio_de_Medell_n_2016.csv\")\n\n# Conversión a formato .Rdata\nsave(datos, file = \"NutricionInfantil.Rdata\")\n\n# Cargando datos en formato .Rdata\nload(\"NutricionInfantil.Rdata\")\n\n# Estructura interna de los datos\nstr(datos)\n## 'data.frame':    83861 obs. of  15 variables:\n##  $ Regimen         : chr  \"Particular\" \"Contributivo\" \"Contributivo\" \"Contributivo\" ...\n##  $ EPS             : chr  \"OTRA\" \"EPS Y MEDICINA PREPAGADA SURAMERICANA S.A\" \"EPS Y MEDICINA PREPAGADA SURAMERICANA S.A\" \"EPS Y MEDICINA PREPAGADA SURAMERICANA S.A\" ...\n##  $ Sexo            : chr  \"M\" \"F\" \"M\" \"M\" ...\n##  $ Peso            : num  11.4 11.9 14.2 19.3 8.4 9.3 13.9 11.2 8.4 8.5 ...\n##  $ Estatura        : num  79 86.5 91.5 101 72 74 97.5 89 66.5 74.6 ...\n##  $ DS.P.E          : num  0.04 0.75 1.58 2.97 -0.55 0.03 -1.87 -1.52 -0.17 -1.36 ...\n##  $ Denominación.P.E: chr  \"Peso adecuado para la edad\" \"Peso adecuado para la edad\" \"Por encima de 1 desviacion estandar\" \"Por encima de 1 desviacion estandar\" ...\n##  $ DS.T.E          : num  -1.85 1.11 1.82 2.33 -0.85 0.08 -2.22 -0.96 -1.52 -1.62 ...\n##  $ Denominación.T.E: chr  \"Riesgo de estatura baja\" \"Estatura adecuada para la edad\" \"Estatura adecuada para la edad\" \"Estatura adecuada para la edad\" ...\n##  $ DS.P.T          : num  1.24 0.17 0.91 2.45 -0.22 0 -0.79 -1.55 0.99 -0.83 ...\n##  $ Denominación.P.T: chr  \"Sobrepeso\" \"Peso adecuado para la estatura\" \"Peso adecuado para la estatura\" \"Obesidad\" ...\n##  $ Comuna          : chr  \"Robledo\" \"La América\" \"Guayabal\" \"Belén\" ...\n##  $ Zona            : chr  \"NorOccidental\" \"Centro Occidental\" \"Sur Occidental\" \"Sur Occidental\" ...\n##  $ Edad_en_dias    : int  641 684 721 980 408 350 1754 967 283 544 ...\n##  $ Grupo.Edad      : chr  \"1. De 0 a 2 Anos\" \"1. De 0 a 2 Anos\" \"1. De 0 a 2 Anos\" \"2. De 2 a 5 Anos\" ..."
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html",
    "href": "slides-ciclo01/cor-rls.html",
    "title": "Correlación: visualizaciones",
    "section": "",
    "text": "datos &lt;- read.csv(\"Datos/Datos_Continentes.csv\")\ndatos\n\n                                              pais  cajeros17 camas14\n1                                       Afganistán   1.274667    0.50\n2                                          Albania  31.471579      NA\n3                                         Alemania         NA      NA\n4                                          Andorra         NA      NA\n5                                           Angola         NA      NA\n6                                Antigua y Barbuda  63.114237    3.80\n7                                   Arabia Saudita  74.375035    2.70\n8                                          Argelia   9.384573      NA\n9                                        Argentina  59.391257    5.00\n10                                         Armenia  63.690056      NA\n11                                           Aruba 124.985534      NA\n12                                       Australia 162.006414    3.80\n13                                         Austria 115.303521      NA\n14                                      Azerbaiyán  32.127577      NA\n15                                         Bahamas 115.105535      NA\n16                                         Bahrein         NA    2.00\n17                                      Bangladesh   8.072708    0.60\n18                                        Barbados         NA    5.80\n19                                         Belarús  55.633457      NA\n20                                         Bélgica         NA    6.20\n21                                          Belice  38.917623    1.30\n22                                           Benin         NA      NA\n23                                        Bermudas         NA      NA\n24                                          Bhután  36.581871      NA\n25                                         Bolivia  40.225490    1.10\n26                            Bosnia y Herzegovina  51.104169      NA\n27                                        Botswana  32.571156      NA\n28                                          Brasil 106.780646    2.20\n29                               Brunei Darussalam  68.486509      NA\n30                                        Bulgaria  95.128845      NA\n31                                    Burkina Faso   3.972802      NA\n32                                         Burundi         NA    0.80\n33                                      Cabo Verde  46.938877      NA\n34                                         Camboya  16.728591      NA\n35                                         Camerún         NA      NA\n36                                          Canadá 227.823571      NA\n37                                            Chad   1.536362      NA\n38                                           Chile  52.979853      NA\n39                                           China         NA      NA\n40                                          Chipre  48.520334      NA\n41                                        Colombia  41.840115    1.50\n42                                         Comoras   4.896051      NA\n43                            Congo, República del         NA      NA\n44                Congo, República Democrática del         NA      NA\n45                             Corea, República de         NA      NA\n46         Corea, República Popular Democrática de         NA      NA\n47                                      Costa Rica  64.883624    1.10\n48                                   Côte d'Ivoire         NA      NA\n49                                         Croacia 140.381651    5.89\n50                                            Cuba         NA    5.20\n51                                         Curacao         NA      NA\n52                                       Dinamarca  50.057355      NA\n53                                        Djibouti  12.130586    1.40\n54                                        Dominica  36.279455      NA\n55                                         Ecuador  50.280612      NA\n56                      Egipto, República Árabe de         NA    1.60\n57                                     El Salvador  37.264356    1.30\n58                          Emiratos Árabes Unidos  65.505847      NA\n59                                       Eslovenia  93.655056      NA\n60                                          España 111.834936      NA\n61                                  Estados Unidos         NA      NA\n62                                         Estonia  67.989627      NA\n63                                        Eswatini  30.040870      NA\n64                                         Etiopía         NA      NA\n65                             Federación de Rusia 163.926125      NA\n66                                            Fiji  50.177164      NA\n67                                       Filipinas  28.305813      NA\n68                                       Finlandia  32.515116      NA\n69                                         Francia         NA      NA\n70                                           Gabón         NA      NA\n71                                          Gambia         NA      NA\n72                                         Georgia  75.930531      NA\n73                                           Ghana  11.530873      NA\n74                                       Gibraltar         NA      NA\n75                                         Granada  44.067839    3.70\n76                                          Grecia  61.532615      NA\n77                                     Groenlandia         NA      NA\n78                                            Guam         NA      NA\n79                                       Guatemala  36.057779    0.60\n80                                          Guinea   2.247021      NA\n81                               Guinea Ecuatorial         NA      NA\n82                                   Guinea-Bissau         NA      NA\n83                                          Guyana  20.278907    1.60\n84                                           Haití   1.969990      NA\n85                                        Honduras  23.889901    0.70\n86       Hong Kong, Región Administrativa Especial         NA      NA\n87                                         Hungría  60.937153      NA\n88                                           India  22.065116      NA\n89                                       Indonesia  55.614194      NA\n90                    Irán, República Islámica del  76.488143    1.50\n91                                            Iraq   2.678396    1.40\n92                                         Irlanda  89.500261      NA\n93                                     Isla de Man         NA      NA\n94             Isla de San Martín (parte francesa)         NA      NA\n95                                        Islandia  89.470869    3.20\n96                                    Islas Caimán         NA      NA\n97                                 Islas del Canal         NA      NA\n98                                     Islas Feroe         NA      NA\n99                                  Islas Marshall         NA      NA\n100                                  Islas Salomón  12.035851      NA\n101                          Islas Turcas y Caicos         NA      NA\n102                        Islas Vírgenes (EE.UU.)         NA      NA\n103                      Islas Vírgenes Británicas         NA      NA\n104                                         Israel 121.258372      NA\n105                                         Italia  92.400919      NA\n106                                        Jamaica  31.789783      NA\n107                                          Japón 127.766988      NA\n108                                       Jordania  27.998151    1.90\n109                                      Kazajstán  74.599741      NA\n110                                          Kenya         NA      NA\n111                                     Kirguistán  33.430396      NA\n112                                       Kiribati         NA      NA\n113                                         Kosovo  36.010919      NA\n114                                         Kuwait  64.428607    2.00\n115                                        Lesotho         NA      NA\n116                                        Letonia  61.884893      NA\n117                                         Líbano  40.658488    2.90\n118                                        Liberia         NA      NA\n119                                          Libia   3.755819    3.70\n120                                  Liechtenstein         NA      NA\n121                                       Lituania  46.749891      NA\n122                                     Luxemburgo 115.396650    4.90\n123                            Macedonia del Norte  59.407401      NA\n124                                     Madagascar   2.795703      NA\n125                                        Malasia  46.751131      NA\n126                                         Malawi         NA      NA\n127                                       Maldivas  35.010339      NA\n128                                           Malí         NA      NA\n129                                          Malta  55.254084    4.70\n130                                        Mariana         NA      NA\n131                                      Marruecos  26.979311    1.10\n132                                       Mauricio  43.504273      NA\n133                                     Mauritania         NA      NA\n134                                         México  53.532271      NA\n135                                         Mónaco         NA      NA\n136                                       Mongolia         NA      NA\n137                                     Montenegro  80.832711      NA\n138                                     Mozambique   8.931567      NA\n139                                        Myanmar   4.378925      NA\n140                                        Namibia         NA      NA\n141                                          Nauru         NA      NA\n142                                          Nepal  10.275601      NA\n143                                      Nicaragua  17.654647    0.90\n144                                          Níger         NA      NA\n145                                        Nigeria  16.320860      NA\n146                                        Noruega  36.377238      NA\n147                                Nueva Caledonia         NA      NA\n148                                 Nueva Zelandia  65.880694      NA\n149                                           Omán  37.710615    1.60\n150                                   Países Bajos  44.613599      NA\n151                                       Pakistán  10.435218    0.60\n152                                          Palau  45.845272      NA\n153                                         Panamá  70.663779      NA\n154                             Papua Nueva Guinea         NA      NA\n155                                       Paraguay  27.116665      NA\n156                                           Perú 106.572408    1.60\n157                             Polinesia Francesa         NA      NA\n158                                        Polonia         NA      NA\n159                                       Portugal 168.039179      NA\n160                                    Puerto Rico         NA      NA\n161                                          Qatar  59.041954    1.20\n162 Región Administrativa Especial de Macao, China 313.152787      NA\n163                                    Reino Unido 128.126941      NA\n164                          República Árabe Siria         NA    1.50\n165                       República Centroafricana   1.322474      NA\n166                                República Checa  55.650985      NA\n167                           República de Moldova  36.743286      NA\n168              República Democrática Popular Lao  26.092450      NA\n169                           República Dominicana  39.015209    1.60\n170                             República Eslovaca  60.688374      NA\n171                       Ribera Occidental y Gaza         NA      NA\n172                                        Rumania  66.693235      NA\n173                                         Rwanda   5.555326      NA\n174                            Saint Kitts y Nevis  88.439385      NA\n175                                          Samoa  49.770813      NA\n176                                Samoa Americana         NA      NA\n177                                     San Marino 182.892515      NA\n178                   San Vicente y las Granadinas  35.821323    2.60\n179                                    Santa Lucía  43.426712      NA\n180                          Santo Tomé y Príncipe  27.398668      NA\n181                                        Senegal         NA      NA\n182                                         Serbia  45.765899      NA\n183                                     Seychelles  79.163770      NA\n184                                   Sierra Leona         NA      NA\n185                                       Singapur  65.158486      NA\n186                      Sint Maarten (Dutch part)         NA      NA\n187                                        Somalia         NA    0.90\n188                                      Sri Lanka         NA      NA\n189                                      Sudáfrica  67.930858      NA\n190                                          Sudán   5.423853      NA\n191                                         Suecia  31.978818      NA\n192                                          Suiza  97.769823      NA\n193                                       Suriname         NA      NA\n194                                      Tailandia 117.279135      NA\n195                                       Tanzanía         NA      NA\n196                                     Tayikistán         NA      NA\n197                                    Timor-Leste  12.584690      NA\n198                                           Togo   3.929497      NA\n199                                          Tonga  36.067229      NA\n200                              Trinidad y Tobago  43.083965    3.00\n201                                          Túnez         NA    2.20\n202                                   Turkmenistán         NA      NA\n203                                        Turquía  78.124179      NA\n204                                         Tuvalu         NA      NA\n205                                        Ucrania  97.670667      NA\n206                                         Uganda   4.060236      NA\n207                                        Uruguay  84.726290    2.80\n208                                     Uzbekistán  24.147006      NA\n209                                        Vanuatu         NA      NA\n210                                      Venezuela         NA    0.80\n211                                       Viet Nam  24.336015    2.60\n212                                Yemen, Rep. del         NA    0.70\n213                                         Zambia  11.293390      NA\n214                                       Zimbabwe   5.792911      NA\n      cto_pib16   densidad17 desempleo17 deuda16  electri16     fertil16\n1     2.2603142 5.442221e+01       1.559      NA  84.137138 1.218230e+01\n2     3.3500000 1.048707e+02      13.750      NA 100.000000 1.261385e+02\n3     2.2422351 2.366780e+02       3.746 2.93949 100.000000 1.972283e+02\n4     1.8891244 1.637553e+02          NA      NA 100.000000           NA\n5    -2.5800972 2.389043e+01       7.139      NA  40.520607 7.982743e+00\n6     5.5897391 2.318455e+02          NA      NA  97.354668 1.387000e+01\n7     1.6706423 1.532231e+01       5.890      NA 100.000000 1.768737e+02\n8     3.3000000 1.734788e+01      11.996      NA  99.439568 2.231527e+01\n9    -1.8225422 1.617686e+01       8.347 0.53274 100.000000 5.033633e+01\n10    0.2000000 1.029312e+02      17.827 0.23305 100.000000 1.104951e+02\n11   -0.2112251 5.848000e+02          NA      NA  95.570145           NA\n12    2.8273105 3.198361e+00       5.594      NA 100.000000 6.810370e+01\n13    2.0395750 1.066074e+02       5.499 3.08695 100.000000 1.418374e+02\n14   -3.1000002 1.191972e+02       5.000 0.20637 100.000000 1.409285e+01\n15   -1.6895499 3.949660e+01      12.381      NA 100.000000 1.440175e+02\n16    3.4709237 1.918488e+03       0.947      NA 100.000000 1.318750e+03\n17    7.1134895 1.265036e+03       4.372      NA  75.920000 2.894023e+02\n18    2.0071685 6.644628e+02       9.487      NA 100.000000 1.138043e+02\n19   -2.5264464 4.679224e+01       5.650 0.50063 100.000000 1.466186e+02\n20    1.4886796 3.759047e+02       7.086 2.48835 100.000000 3.184848e+02\n21   -0.5880236 1.642617e+01       9.000      NA  92.214317 4.662489e+02\n22    3.9648599 9.911043e+01       2.180      NA  41.402615 1.474761e+01\n23           NA 1.211870e+03          NA      NA 100.000000 1.771000e+02\n24    8.0221012 2.117266e+01       2.170      NA 100.000000 1.325330e+01\n25    4.2639194 1.020179e+01       3.233      NA  93.039131 7.609475e+00\n26    3.1440700 6.849643e+01      20.470 0.21597 100.000000 1.318000e+02\n27    4.3154865 4.043656e+00      17.631      NA  60.688396 8.957242e+01\n28   -3.3054543 2.504005e+01      12.827 1.26578 100.000000 1.860961e+02\n29   -2.4655149 8.134668e+01       9.316      NA 100.000000 1.418000e+02\n30    3.9367581 6.518006e+01       6.164 0.78006 100.000000 1.255434e+02\n31    5.9341351 7.015125e+01       6.015      NA  19.164713 2.177352e+01\n32   -0.6000200 4.230625e+02       1.501      NA   7.588477 5.424258e+00\n33    4.7057915 1.355801e+02      12.241      NA  92.611588           NA\n34    6.8630921 9.067173e+01       1.062      NA  49.770657 1.739360e+01\n35    4.6484816 5.088474e+01       3.359      NA  60.074768 9.667529e+00\n36    1.4141027 4.036734e+00       6.340 1.60407 100.000000 8.762510e+01\n37   -6.2555271 1.183291e+01       2.199 0.32217   8.830898           NA\n38    1.2658676 2.428238e+01       6.958 0.36244 100.000000 2.938448e+02\n39    6.7000000 1.476741e+02       4.400 2.10826 100.000000 5.033221e+02\n40    4.8121876 1.276570e+02      11.052 0.50167 100.000000 1.967388e+02\n41    1.9626143 4.422318e+01       8.872 0.26955  99.004456 6.594521e+02\n42    2.1881975 4.373519e+02       3.696      NA  77.844215           NA\n43   -2.8000188 1.540483e+01      10.156      NA  56.566170 1.844091e+00\n44    2.3993791 3.587922e+01       4.102      NA  17.147379 2.476703e+00\n45    2.9293048 5.279180e+02       3.700 4.22744 100.000000 3.802815e+02\n46           NA 2.117014e+02       3.287      NA  39.244225           NA\n47    4.2459899 9.607852e+01       8.142 0.45775 100.000000 6.048858e+02\n48    7.9717457 7.639858e+01       2.488      NA  64.300000 5.168334e+01\n49    3.5361295 7.370499e+01      11.208 0.84581 100.000000 1.193096e+02\n50    0.5137615 1.104080e+02       2.278 0.34865 100.000000 4.944624e+01\n51           NA 3.607545e+02          NA      NA 100.000000           NA\n52    2.3996822 1.372941e+02       5.743 2.87125 100.000000 1.311478e+02\n53    8.7222601 4.128494e+01      11.164      NA  51.782692           NA\n54    2.5220457 9.856667e+01          NA      NA 100.000000 8.805167e+01\n55   -1.2263840 6.693855e+01       3.836      NA  99.936813 3.454419e+02\n56    4.3466435 9.799905e+01      11.770 0.70848 100.000000 6.491940e+02\n57    2.5805775 3.078114e+02       4.385 0.14662  98.618896 1.323780e+02\n58    2.9884418 1.323591e+02       2.463 0.96366 100.000000           NA\n59    3.1483555 1.025910e+02       6.564 2.00202 100.000000 2.589406e+02\n60    3.1725897 9.326767e+01      17.224 1.18549 100.000000 1.439661e+02\n61    1.5672152 3.554523e+01       4.355 2.74418 100.000000 1.385948e+02\n62    3.4890971 3.030559e+01       5.760 1.28129 100.000000 1.126810e+02\n63    3.2224724 7.949151e+01      22.340      NA  65.790207           NA\n64    7.5617667 1.049574e+02       1.810      NA  42.900000 1.443371e+01\n65   -0.2249110 8.823221e+00       5.212 1.09557 100.000000 1.846364e+01\n66    0.3800034 4.956223e+01       4.143      NA  98.646049 4.603315e+01\n67    6.8757148 3.518734e+02       2.552      NA  90.981613 1.574240e+02\n68    2.7719255 1.812449e+01       8.640 2.74645 100.000000 8.050980e+01\n69    1.1710502 1.225544e+02       9.397 2.24805 100.000000 1.631391e+02\n70    2.0914422 7.859421e+00      19.374      NA  91.395500 2.676640e+01\n71    0.4055965 2.075660e+02       8.906      NA  47.757088 1.235341e+00\n72    2.8489734 6.503202e+01      13.930 0.30104 100.000000 1.708321e+02\n73    3.4477930 1.267189e+02       6.629      NA  79.300000 2.087660e+01\n74           NA 3.457100e+03          NA      NA 100.000000           NA\n75    3.7356141 3.171324e+02          NA      NA  92.344368           NA\n76   -0.1909523 8.342538e+01      21.488 1.00700 100.000000 1.230112e+02\n77    7.6629989 1.368522e-01          NA      NA 100.000000           NA\n78    0.2502888 3.041278e+02       5.245      NA 100.000000           NA\n79    3.0924826 1.578341e+02       2.684      NA  91.779228 3.031532e+02\n80   10.4541058 5.175475e+01       3.572      NA  33.500000 1.568584e+00\n81   -8.5339106 4.519390e+01       9.155      NA  67.889290           NA\n82    6.2628056 6.619072e+01       4.033      NA  14.655790           NA\n83    3.3161317 3.951532e+00      12.115      NA  84.242905 4.460405e+01\n84    1.4527070 3.984481e+02      13.405      NA  38.690166           NA\n85    3.7521489 8.280514e+01       4.048      NA  87.576630 1.643176e+02\n86    2.1629233 7.039714e+03       3.090 0.79144 100.000000 2.704003e+03\n87    2.2807978 1.081185e+02       4.156 1.20606 100.000000 1.282525e+02\n88    8.1695265 4.504186e+02       2.557      NA  84.526817 1.658482e+02\n89    5.0330692 1.457252e+02       4.185      NA  97.620000 2.313696e+02\n90   13.3962445 4.983103e+01      12.100      NA 100.000000 7.629205e+01\n91   13.0241537 8.816436e+01       7.891 0.03631 100.000000 3.581725e+01\n92    4.9875824 6.984063e+01       6.710 1.17681 100.000000 1.247938e+03\n93    7.4000000 1.478719e+02          NA      NA 100.000000           NA\n94           NA 5.905331e+02          NA      NA  71.970284           NA\n95    7.3514753 3.425436e+00       2.742 2.07540 100.000000 1.815289e+02\n96    3.5356589 2.564958e+02          NA      NA 100.000000           NA\n97           NA 8.349192e+02       7.347      NA 100.000000           NA\n98           NA 3.530802e+01          NA      NA 100.000000           NA\n99    1.9104950 2.951500e+02          NA      NA  93.138046           NA\n100   3.4566064 2.184148e+01       1.771      NA  47.919144           NA\n101          NA 3.731158e+01          NA      NA  95.700439           NA\n102   0.9369952 3.064800e+02       8.462      NA 100.000000           NA\n103          NA 2.079733e+02          NA      NA         NA           NA\n104   4.0078887 4.026479e+02       4.215 4.25121 100.000000 2.806780e+02\n105   1.1455128 2.058092e+02      11.211 1.28566 100.000000 1.298473e+02\n106   1.3806584 2.668789e+02      11.659      NA  98.204269 5.724633e+01\n107   0.9381939 3.477776e+02       2.800 3.14081 100.000000 2.421845e+02\n108   2.0037336 1.092853e+02      14.879 0.33201 100.000000 1.120459e+02\n109   1.1000000 6.681400e+00       4.900 0.14179 100.000000 4.325566e+00\n110   5.8691977 8.732449e+01       9.292      NA  56.000000 3.818022e+01\n111   4.3358559 3.231595e+01       6.890 0.11121  99.996101 3.141071e+01\n112   5.1297505 1.437012e+02          NA      NA  84.936272           NA\n113   4.0565786 1.681547e+02          NA      NA 100.000000           NA\n114   3.5470051 2.321284e+02       1.997 0.07878 100.000000 7.507238e+02\n115   3.1789867 7.356189e+01      23.613      NA  29.733309           NA\n116   2.0643813 3.123590e+01       8.715 0.44292 100.000000 1.041925e+02\n117   1.7407420 5.945608e+02       6.114      NA 100.000000 3.309255e+02\n118  -1.5995841 4.912693e+01       2.028      NA  19.800000           NA\n119  -2.7954689 3.622888e+00      17.122      NA  98.536728 1.165116e+01\n120          NA 2.370125e+02          NA      NA 100.000000           NA\n121   2.3531813 4.515186e+01       7.073 0.84724 100.000000 1.318650e+02\n122   2.4114308 2.454058e+02       5.522 1.24366 100.000000 2.621080e+02\n123   2.8484415 8.259952e+01      22.381 0.43287 100.000000 7.931488e+01\n124   4.1799902 4.395135e+01       1.669 0.01498  22.900000 5.174971e+00\n125   4.2234102 9.625404e+01       3.410      NA 100.000000 1.723389e+03\n126   2.4840406 1.975191e+02       5.468      NA  11.000000 2.160590e+01\n127   7.2891863 1.454433e+03       5.830      NA 100.000000 3.149000e+02\n128   5.8000000 1.519598e+01       9.435      NA  35.069500 4.423502e+01\n129   5.2305849 1.462497e+03       4.567 0.59697 100.000000 2.646020e+02\n130  28.2238443 1.198783e+02          NA      NA 100.000000           NA\n131   1.1259775 8.007972e+01       9.053      NA 100.000000 7.110563e+01\n132   3.8379524 6.229621e+02       6.752      NA  98.781784 2.353080e+02\n133   2.0000000 4.288526e+00      10.276      NA  41.652107           NA\n134   2.8978596 6.644372e+01       3.420 0.48650 100.000000 1.140062e+02\n135   3.2138488 1.934750e+04          NA      NA 100.000000           NA\n136   1.1683935 1.979741e+00       6.359 0.18342  81.775032 3.996867e+01\n137   2.9000000 4.627309e+01      16.071      NA 100.000000 2.852078e+02\n138   3.7632756 3.772837e+01       3.173      NA  24.198339 3.722713e+00\n139   5.8624729 8.172140e+01       1.551      NA  57.009384 1.787317e+01\n140   0.6416496 3.077645e+00      23.088      NA  51.782425 2.610671e+01\n141  10.4000040 6.438000e+02          NA      NA  99.202805           NA\n142   0.5886785 2.044297e+02       1.253      NA  90.700000 7.407848e+01\n143   4.6587592 5.166679e+01       4.213      NA  81.796799 6.146321e+01\n144   4.9259309 1.695535e+01       0.285      NA  16.217234 4.020905e-01\n145  -1.6168690 2.095878e+02       6.013      NA  59.300000 5.470367e+00\n146   1.1873548 1.445258e+01       4.162 2.03222 100.000000 2.038963e+02\n147          NA 1.534245e+01      13.797      NA 100.000000 2.381410e+02\n148   3.4714568 1.820630e+01       4.702      NA 100.000000 1.777239e+03\n149   4.9801710 1.497984e+01       3.137 0.25511 100.000000 4.680684e+02\n150   2.1917137 5.084980e+02       4.839 2.03247 100.000000 2.889241e+02\n151   5.5267358 2.555728e+02       3.181      NA  99.147438 1.443301e+02\n152   0.5265690 4.723696e+01          NA      NA  99.289352           NA\n153   4.9664618 5.513300e+01       3.900      NA  93.417801 4.912286e+01\n154   1.5923853 1.822012e+01       2.352 0.03294  22.932154 1.120521e+02\n155   4.3129050 1.714396e+01       4.615 0.15366  98.400000 1.103496e+02\n156   3.9513092 2.512929e+01       3.460 0.12024  94.851746 1.276999e+02\n157          NA 7.732432e+01      12.097      NA 100.000000 2.520320e+02\n158   3.0626004 1.240237e+02       4.887 0.96538 100.000000 1.728171e+02\n159   1.9257357 1.124418e+02       8.867 1.26565 100.000000 1.993961e+02\n160  -1.3269279 3.748592e+02      10.800      NA 100.000000           NA\n161   2.1313109 2.273222e+02       0.140      NA 100.000000 6.755245e+03\n162  -0.8631188 2.047918e+04       2.000 0.23367 100.000000           NA\n163   1.7892361 2.729025e+02       4.335 1.68847 100.000000 2.529037e+02\n164          NA 9.949283e+01       8.031      NA 100.000000 7.551489e+00\n165   4.5312860 7.478699e+00       6.447      NA  13.985112           NA\n166   2.4505424 1.371981e+02       2.890 1.67830 100.000000 1.961472e+02\n167   4.5000000 1.236545e+02       4.098 0.32888 100.000000 2.440760e+01\n168   7.0230919 2.971473e+01       0.603      NA  87.095772           NA\n169   6.6122082 2.228731e+02       5.832      NA 100.000000 8.808971e+01\n170   3.1254101 1.131288e+02       8.131 0.78965 100.000000 1.257624e+02\n171   4.7084353 7.782022e+02      27.444      NA 100.000000           NA\n172   4.8008101 8.511816e+01       4.927 0.48209 100.000000 5.990748e+01\n173   5.9813149 4.948685e+02       0.954      NA  29.370000 1.085750e+01\n174   2.3175085 2.128654e+02          NA      NA 100.000000 4.600000e-01\n175   7.1694201 6.941343e+01       8.324      NA 100.000000 4.637500e+00\n176  -2.6194145 2.782050e+02          NA      NA         NA           NA\n177   2.2000000 5.566667e+02          NA      NA 100.000000           NA\n178   1.9754559 2.817872e+02      19.731      NA 100.000000           NA\n179   3.3651531 2.931869e+02      20.790      NA  97.760918 1.708933e+02\n180   4.1792093 2.128406e+02      13.139      NA  65.440483           NA\n181   6.2284499 8.232778e+01       6.437      NA  64.500000 1.640938e+01\n182   2.7973237 8.027507e+01      13.477 0.89059 100.000000 2.447871e+02\n183   4.5030316 2.083543e+02          NA 0.22162 100.000000 5.217333e+02\n184   6.0554740 1.046995e+02       4.325      NA  20.300000           NA\n185   2.3970215 7.915730e+03       3.907      NA 100.000000 3.023786e+04\n186   0.4325063 1.209088e+03          NA      NA 100.000000           NA\n187          NA 2.350005e+01      13.913      NA  29.890318           NA\n188   4.4688297 3.419550e+02       4.180      NA  95.588234 1.319226e+02\n189   0.5653449 4.675429e+01      27.327      NA  84.200000 5.851160e+01\n190   4.7000000 2.325842e+01      12.773      NA  38.528442 7.172658e+00\n191   2.6839663 2.469298e+01       6.718 3.25490 100.000000 9.633644e+01\n192   1.6012236 2.138590e+02       4.797      NA 100.000000 2.144073e+02\n193  -5.5611934 3.611551e+00       7.599      NA  87.176315 2.177086e+02\n194   3.2826831 1.351319e+02       0.632 0.78133 100.000000 1.617103e+02\n195   6.8671162 6.469860e+01       1.939      NA  32.800000 1.260450e+01\n196   6.8729642 6.427944e+01      10.738 0.10685 100.000000 8.137740e+01\n197   0.8278572 8.717626e+01       2.963      NA  63.394138           NA\n198   5.0999921 1.433663e+02       1.658      NA  46.928375 1.102612e+01\n199   3.3794737 1.500278e+02       1.003      NA  97.020000 3.930055e+01\n200  -5.9570613 2.668860e+02       2.817 0.09175 100.000000 3.560000e+02\n201   1.1083930 7.422842e+01      15.379 0.59989 100.000000 5.925128e+01\n202   6.2000000 1.225305e+01       3.695      NA 100.000000           NA\n203   3.1838191 1.049141e+02      10.819      NA 100.000000 1.377049e+02\n204   3.0349510 3.730667e+02          NA      NA  99.426155           NA\n205   2.4409947 7.738980e+01       9.510 0.48384 100.000000 5.274744e+01\n206   4.7810003 2.137590e+02       1.698      NA  26.700000 1.910848e+00\n207   1.6897982 1.975060e+01       7.890 0.40845 100.000000 1.436685e+02\n208   7.8000000 7.613352e+01       4.972 0.22139 100.000000 2.327032e+02\n209   4.0005745 2.266153e+01       5.423      NA  57.820000           NA\n210          NA 3.625312e+01       7.422 0.11867  99.603836 1.834675e+02\n211   6.2108117 3.081266e+02       1.886      NA 100.000000 4.297848e+02\n212 -13.6214584 5.350762e+01      13.175      NA  71.642349 1.639655e+01\n213   3.7571778 2.299483e+01       7.206      NA  27.219337 8.959407e+01\n214   0.7558693 4.272949e+01       4.943      NA  38.145138 2.290000e+01\n    gasto_edu16 gasto_id16 gasto_militar17        pib16    pm2517 pobRural17\n1       4.20525         NA    9.068569e-01 1.904636e+10 56.910808     74.750\n2       3.95464         NA    1.244175e+00 1.188368e+10 18.200603     40.617\n3            NA    2.93949    1.220136e+00 3.495163e+12 12.028767     22.739\n4       3.25670         NA              NA 2.877312e+09 10.307621     11.850\n5            NA         NA    2.201338e+00 1.011239e+11 32.388505     35.161\n6            NA         NA              NA 1.464630e+09 18.622343     75.287\n7            NA         NA    1.028867e+01 6.449355e+11 87.945447     16.378\n8            NA         NA    5.708235e+00 1.601299e+11 38.884011     27.948\n9       5.57218    0.53274    9.096630e-01 5.548609e+11 13.311834      8.251\n10      2.75812    0.23305    3.968039e+00 1.054614e+10 32.528118     36.897\n11      6.14322         NA              NA 2.646927e+09        NA     56.707\n12           NA         NA    1.989293e+00 1.208039e+12  8.550324     14.096\n13           NA    3.08695    7.293552e-01 3.940528e+11 12.477967     41.906\n14      2.90341    0.20637    3.937400e+00 3.786752e+10 19.928664     44.657\n15           NA         NA              NA 1.183880e+10 17.367720     17.075\n16           NA         NA    4.123826e+00 3.225013e+10 70.816208     10.814\n17      1.53554         NA    1.380750e+00 2.214152e+11 60.845785     64.142\n18      5.09272         NA              NA 4.529050e+09 23.080176     68.841\n19      4.94655    0.50063    1.191985e+00 4.774906e+10 18.765580     21.866\n20           NA    2.48835    9.094851e-01 4.697387e+11 12.886518      2.039\n21      7.06045         NA    1.253084e+00 1.806646e+09 23.011892     54.399\n22      3.99469         NA    1.216322e+00 8.573160e+09 38.999959     53.232\n23           NA         NA              NA           NA 11.646359      0.000\n24      6.80557         NA              NA 2.219676e+09 37.926503     59.833\n25           NA         NA    1.757835e+00 3.394113e+10 21.568987     30.920\n26           NA    0.21597    8.993755e-01 1.691109e+10 27.747669     52.124\n27           NA         NA    3.052535e+00 1.564863e+10 23.094386     31.300\n28           NA    1.26578    1.410026e+00 1.796275e+12 12.706629     13.691\n29      4.42541         NA    2.879225e+00 1.140065e+10  5.903065     22.688\n30           NA    0.78006    1.554292e+00 5.324095e+10 19.149132     25.331\n31           NA         NA    1.436230e+00 1.088636e+10 42.935593     71.257\n32      4.61813         NA    1.983154e+00 2.959185e+09 38.896268     87.294\n33      5.36651         NA    5.420811e-01 1.663009e+09 34.778700     34.739\n34           NA         NA    2.087211e+00 2.001675e+10 25.614292     77.020\n35      2.68755         NA    1.316594e+00 3.262154e+10 72.793096     44.223\n36           NA    1.60407    1.253960e+00 1.526954e+12  6.428383     18.650\n37           NA    0.32217    2.151363e+00 1.009092e+10 66.029205     77.142\n38      5.35064    0.36244    1.910062e+00 2.500362e+11 21.036299     12.510\n39           NA    2.10826    1.908845e+00 1.119099e+13 52.664596     42.040\n40           NA    0.50167    1.879581e+00 2.045376e+10 17.294406     33.164\n41      4.52091    0.26955    3.102233e+00 2.828561e+11 16.527210     19.554\n42           NA         NA              NA 1.024262e+09 20.546825     71.216\n43           NA         NA    6.167053e+00 9.035848e+09 46.638220     33.541\n44      2.11869         NA    6.987736e-01 3.713480e+10 44.909264     56.120\n45           NA    4.22744    2.554898e+00 1.414804e+12 25.039425     18.497\n46           NA         NA              NA           NA 32.007452     38.322\n47      7.11873    0.45775    0.000000e+00 5.715799e+10 15.725920     21.440\n48      4.94837         NA    1.280443e+00 3.539000e+10 25.886266     49.674\n49           NA    0.84581    1.436931e+00 5.164088e+10 17.901772     43.333\n50           NA    0.34865              NA 9.137000e+10 19.706047     23.023\n51           NA         NA              NA           NA        NA     10.797\n52           NA    2.87125    1.174356e+00 3.119881e+11 10.029653     12.243\n53           NA         NA              NA 1.764268e+09 45.549618     22.352\n54           NA         NA              NA 5.754682e+08 19.493154     29.819\n55           NA         NA    2.445253e+00 9.993770e+10 14.886101     36.330\n56           NA    0.70848    1.285924e+00 3.329278e+11 86.999452     57.295\n57      3.86991    0.14662    9.005177e-01 2.391223e+10 24.472292     28.725\n58           NA    0.96366              NA 3.570451e+11 40.917510     13.752\n59           NA    2.00202    9.982137e-01 4.470860e+10 16.023980     45.727\n60           NA    1.18549    1.242562e+00 1.237499e+12  9.697928     19.920\n61           NA    2.74418    3.149222e+00 1.870719e+13  7.409442     17.942\n62           NA    1.28129    2.098303e+00 2.398430e+10  6.732124     31.283\n63           NA         NA    1.752853e+00 3.817430e+09 17.168787     76.375\n64           NA         NA    6.596553e-01 7.300098e+10 38.978738     79.690\n65           NA    1.09557    4.262469e+00 1.282664e+12 16.160224     25.708\n66           NA         NA    9.010199e-01 4.671313e+09 10.840160     44.258\n67           NA         NA    1.390559e+00 3.048891e+11 18.069799     53.318\n68           NA    2.74645    1.437758e+00 2.390095e+11  5.861331     14.675\n69           NA    2.24805    2.255229e+00 2.465134e+12 11.814964     19.820\n70           NA         NA    2.055644e+00 1.401437e+10 44.385548     11.024\n71      3.08513         NA              NA 1.442299e+09 33.982639     39.401\n72      3.78477    0.30104    2.225139e+00 1.437802e+10 22.196055     41.769\n73      5.76632         NA    4.060351e-01 5.500973e+10 34.713514     44.593\n74           NA         NA              NA           NA        NA      0.000\n75     10.29313         NA              NA 1.061631e+09 22.722687     63.836\n76           NA    1.00700    2.506157e+00 1.952224e+11 16.218266     21.276\n77           NA         NA              NA 2.705899e+09 11.602179     13.426\n78           NA         NA              NA 5.793000e+09 11.634407      5.301\n79      2.83281         NA    3.732213e-01 6.866365e+10 24.070649     49.320\n80      2.51800         NA    2.332467e+00 8.694360e+09 26.062490     64.207\n81           NA         NA              NA 1.126090e+10 53.240621     28.354\n82           NA         NA              NA 1.178205e+09 29.774702     57.055\n83      6.06100         NA    1.443677e+00 3.504024e+09 22.375575     73.462\n84      2.44959         NA    8.874827e-04 7.970649e+09 15.019824     45.654\n85      6.30177         NA    1.578230e+00 2.164394e+10 20.628851     43.543\n86      3.29265    0.79144              NA 3.208812e+11        NA      0.000\n87           NA    1.20606    1.054927e+00 1.260080e+11 15.926048     28.938\n88           NA         NA    2.493046e+00 2.290432e+12 90.873210     66.400\n89           NA         NA    8.093374e-01 9.318774e+11 16.502653     45.341\n90      3.36576         NA    3.099259e+00 4.189767e+11 38.978760     25.606\n91           NA    0.03631    3.855106e+00 1.705596e+11 61.636236     29.722\n92           NA    1.17681    3.567806e-01 3.022429e+11  8.208577     37.053\n93           NA         NA              NA 6.592628e+09        NA     47.542\n94           NA         NA              NA           NA        NA         NA\n95           NA    2.07540    0.000000e+00 2.071602e+10  6.481147      6.227\n96           NA         NA              NA           NA        NA      0.000\n97           NA         NA              NA           NA        NA     69.086\n98           NA         NA              NA           NA        NA     58.086\n99           NA         NA              NA 1.944979e+08 10.241332     23.366\n100          NA         NA              NA 1.232699e+09 11.879122     76.714\n101          NA         NA              NA           NA        NA      7.183\n102          NA         NA              NA           NA 10.265312      4.397\n103          NA         NA              NA           NA        NA     52.663\n104          NA    4.25121    4.725543e+00 3.193779e+11 21.381102      7.664\n105          NA    1.28566    1.522313e+00 1.869117e+12 16.750712     29.856\n106     5.31866         NA    9.035378e-01 1.407214e+10 13.404151     44.622\n107     3.46746    3.14081    9.349600e-01 4.949273e+12 11.704778      8.465\n108     3.89621    0.33201    4.797788e+00 3.865473e+10 33.006081      9.253\n109     2.97810    0.14179    8.412225e-01 1.372783e+11 13.824288     42.664\n110     5.36267         NA    1.230708e+00 7.087522e+10 28.578374     73.438\n111     6.58615    0.11121    3.158171e+00 6.813092e+09 22.737768     63.865\n112          NA         NA              NA 1.783289e+08 10.640856     46.738\n113          NA         NA              NA 6.714712e+09        NA         NA\n114          NA    0.07878    5.751166e+00 1.109123e+11 60.745160      0.000\n115          NA         NA    2.230775e+00 2.323420e+09 28.028654     72.270\n116          NA    0.44292    1.721654e+00 2.769547e+10 13.426458     31.925\n117          NA         NA    4.513849e+00 5.148391e+10 30.621111     11.571\n118     4.00885         NA    6.381542e-01 3.277826e+09 17.984112     49.303\n119          NA         NA              NA 2.622166e+10 54.254682     20.183\n120          NA         NA              NA 6.214634e+09        NA     85.685\n121          NA    0.84724    1.748494e+00 4.297337e+10 11.853282     32.484\n122          NA    1.24366    5.060577e-01 5.896124e+10 10.364637      9.273\n123          NA    0.43287    9.825918e-01 1.067247e+10 29.726945     42.252\n124          NA    0.01498    5.852912e-01 1.000119e+10 22.542283     63.478\n125     4.82754         NA    1.125453e+00 2.967529e+11 16.035809     24.553\n126     4.74857         NA    7.701816e-01 5.433040e+09 23.565921     83.286\n127     4.25199         NA              NA 4.414056e+09  7.795821     60.620\n128     3.09071         NA    3.054094e+00 1.401079e+10 38.526606     58.428\n129          NA    0.59697    5.317390e-01 1.127402e+10 13.909543      5.454\n130          NA         NA              NA 1.250000e+09  9.892981      8.470\n131          NA         NA    3.152900e+00 1.033453e+11 32.593541     38.092\n132     5.01360         NA    1.806503e-01 1.223246e+10 14.457827     59.159\n133     2.63107         NA              NA 4.739299e+09 47.422992     47.176\n134          NA    0.48650    5.017429e-01 1.077780e+12 20.921116     20.133\n135     1.37102         NA              NA 6.468252e+09        NA      0.000\n136     5.18212    0.18342    7.371034e-01 1.118673e+10 40.112849     31.637\n137          NA         NA    1.667099e+00 4.374131e+09 20.781814     33.523\n138          NA         NA    8.146646e-01 1.098136e+10 21.298695     64.545\n139          NA         NA    2.483304e+00 6.325618e+10 35.557453     69.678\n140          NA         NA    3.382267e+00 1.128126e+10 25.358765     50.995\n141          NA         NA              NA 1.020601e+08        NA      0.000\n142     4.44099         NA    1.552752e+00 2.118592e+10 99.734374     80.664\n143     4.11264         NA    6.099227e-01 1.318499e+10 17.614180     41.701\n144     4.04160         NA    2.674758e+00 7.528285e+09 94.053818     83.650\n145          NA         NA    4.117073e-01 4.046495e+11 71.798174     50.481\n146          NA    2.03222    1.643376e+00 3.713448e+11  6.956520     18.129\n147          NA         NA              NA           NA        NA     29.744\n148     6.30374         NA    1.158444e+00 1.892860e+11  5.956001     13.534\n149     6.10957    0.25511    1.207272e+01 6.594148e+10 41.115238     16.440\n150          NA    2.03247    1.225072e+00 7.835282e+11 12.034408      8.923\n151     2.49180         NA    3.495483e+00 2.786546e+11 58.282419     63.558\n152          NA         NA              NA 3.039845e+08        NA     20.635\n153          NA         NA    0.000000e+00 5.795759e+10 11.400054     32.635\n154          NA    0.03294    4.875105e-01 1.902812e+10 12.294418     86.898\n155     4.52037    0.15366    1.184159e+00 3.605428e+10 11.909081     38.700\n156     3.81827    0.12024    9.773834e-01 1.916397e+11 24.786728     22.280\n157          NA         NA              NA           NA        NA     38.216\n158          NA    0.96538    1.956786e+00 4.719921e+11 20.877822     39.895\n159          NA    1.26565    1.733643e+00 2.062757e+11  8.160752     35.348\n160          NA         NA              NA 1.039608e+11  8.349033      6.413\n161          NA         NA              NA 1.517321e+11 91.187328      0.922\n162     3.08310    0.23367              NA 4.531088e+10        NA      0.000\n163     5.54179    1.68847    1.834837e+00 2.659239e+12 10.472690     16.857\n164          NA         NA              NA           NA 43.757259     46.500\n165          NA         NA    1.323566e+00 1.755468e+09 56.828497     59.020\n166          NA    1.67830    1.051767e+00 1.950903e+11 16.071245     26.325\n167     6.66130    0.32888    4.206777e-01 6.795731e+09 16.251033     57.443\n168          NA         NA              NA 1.580571e+10 25.109538     65.632\n169          NA         NA    6.619087e-01 7.234297e+10 13.726321     19.723\n170          NA    0.78965    1.188659e+00 8.984836e+10 17.562911     46.249\n171     5.71773         NA              NA 1.342570e+10 33.225630     24.106\n172          NA    0.48209    1.971667e+00 1.884941e+11 14.611340     46.064\n173     3.53979         NA    9.745173e-01 8.475682e+09 43.210217     82.875\n174          NA         NA              NA 9.589732e+08        NA     69.227\n175     4.08105         NA              NA 7.866400e+08 11.548027     81.548\n176          NA         NA              NA 6.530000e+08 12.473820     12.830\n177          NA         NA              NA 1.564381e+09        NA      2.928\n178     5.79986         NA              NA 7.707622e+08 22.200516     48.216\n179     5.71024         NA              NA 1.635675e+09 22.400817     81.388\n180     5.07533         NA              NA 3.542375e+08 28.539584     28.032\n181     6.62561         NA    1.896635e+00 1.897389e+10 40.695826     53.260\n182     3.86178    0.89059    1.828501e+00 3.829985e+10 24.726358     44.058\n183     4.41832    0.22162    1.565582e+00 1.427525e+09 20.178649     43.739\n184     3.06023         NA    7.233298e-01 3.556037e+09 21.625947     58.364\n185          NA         NA    3.321162e+00 3.097639e+11 19.078256      0.000\n186          NA         NA              NA           NA        NA      0.000\n187          NA         NA              NA 6.761999e+09 32.034584     55.609\n188     3.47508         NA    2.171972e+00 8.178742e+10 11.099617     81.616\n189     5.94059         NA    1.047490e+00 2.957466e+11 25.102205     34.150\n190          NA         NA    3.183156e+00 9.558438e+10 55.370834     65.630\n191          NA    3.25490    1.025254e+00 5.122052e+11  6.184665     12.854\n192     5.12430         NA    6.836302e-01 6.701811e+11 10.303100     26.239\n193          NA         NA              NA 3.152174e+09 24.780011     33.959\n194          NA    0.78133    1.422584e+00 4.117552e+11 26.256727     50.800\n195          NA         NA    1.137277e+00 4.977402e+10 29.076641     66.947\n196          NA    0.10685              NA 6.952678e+09 46.152185     73.018\n197          NA         NA    9.069040e-01 2.521000e+09 19.257209     69.788\n198     5.06326         NA    1.935261e+00 4.457733e+09 35.731336     58.838\n199          NA         NA              NA 4.011175e+08 10.785479     76.831\n200          NA    0.09175    8.911694e-01 2.229559e+10 24.108568     46.795\n201          NA    0.59989    2.070079e+00 4.180838e+10 37.655994     31.358\n202          NA         NA              NA 3.618000e+10 21.767721     48.847\n203          NA         NA    2.178140e+00 8.637217e+11 44.311526     25.356\n204          NA         NA              NA 3.657261e+07        NA     38.470\n205     5.01437    0.48384    3.412975e+00 9.335599e+10 20.309776     30.754\n206     2.55882         NA    1.675066e+00 2.413366e+10 50.494321     76.804\n207          NA    0.40845    2.051628e+00 5.268761e+10  9.274883      4.760\n208     6.91097    0.22139              NA 6.744571e+10 28.455901     49.450\n209          NA         NA              NA 7.879426e+08 11.652777     74.837\n210          NA    0.11867    4.878441e-01           NA 17.008554     11.817\n211          NA         NA    2.286511e+00 2.052762e+11 29.626728     64.787\n212          NA         NA              NA 3.643665e+10 50.456007     63.984\n213          NA         NA    1.341520e+00 2.095475e+10 27.438035     57.024\n214          NA         NA    1.970583e+00 2.054868e+10 22.251671     67.763\n    tierrasCult16 continente\n1     11.83867904       Asia\n2     22.63868569     Europa\n3     33.67013968     Europa\n4      1.65957441     Europa\n5      3.93037619     Africa\n6      9.09090909    América\n7      1.61744251       Asia\n8      3.10873571     Africa\n9     14.32387300    América\n10    15.67966259       Asia\n11    11.11111111    América\n12     5.98646389    Oceanía\n13    16.29230665     Europa\n14    24.18047659       Asia\n15     0.79920080    América\n16     2.05655522       Asia\n17    59.64669249       Asia\n18    16.27906977    América\n19    28.00066795     Europa\n20    28.05151996     Europa\n21     3.41955283    América\n22    23.94466123     Africa\n23     5.55555568    América\n24     2.62164436       Asia\n25     4.11058802    América\n26    20.03906250     Europa\n27     0.45806646     Africa\n28     9.68827993    América\n29     0.94876660       Asia\n30    32.20338983     Europa\n31    21.92982456     Africa\n32    46.72897196     Africa\n33    12.40694789     Africa\n34    21.52730569       Asia\n35    13.11586385     Africa\n36     4.81288303    América\n37     3.89135959     Africa\n38     1.70779468    América\n39    12.66482109       Asia\n40     9.15909061     Europa\n41     1.52194680    América\n42    34.92745721     Africa\n43     1.61054173     Africa\n44     3.13182329     Africa\n45    14.57600286       Asia\n46    19.51665144       Asia\n47     4.84723854    América\n48     9.11949686     Africa\n49    15.58255897     Europa\n50    28.73870316    América\n51             NA    América\n52    56.56108597     Europa\n53     0.08628128     Africa\n54     8.00000000    América\n55     3.92977935    América\n56     2.79950778     Africa\n57    35.56949807    América\n58     0.62658406       Asia\n59     9.12918327     Europa\n60    24.69589497     Europa\n61    16.64540384    América\n62    16.01104210     Europa\n63    10.17441860     Africa\n64    15.11900000     Africa\n65     7.51803124       Asia\n66     9.03119869    Oceanía\n67    18.74769427       Asia\n68     7.39034583     Europa\n69    33.52330476     Europa\n70     1.26130322     Africa\n71    43.47826087     Africa\n72     4.95035257       Asia\n73    20.65570889     Africa\n74             NA     Europa\n75     8.82352941    América\n76    16.60201707     Europa\n77             NA    América\n78     1.85185185    Oceanía\n79     8.04404629    América\n80    12.61598567     Africa\n81     4.27807487     Africa\n82    10.66856330     Africa\n83     2.13360427    América\n84    38.82438316    América\n85     9.11609617    América\n86     2.85714286       Asia\n87    47.76317243     Europa\n88    52.62462204       Asia\n89    12.97217331       Asia\n90     9.01728923       Asia\n91    11.51734030       Asia\n92     6.47408913     Europa\n93    41.22807018     Europa\n94             NA    América\n95     1.20698254     Europa\n96     0.83333335    América\n97    19.69697094     Europa\n98     2.14899704     Europa\n99    11.11111111    Oceanía\n100    0.71454091    Oceanía\n101    1.05263158    América\n102    2.85714286    América\n103    6.66666667    América\n104   13.63216266       Asia\n105   22.44509417     Europa\n106   11.08033241    América\n107   11.47684880       Asia\n108    2.67244869       Asia\n109   10.88824684       Asia\n110   10.19081421     Africa\n111    6.71532847       Asia\n112    2.46913580    Oceanía\n113            NA     Europa\n114    0.44893378       Asia\n115   11.59420290     Africa\n116   20.71405597     Europa\n117   12.90322581       Asia\n118    5.19102990     Africa\n119    0.97752822     Africa\n120   13.50000054     Europa\n121   34.20388926     Europa\n122   25.45679037     Europa\n123   16.49484536     Europa\n124    6.01581299     Africa\n125    2.68452290       Asia\n126   40.30547306     Africa\n127   13.00000032       Asia\n128    5.25409977     Africa\n129   28.34374905     Europa\n130    2.17391304    Oceanía\n131   18.21644634     Africa\n132   36.94581281     Africa\n133    0.43659649     Africa\n134   11.60626559    América\n135            NA     Europa\n136    0.36509695       Asia\n137    0.66914498     Europa\n138    7.18482159     Africa\n139   16.70239481       Asia\n140    0.97171106     Africa\n141            NA    Oceanía\n142   14.74502931       Asia\n143   12.49792255    América\n144   13.26280887     Africa\n145   37.33104955     Africa\n146    2.20509250     Europa\n147    0.34135666    Oceanía\n148    2.16474878    Oceanía\n149    0.18129241       Asia\n150   30.51350549     Europa\n151   40.26567040       Asia\n152    2.17391304    Oceanía\n153    7.57331181    América\n154    0.66245639    Oceanía\n155   12.08155047    América\n156    2.74062500    América\n157    0.68306011    Oceanía\n158   35.29181227     Europa\n159   10.68351748     Europa\n160    6.87711387    América\n161    1.23169683       Asia\n162            NA       Asia\n163   24.90807161     Europa\n164   25.38800850       Asia\n165    2.88933834     Africa\n166   32.29733230     Europa\n167   55.55792183     Europa\n168    6.60745234       Asia\n169   16.55971848    América\n170   28.01580699     Europa\n171    8.44186041       Asia\n172   37.30006954     Europa\n173   46.68422988     Africa\n174   19.23076923    América\n175    2.82685512    Oceanía\n176   15.00000000    Oceanía\n177   16.66666667     Europa\n178   12.82051282    América\n179    4.91803279    América\n180    9.06249980     Africa\n181   16.62078637     Africa\n182   29.70500800     Europa\n183    0.32608697     Africa\n184   21.94513716     Africa\n185    0.78984484       Asia\n186            NA    América\n187    1.75343514     Africa\n188   20.73034604       Asia\n189   10.30426432     Africa\n190            NA     Africa\n191    6.32098426     Europa\n192   10.08958403     Europa\n193    0.41666667    América\n194   32.90336472       Asia\n195   15.24046060     Africa\n196    5.25974494       Asia\n197   10.42367182       Asia\n198   48.72219158     Africa\n199   25.00000000    Oceanía\n200    4.87329435    América\n201   18.66632338     Africa\n202    4.12827442       Asia\n203   26.48155607     Europa\n204            NA    Oceanía\n205   56.57960607     Europa\n206   34.41053262     Africa\n207   13.77328361    América\n208   10.34320639       Asia\n209    1.64068909    Oceanía\n210    3.06105096    América\n211   22.56909730       Asia\n212    2.36377067     Africa\n213    5.11171794     Africa\n214   10.33992504     Africa"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#tabla-por-defecto",
    "href": "slides-ciclo01/cor-rls.html#tabla-por-defecto",
    "title": "Correlación: visualizaciones",
    "section": "Tabla por defecto",
    "text": "Tabla por defecto\n\n# Bibliotecas\nlibrary(tidyr)\nlibrary(dplyr)\n\n# Resumen numérico por variable\ndatos %&gt;% \n  select(-c(pais, continente)) %&gt;% \n  gather(key = \"variable\", value = \"valor\") %&gt;% \n  group_by(variable) %&gt;% \n  summarise(Promedio = mean(valor, na.rm = TRUE),\n            DE = sd(valor, na.rm = TRUE),\n            Min = min(valor, na.rm = TRUE),\n            Max = max(valor, na.rm = TRUE),\n            Mediana = median(valor, na.rm = TRUE))\n\n# A tibble: 15 × 6\n   variable        Promedio      DE           Min     Max  Mediana\n   &lt;chr&gt;              &lt;dbl&gt;   &lt;dbl&gt;         &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n 1 cajeros17        5.51e 1 4.69e 1        1.27   3.13e 2 4.58e+ 1\n 2 camas14          2.29e 0 1.57e 0        0.5    6.2 e 0 1.6 e+ 0\n 3 cto_pib16        3.03e 0 3.75e 0      -13.6    2.82e 1 3.06e+ 0\n 4 densidad17       4.49e 2 2.05e 3        0.137  2.05e 4 9.47e+ 1\n 5 desempleo17      7.36e 0 5.53e 0        0.140  2.74e 1 5.76e+ 0\n 6 deuda16          1.03e 0 1.02e 0        0.0150 4.25e 0 6.54e- 1\n 7 electri16        8.44e 1 2.64e 1        7.59   1   e 2 1   e+ 2\n 8 fertil16         4.18e 2 2.44e 3        0.402  3.02e 4 1.19e+ 2\n 9 gasto_edu16      4.53e 0 1.53e 0        1.37   1.03e 1 4.44e+ 0\n10 gasto_id16       1.03e 0 1.02e 0        0.0150 4.25e 0 6.54e- 1\n11 gasto_militar17  1.86e 0 1.62e 0        0      1.21e 1 1.44e+ 0\n12 pib16            3.79e11 1.63e12 36572612.     1.87e13 2.70e+10\n13 pm2517           2.70e 1 1.88e 1        5.86   9.97e 1 2.16e+ 1\n14 pobRural17       3.90e 1 2.38e 1        0      8.73e 1 3.83e+ 1\n15 tierrasCult16    1.42e 1 1.35e 1        0.0863 5.96e 1 1.04e+ 1"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#tabla-con-dt",
    "href": "slides-ciclo01/cor-rls.html#tabla-con-dt",
    "title": "Correlación: visualizaciones",
    "section": "Tabla con DT",
    "text": "Tabla con DT\n\n# Bibliotecas\nlibrary(DT)\n\n# Resumen numérico por variable\ndatos %&gt;% \n  select(-c(pais, continente)) %&gt;% \n  gather(key = \"variable\", value = \"valor\") %&gt;% \n  group_by(variable) %&gt;% \n  summarise(Promedio = mean(valor, na.rm = TRUE),\n            DE = sd(valor, na.rm = TRUE),\n            Min = min(valor, na.rm = TRUE),\n            Max = max(valor, na.rm = TRUE),\n            Mediana = median(valor, na.rm = TRUE)) %&gt;% \n  datatable()"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#tabla-con-knitr",
    "href": "slides-ciclo01/cor-rls.html#tabla-con-knitr",
    "title": "Correlación: visualizaciones",
    "section": "Tabla con Knitr",
    "text": "Tabla con Knitr\n\n# Bibliotecas\nlibrary(knitr)\n\n# Resumen numérico por variable\ndatos %&gt;% \n  select(-c(pais, continente)) %&gt;% \n  gather(key = \"variable\", value = \"valor\") %&gt;% \n  group_by(variable) %&gt;% \n  summarise(Promedio = mean(valor, na.rm = TRUE),\n            DE = sd(valor, na.rm = TRUE),\n            Min = min(valor, na.rm = TRUE),\n            Max = max(valor, na.rm = TRUE),\n            Mediana = median(valor, na.rm = TRUE)) %&gt;% \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\nvariable\nPromedio\nDE\nMin\nMax\nMediana\n\n\n\n\ncajeros17\n5.511960e+01\n4.692907e+01\n1.274667e+00\n3.131528e+02\n4.576590e+01\n\n\ncamas14\n2.291633e+00\n1.571654e+00\n5.000000e-01\n6.200000e+00\n1.600000e+00\n\n\ncto_pib16\n3.026401e+00\n3.751874e+00\n-1.362146e+01\n2.822384e+01\n3.062600e+00\n\n\ndensidad17\n4.493870e+02\n2.051630e+03\n1.368522e-01\n2.047918e+04\n9.467309e+01\n\n\ndesempleo17\n7.358919e+00\n5.532971e+00\n1.400000e-01\n2.744400e+01\n5.760000e+00\n\n\ndeuda16\n1.034774e+00\n1.023584e+00\n1.498000e-02\n4.251210e+00\n6.541850e-01\n\n\nelectri16\n8.435029e+01\n2.638333e+01\n7.588477e+00\n1.000000e+02\n1.000000e+02\n\n\nfertil16\n4.176058e+02\n2.442772e+03\n4.020905e-01\n3.023786e+04\n1.193096e+02\n\n\ngasto_edu16\n4.530416e+00\n1.534184e+00\n1.371020e+00\n1.029313e+01\n4.440990e+00\n\n\ngasto_id16\n1.034774e+00\n1.023584e+00\n1.498000e-02\n4.251210e+00\n6.541850e-01\n\n\ngasto_militar17\n1.863974e+00\n1.615046e+00\n0.000000e+00\n1.207272e+01\n1.436931e+00\n\n\npib16\n3.788623e+11\n1.633312e+12\n3.657261e+07\n1.870719e+13\n2.695857e+10\n\n\npm2517\n2.695940e+01\n1.882999e+01\n5.861331e+00\n9.973437e+01\n2.156899e+01\n\n\npobRural17\n3.901814e+01\n2.382689e+01\n0.000000e+00\n8.729400e+01\n3.826900e+01\n\n\ntierrasCult16\n1.417527e+01\n1.349633e+01\n8.628130e-02\n5.964669e+01\n1.042367e+01"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#descripción-del-proceso",
    "href": "slides-ciclo01/cor-rls.html#descripción-del-proceso",
    "title": "Correlación: visualizaciones",
    "section": "Descripción del proceso",
    "text": "Descripción del proceso\n\nEl proceso anterior se puede describir de la siguiente manera:\n\nDatos es la base de datos sobre la cual deseo ejecutar un proceso.\n%&gt;% operador de tubería que se lee como “entonces”“. Permite que el código sea legible, además, proporciona operaciones en cadena.\nOpcional: como la descripción numérica que se va a realizar sólo es con las variables cuantitativas, selecciono unicamente aquellas de interés, es decir, todas excepto el país y el contienente (por ser texto o factores).\nLa función gather() permite pasar de múltiples columnas a dos variables que contienen la misma información. Los argumentos necesarios para procesar son:\n\nkey: nombre de la nueva variable que contiene los encabezados (nombres de variables en la base de datos con formato ancho).\nvalue: nombre de la nueva variable que contiene valores asociados a las variables de interés.\n\nLa función group_by() permitirá agrupar por variable, es decir, que en teoría se tendrán 15 grupos (porque son 15 variables).\nLa función summarise() permite generar resúmenes numéricos en función de la agrupación previa. Los nombres Promedio, DE, Min, Max y Mediana los asigna el usuario.\nNota: el argumento na.rm = TRUE en las funciones de estadísticos descriptivos permite remover los NAs para efectuar el cálculo."
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#gráfio-x-vs-y-simple",
    "href": "slides-ciclo01/cor-rls.html#gráfio-x-vs-y-simple",
    "title": "Correlación: visualizaciones",
    "section": "Gráfio X vs Y (simple)",
    "text": "Gráfio X vs Y (simple)\n\nGráfico con todos los datos:\n\n\n# Biblioteca\nlibrary(ggplot2)\n\n# Gráfico\nggplot(data = datos, mapping = aes(x = gasto_militar17, y = gasto_edu16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n\n\n\n\n\n\n\n\n\nGráfico con filtro sobre dato “atípico” en gasto militar:\n\n\n# Gráfico\ndatos %&gt;%\n  filter(gasto_militar17 &lt;= 10) %&gt;% \n  ggplot(data = ., mapping = aes(x = gasto_militar17, y = gasto_edu16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#matriz-dispersión-1",
    "href": "slides-ciclo01/cor-rls.html#matriz-dispersión-1",
    "title": "Correlación: visualizaciones",
    "section": "Matriz Dispersión 1",
    "text": "Matriz Dispersión 1\n\n# Biblioteca\nlibrary(psych)\n\n# Matriz de dispersión\ndatos_disp &lt;- datos %&gt;%\n  select_if(is.numeric)\n\npairs.panels(datos_disp)\n\n\n\n\n\n\n\n\n\nMatriz de dispersión reducida (ejemplo):\n\n\ndatos_disp2 &lt;- datos %&gt;%\n  select(gasto_militar17, gasto_edu16, desempleo17,\n         camas14, pib16, gasto_id16)\n\npairs.panels(datos_disp2)"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#matriz-de-dispersión-ggplot2",
    "href": "slides-ciclo01/cor-rls.html#matriz-de-dispersión-ggplot2",
    "title": "Correlación: visualizaciones",
    "section": "Matriz de dispersión ggplot2",
    "text": "Matriz de dispersión ggplot2\n\n# Biblioteca\nlibrary(GGally)\n\n# Matriz de dispersión\nggpairs(datos_disp2)"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#matriz-de-correlaciones-numérica",
    "href": "slides-ciclo01/cor-rls.html#matriz-de-correlaciones-numérica",
    "title": "Correlación: visualizaciones",
    "section": "Matriz de correlaciones numérica",
    "text": "Matriz de correlaciones numérica\n\n# Obtener correlaciones (Pearson: ejemplo)\nmatriz_cor &lt;- cor(datos_disp2, use = \"pairwise.complete.obs\")\nmatriz_cor\n\n                gasto_militar17  gasto_edu16 desempleo17     camas14\ngasto_militar17     1.000000000  0.005680844  0.07243089 -0.08380492\ngasto_edu16         0.005680844  1.000000000  0.18996210  0.39890799\ndesempleo17         0.072430891  0.189962103  1.00000000  0.09568141\ncamas14            -0.083804924  0.398907991  0.09568141  1.00000000\npib16               0.049793587 -0.039946838 -0.08014070  0.12298349\ngasto_id16         -0.073199552 -0.103750960 -0.15564109  0.55237344\n                      pib16  gasto_id16\ngasto_militar17  0.04979359 -0.07319955\ngasto_edu16     -0.03994684 -0.10375096\ndesempleo17     -0.08014070 -0.15564109\ncamas14          0.12298349  0.55237344\npib16            1.00000000  0.37707683\ngasto_id16       0.37707683  1.00000000"
  },
  {
    "objectID": "slides-ciclo01/cor-rls.html#matriz-de-correlaciones-gráfica",
    "href": "slides-ciclo01/cor-rls.html#matriz-de-correlaciones-gráfica",
    "title": "Correlación: visualizaciones",
    "section": "Matriz de correlaciones gráfica",
    "text": "Matriz de correlaciones gráfica\n\nMétodo por defecto:\n\n\n# Biblioteca\nlibrary(corrplot)\n\n# Gráfico\ncorrplot(matriz_cor)\n\n\n\n\n\n\n\n\n\nOtro método gráfico:\n\n\ncorrplot(matriz_cor, method = \"pie\", type = \"upper\")"
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html",
    "href": "slides-ciclo01/Recordatorio.html",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "CTRL + L: limpiar la consola.\nCTRL + Enter: ejecutar código.\nCTRL + Shift + M: operador de tubería (%&gt;%)\nCTRL + Shift + K: compilar documentos RMardkown.\nCTRL + Alt + i: insetar chunk o fragmento de R en documento RMarkdown.\nCTRL + s: guardar de forma rápida.\nCTRL + Shift + Enter: ejecución del script completo.\n\n\n\n\n\nNuméricos: todo dato en la escala de los reales - numeric.\nEnteros: toda información cuantitativa sin decimales - integer.\nLógicos: datos dicotómicos con dos posibles resultados (TRUE o FALSE) - logical.\nCaracteres: datos tipo texto (sin jerarquia) - character.\n\nFactores: datos tipo texto (con jerarquia). De gran utilidad para manejar variables categóricas o cualitativas - factor.\n\nComplejos: datos numéricos con inclusión del número imaginario (i) - complex.\n\n\n\n\n\nVector: los vectores tiene la característica de almacenar información de un sólo tipo (por ejemplo, sólo puedo tener numéricos o caracteres, pero no ambos) - c() o vector().\nMatriz: las matrices son arreglos de dos o más dimensiones con la misma característica de los vectores, sólo permiten almacenar información de un sólo tipo - matrix().\nListas: las listas permiten almacenar información de cualquier tipo; son altamente flexibles para procesos iterativos - list().\nDataframe: similar a una hoja de cálculo en excel. Constituye la materia prima (bases de datos) para cualquier proceso de Ciencia de Datos.\nFactores: se definen como vectores de caracteres con estructura jerárquica (niveles) - factor().\n\n\n\n\n\nstr(): devuelve la estructura interna de un objeto cualquiera.\nclass(): devuelve la clase atómica de un objeto, es decir, el tipo de dato.\nlevels(): devuelve los niveles de un factor.\nnames(): observar o editar los nombres de un objeto.\nrownames(): observar o editar los nombres de las filas de una matriz o una base de datos (dataframe).\ncolnames():observar o editar los nombres de las columnas de una matriz o una base de datos (dataframe).\n\n\n\n\n\nlength(): devuelve la longitud de un objeto. La longitud de un vector es el número de datos del mismo, sin embargo, la longitud en un dataframe o una matriz es el número de columnas o variables.\ndim(): devuelve las dimensiones de una matriz o un dataframe.\nnrow(): devuelve el número de filas de un objeto.\nncol(): devuelve el número de columnas de un objeto.\n\n\n\n\n\nsummary(): resumen numérico general. Es una función genérica.\nmean(): devuelve la media. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - mean(x, na.rm = TRUE).\nmedian(): devuelve la mediana. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - median(x, na.rm = TRUE).\nmin(): devuelve el valor mínimo. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - min(x, na.rm = TRUE).\nmax(): devuelve el valor máximo. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - max(x, na.rm = TRUE).\nsd(): devuelve la desviación estándar. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - sd(x, na.rm = TRUE).\n\n\n\n\n\nvar(): devuelve la varianza. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - var(x, na.rm = TRUE).\nIQR(): devuelve el rango intercuartílico. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - IQR(x, na.rm = TRUE).\nrange(): devuelve el rango de un objeto numérico. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - range(x, na.rm = TRUE).\nquantile(): devuelve cuartiles, deciles o percentiles. La función requiere del valor de probabilidad para las medidas de posición (probs = 0.25). Si hay valores NAs se debe agregar el argumento na.rm = TRUE - quantile(x, probs = 0.25, na.rm = TRUE).\n\n\n\n\n\nread.csv(): función para importar datos en formato csv (separados por comas), donde el decimal está definido por punto (.).\nread.csv2(): función para importar datos en formato csv (separados por punto y coma), donde el decimal está dado por la com (,).\nread.table(): función para importar datos en formato txt (texto plano o sin formato), donde el decimal está dado por el punto (.)\nDatos en formato office: para importar datos en formato .xls o .xlsx es necesario instalar la biblioteca readxl e implementar la función read_xlsx() o read_xls.\nload(): función que permite importar información en formato .Rdata (formato específico del lenguaje R).\n\n\n\n\n\nwrite.csv(): función que permite exportar datos en formato .csv (separados por comas) y el decimal está definido por el punto (.).\nwrite.csv2(): función que permite exportar datos en formato .csv (separados por punto y comas) y el decimal está definido por la coma (,).\nwrite.table(): función que permite exportar datos en formato .txt (texto plano o sin formato) y el decimal está definido por el punto (.).\nDatos en formato office: para exportar datos en formato .xls o .xlsx es necesario instalar las bibliotecas writexl o WriteXLS e implementar las funciones write_xlsx() o WriteXLS(), respectivamente.\nsave(): función para exportar datos en formato .Rdata. Nota: no olvidar que la función save permite diferentes niveles de compresión a través del argumento compress.level."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#atajos-del-teclado",
    "href": "slides-ciclo01/Recordatorio.html#atajos-del-teclado",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "CTRL + L: limpiar la consola.\nCTRL + Enter: ejecutar código.\nCTRL + Shift + M: operador de tubería (%&gt;%)\nCTRL + Shift + K: compilar documentos RMardkown.\nCTRL + Alt + i: insetar chunk o fragmento de R en documento RMarkdown.\nCTRL + s: guardar de forma rápida.\nCTRL + Shift + Enter: ejecución del script completo."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#tipos-de-datos-en-r",
    "href": "slides-ciclo01/Recordatorio.html#tipos-de-datos-en-r",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "Numéricos: todo dato en la escala de los reales - numeric.\nEnteros: toda información cuantitativa sin decimales - integer.\nLógicos: datos dicotómicos con dos posibles resultados (TRUE o FALSE) - logical.\nCaracteres: datos tipo texto (sin jerarquia) - character.\n\nFactores: datos tipo texto (con jerarquia). De gran utilidad para manejar variables categóricas o cualitativas - factor.\n\nComplejos: datos numéricos con inclusión del número imaginario (i) - complex."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#objetos-estructurados",
    "href": "slides-ciclo01/Recordatorio.html#objetos-estructurados",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "Vector: los vectores tiene la característica de almacenar información de un sólo tipo (por ejemplo, sólo puedo tener numéricos o caracteres, pero no ambos) - c() o vector().\nMatriz: las matrices son arreglos de dos o más dimensiones con la misma característica de los vectores, sólo permiten almacenar información de un sólo tipo - matrix().\nListas: las listas permiten almacenar información de cualquier tipo; son altamente flexibles para procesos iterativos - list().\nDataframe: similar a una hoja de cálculo en excel. Constituye la materia prima (bases de datos) para cualquier proceso de Ciencia de Datos.\nFactores: se definen como vectores de caracteres con estructura jerárquica (niveles) - factor()."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-generales-1",
    "href": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-generales-1",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "str(): devuelve la estructura interna de un objeto cualquiera.\nclass(): devuelve la clase atómica de un objeto, es decir, el tipo de dato.\nlevels(): devuelve los niveles de un factor.\nnames(): observar o editar los nombres de un objeto.\nrownames(): observar o editar los nombres de las filas de una matriz o una base de datos (dataframe).\ncolnames():observar o editar los nombres de las columnas de una matriz o una base de datos (dataframe)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-generales-2",
    "href": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-generales-2",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "length(): devuelve la longitud de un objeto. La longitud de un vector es el número de datos del mismo, sin embargo, la longitud en un dataframe o una matriz es el número de columnas o variables.\ndim(): devuelve las dimensiones de una matriz o un dataframe.\nnrow(): devuelve el número de filas de un objeto.\nncol(): devuelve el número de columnas de un objeto."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-numéricas-1",
    "href": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-numéricas-1",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "summary(): resumen numérico general. Es una función genérica.\nmean(): devuelve la media. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - mean(x, na.rm = TRUE).\nmedian(): devuelve la mediana. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - median(x, na.rm = TRUE).\nmin(): devuelve el valor mínimo. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - min(x, na.rm = TRUE).\nmax(): devuelve el valor máximo. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - max(x, na.rm = TRUE).\nsd(): devuelve la desviación estándar. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - sd(x, na.rm = TRUE)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-numéricas-2",
    "href": "slides-ciclo01/Recordatorio.html#funciones-auxiliares-numéricas-2",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "var(): devuelve la varianza. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - var(x, na.rm = TRUE).\nIQR(): devuelve el rango intercuartílico. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - IQR(x, na.rm = TRUE).\nrange(): devuelve el rango de un objeto numérico. Si hay valores NAs se debe agregar el argumento na.rm = TRUE - range(x, na.rm = TRUE).\nquantile(): devuelve cuartiles, deciles o percentiles. La función requiere del valor de probabilidad para las medidas de posición (probs = 0.25). Si hay valores NAs se debe agregar el argumento na.rm = TRUE - quantile(x, probs = 0.25, na.rm = TRUE)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#funciones-para-importar-datos",
    "href": "slides-ciclo01/Recordatorio.html#funciones-para-importar-datos",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "read.csv(): función para importar datos en formato csv (separados por comas), donde el decimal está definido por punto (.).\nread.csv2(): función para importar datos en formato csv (separados por punto y coma), donde el decimal está dado por la com (,).\nread.table(): función para importar datos en formato txt (texto plano o sin formato), donde el decimal está dado por el punto (.)\nDatos en formato office: para importar datos en formato .xls o .xlsx es necesario instalar la biblioteca readxl e implementar la función read_xlsx() o read_xls.\nload(): función que permite importar información en formato .Rdata (formato específico del lenguaje R)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#funciones-para-exportar-datos",
    "href": "slides-ciclo01/Recordatorio.html#funciones-para-exportar-datos",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "",
    "text": "write.csv(): función que permite exportar datos en formato .csv (separados por comas) y el decimal está definido por el punto (.).\nwrite.csv2(): función que permite exportar datos en formato .csv (separados por punto y comas) y el decimal está definido por la coma (,).\nwrite.table(): función que permite exportar datos en formato .txt (texto plano o sin formato) y el decimal está definido por el punto (.).\nDatos en formato office: para exportar datos en formato .xls o .xlsx es necesario instalar las bibliotecas writexl o WriteXLS e implementar las funciones write_xlsx() o WriteXLS(), respectivamente.\nsave(): función para exportar datos en formato .Rdata. Nota: no olvidar que la función save permite diferentes niveles de compresión a través del argumento compress.level."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#introducción",
    "href": "slides-ciclo01/Recordatorio.html#introducción",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "Introducción",
    "text": "Introducción\n\nEl tidyverse no es una biblioteca en sí misma, es un grupo de bibliotecas o componentes que conforman el paradigma de programación de datos ordenados (tidydata).\nLos datos ordenados tienen las siguientes tres características:\n\nCada fila es una observación, individuo o registro.\nCada columna es una variable.\nCada celda es un dato.\n\nAlgunas de las bibliotecas que componen el tidyverse son: dplyr, tidyr, ggplot2.\nEl tidyverse posee la particularidad de concatenar procesos a través del operador de tubería (%&gt;%)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#manejo-de-datos-con-dplyr",
    "href": "slides-ciclo01/Recordatorio.html#manejo-de-datos-con-dplyr",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "Manejo de datos con dplyr",
    "text": "Manejo de datos con dplyr\n\nfilter(): filtrar filas bajo una o más condiciones.\nslice(): seleccionar filas basado en la indexación (posición).\narrange(): ordenar filas en función de algún criterio. Por defecto la función ordena las filas de manera ascendente, sin embargo, con el argumento desc es posible cambiar dicho orden.\nselect(): seleccionar columnas por nombre.\nrename(): editar nombres de variables.\nmutate(): editar o crear nuevas variables en función de las existentes.\ngroup_by(): permite conformar grupos “latentes” para resúmenes numéricos. La gran mayoría de veces está acompañada de la función summarise().\nsummarise(): permite obtener resúmenes numéricos para variables de interés (agrupadas o sin agrupar)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#conversión-de-formatos-con-tidyr",
    "href": "slides-ciclo01/Recordatorio.html#conversión-de-formatos-con-tidyr",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "Conversión de formatos con tidyr",
    "text": "Conversión de formatos con tidyr\n\nLa biblioteca tidyr permite conversiones de formatos. Es de utilidad para pasar de formatos largos a achos o viceversa.\ngather(): conversión de formato ancho a largo, es decir, que permite disminuir la dimensialidad de los datos (reducir el número de variables).\nspread(): conversión de formato largo a ancho, es decir, que permite aumentar la dimensionalidad de los datos (aumentar el número de columnas).\nCaracterística principal: siempre cualquiera de las dos funciones debe contener una llave (key) y un valor (value) asociado a dicha llave.\nLas funciones separate() y unite() son de utilidad para separar o unir columnas."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#visualización-con-ggplot2",
    "href": "slides-ciclo01/Recordatorio.html#visualización-con-ggplot2",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "Visualización con ggplot2",
    "text": "Visualización con ggplot2\n\nggplot2 permite visualizar gráficos con instrucciones dadas por capas.\nSintaxis principal:\n\n1era capa: ggplot(data = datos, mapping = aes(x, y))\n2da capa: asignación de objetos geométricos con las funciones que tiene el prefijo geom_:\n\ngeom_boxplot(), geom_histogram(), geom_density(), geom_point(), geom_bar(), geom_col, entre otras.\n\n3ra capa: asignación de rótulos. Es posible hacerlo con la función labs().\nCada capa se adiciona con el símbolo más (+)."
  },
  {
    "objectID": "slides-ciclo01/Recordatorio.html#pasos-a-seguir",
    "href": "slides-ciclo01/Recordatorio.html#pasos-a-seguir",
    "title": "Recordatorio Semillero R 2019-01",
    "section": "Pasos a seguir…",
    "text": "Pasos a seguir…\n\nCrear un archivo con formato .css (darle un nombre) en el mismo directorio de trabajo.\nEditar o incorporar clases para formatos específicos de texto.\nDar nombre a la clase en css (puede ser cualquiera) seguido de las llaves {}. Dentro de las llaves se indican los formatos específicos; en este caso, el color. rojo {color: red;}\nIncorporar en los metadatos (con la opción css) el archivo (.css) que determina el estilo del documento.\nHacer uso de la clase específica de la siguiente manera: &lt;clase&gt;Texto&lt;/clase&gt;. Texto en color rojo\nMayor información en W3Schools."
  }
]